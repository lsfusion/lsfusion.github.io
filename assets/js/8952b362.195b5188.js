(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[45190],{3905:function(t,e,r){"use strict";r.d(e,{Zo:function(){return s},kt:function(){return k}});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},l=Object.keys(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var p=n.createContext({}),u=function(t){var e=n.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},s=function(t){var e=u(t.components);return n.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),c=u(r),k=a,d=c["".concat(p,".").concat(k)]||c[k]||m[k]||l;return r?n.createElement(d,o(o({ref:e},s),{},{components:r})):n.createElement(d,o({ref:e},s))}));function k(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=r.length,o=new Array(l);o[0]=c;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},44221:function(t,e,r){"use strict";r.r(e),r.d(e,{frontMatter:function(){return o},metadata:function(){return i},toc:function(){return p},default:function(){return s}});var n=r(22122),a=r(19756),l=(r(67294),r(3905)),o={title:"Arithmetic operators (+, -, *, ...)"},i={unversionedId:"Arithmetic_operators_+_-_..._",id:"Arithmetic_operators_+_-_..._",isDocsHomePage:!1,title:"Arithmetic operators (+, -, *, ...)",description:"Arithmetic operators\xa0create properties whose value is the result of an arithmetic operation.\xa0The arguments of these operators must be\xa0properties whose values are instances of number classes . The platform currently supports the following arithmetic operators:",source:"@site/docs/Arithmetic_operators_+_-_..._.md",sourceDirName:".",slug:"/Arithmetic_operators_+_-_..._",permalink:"/next/Arithmetic_operators_+_-_..._",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/Arithmetic_operators_+_-_..._.md",version:"current",lastUpdatedAt:1617800626,formattedLastUpdatedAt:"4/7/2021",frontMatter:{title:"Arithmetic operators (+, -, *, ...)"},sidebar:"learn",previous:{title:"Primitive operations",permalink:"/next/Primitive_operations"},next:{title:"Logical operators (AND, OR, NOT, XOR)",permalink:"/next/Logical_operators_AND_OR_NOT_XOR_"}},p=[{value:"Determining the result class",id:"determining-the-result-class",children:[]},{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],u={toc:p};function s(t){var e=t.components,r=(0,a.Z)(t,["components"]);return(0,l.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Arithmetic operators"),"\xa0create ",(0,l.kt)("a",{parentName:"p",href:"/next/Properties"},"properties")," whose value is the result of an arithmetic operation.\xa0The arguments of these operators must be\xa0properties whose values are instances of ",(0,l.kt)("a",{parentName:"p",href:"/next/Built-in_classes"},"number classes")," . The platform currently supports the following arithmetic operators:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Operator"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"),(0,l.kt)("th",{parentName:"tr",align:null},"Result"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"+")),(0,l.kt)("td",{parentName:"tr",align:null},"Summation"),(0,l.kt)("td",{parentName:"tr",align:null},"Takes two input operands and returns their sum"),(0,l.kt)("td",{parentName:"tr",align:null},"3 + 5"),(0,l.kt)("td",{parentName:"tr",align:null},"8")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"-")),(0,l.kt)("td",{parentName:"tr",align:null},"Difference"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"Accepts two input operands and returns their difference"),(0,l.kt)("br",null),(0,l.kt)("p",null,"This operator also has a unary form, in which case the first operand is considered equal to 0")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"5 - 3"),(0,l.kt)("br",null),(0,l.kt)("p",null,"-3")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"2"),(0,l.kt)("br",null),(0,l.kt)("p",null,"-3"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"*")),(0,l.kt)("td",{parentName:"tr",align:null},"Multiplication"),(0,l.kt)("td",{parentName:"tr",align:null},"Accepts two input operands and returns their product"),(0,l.kt)("td",{parentName:"tr",align:null},"3 * 5"),(0,l.kt)("td",{parentName:"tr",align:null},"15")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"/")),(0,l.kt)("td",{parentName:"tr",align:null},"Ratio"),(0,l.kt)("td",{parentName:"tr",align:null},"Takes two input operands and returns their ratio"),(0,l.kt)("td",{parentName:"tr",align:null},"15 / 3"),(0,l.kt)("td",{parentName:"tr",align:null},"5")))),(0,l.kt)("p",null,"All of these operators return ",(0,l.kt)("strong",{parentName:"p"},"NULL")," if one of the operands is ",(0,l.kt)("strong",{parentName:"p"},"NULL")," . It is also possible to use a special form of summation and difference operators with\xa0brackets, in which case ",(0,l.kt)("strong",{parentName:"p"},"NULL")," will be equivalent to 0. The reverse is also true for these type of operators: if the result of an operator in such form is 0, then ",(0,l.kt)("strong",{parentName:"p"},"NULL is returned")," (e. g., 5 (-) 5 = ",(0,l.kt)("strong",{parentName:"p"},"NULL"),"):"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",null,"Operator")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",null,"Name")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",null,"Description")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",null,"Example")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",null,"Result")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"(+)")),(0,l.kt)("td",{parentName:"tr",align:null},"Summation"),(0,l.kt)("td",{parentName:"tr",align:null},"Takes two input operands and returns their sum, treating ",(0,l.kt)("strong",null,"NULL")," as 0"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"3 (+) 5"),(0,l.kt)("br",null),(0,l.kt)("p",null,"3 (+) ",(0,l.kt)("strong",null,"NULL"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"8"),(0,l.kt)("br",null),(0,l.kt)("p",null,"3"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"(-)")),(0,l.kt)("td",{parentName:"tr",align:null},"Difference"),(0,l.kt)("td",{parentName:"tr",align:null},"Takes two input operands and returns their difference, treating ",(0,l.kt)("strong",null,"NULL")," as 0"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"5 (-) 3"),(0,l.kt)("br",null),(0,l.kt)("p",null,"5 (-) ",(0,l.kt)("strong",null,"NULL")),(0,l.kt)("br",null),(0,l.kt)("p",null,"5 (-) 5")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",null,"2"),(0,l.kt)("br",null),(0,l.kt)("p",null,"5"),(0,l.kt)("br",null),(0,l.kt)("p",null,(0,l.kt)("strong",null,"NULL")))))),(0,l.kt)("h3",{id:"determining-the-result-class"},"Determining the result class"),(0,l.kt)("p",null,"The result class is determined as:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Operator"),(0,l.kt)("th",{parentName:"tr",align:null},"Result"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"+"),", ",(0,l.kt)("strong",null,"-")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/next/Built-in_classes#commonparentclass"},"Common ancestor"),' ("Numbers" family)')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"*")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("pre",null,(0,l.kt)("code",null,"NUMERIC","[p1.IntegerPart + p1.Precision + p2.IntegerPart + p2.Precision, p1.Precision + p2.Precision]")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",null,"/")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("pre",null,(0,l.kt)("code",null,"NUMERIC","[p1.IntegerPart + p1.Precision + p2.IntegerPart + p2.Precision, p1.Precision + p2.IntegerPart]")))))),(0,l.kt)("h3",{id:"language"},"Language"),(0,l.kt)("p",null,"Description ",(0,l.kt)("a",{parentName:"p",href:"/next/Arithmetic_operators"},"of arithmetic operators"),"."),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lsf"},"sum(a, b) = a + b;\ntransform(a, b, c) = -a * (b (+) c);\n")))}s.isMDXComponent=!0}}]);