(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[80235],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return f}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(n),f=r,u=c["".concat(l,".").concat(f)]||c[f]||d[f]||i;return n?a.createElement(u,o(o({ref:t},m),{},{components:n})):a.createElement(u,o({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},52058:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var a=n(22122),r=n(19756),i=(n(67294),n(3905)),o={title:"Projects"},s=void 0,l={unversionedId:"Projects",id:"version-v4/Projects",isDocsHomePage:!1,title:"Projects",description:"Project is a collection of modules and additional information (pictures, report design files, etc.) that fully describe the functionality of the information system being created.",source:"@site/versioned_docs/version-v4/Projects.md",sourceDirName:".",slug:"/Projects",permalink:"/Projects",editUrl:"https://github.com/lsfusion/platform/edit/v4/docs/en/Projects.md",version:"v4",lastUpdatedAt:1624461640,formattedLastUpdatedAt:"6/23/2021",frontMatter:{title:"Projects"},sidebar:"version-v4/learn",previous:{title:"Modules",permalink:"/Modules"},next:{title:"Overview",permalink:"/Extensions"}},p=[{value:"Language",id:"language",children:[]}],m={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Project")," is a collection of ",(0,i.kt)("a",{parentName:"p",href:"/Modules"},"modules")," and additional information (pictures, report design files, etc.) that fully describe the functionality of the information system being created."),(0,i.kt)("p",null,'Projects, like modules, can depend on each other. A project graph should "include" a module graph. That is, if module ',(0,i.kt)("inlineCode",{parentName:"p"},"A")," ",(0,i.kt)("a",{parentName:"p",href:"/Modules#depends"},"depends")," on module ",(0,i.kt)("inlineCode",{parentName:"p"},"B"),", then module ",(0,i.kt)("inlineCode",{parentName:"p"},"A")," project should depend on module ",(0,i.kt)("inlineCode",{parentName:"p"},"B")," project."),(0,i.kt)("p",null,"Also, as a rule, assembly automation and versioning are supported for projects (for example, assembling a single executable file with all dependencies)."),(0,i.kt)("h3",{id:"language"},"Language"),(0,i.kt)("p",null,"From a technical standpoint, a project is nothing more than a set of files, so project support is not directly a part of the platform. It is assumed that external tools are used for this, from simple built-in IDEs to complex multi-purpose frameworks (such as ",(0,i.kt)("a",{parentName:"p",href:"https://maven.apache.org/"},"Maven"),")."),(0,i.kt)("p",null,"By default, at startup the platform searches for all files with the lsf extension in the ",(0,i.kt)("a",{parentName:"p",href:"/Launch_parameters#appjava"},"classpath")," of the application server being started, and considers them loaded modules. Modules are loaded in the order of their ",(0,i.kt)("a",{parentName:"p",href:"/Modules#depends"},"dependencies"),", so if ",(0,i.kt)("inlineCode",{parentName:"p"},"A")," depends on ",(0,i.kt)("inlineCode",{parentName:"p"},"B")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"C"),", then by default ",(0,i.kt)("inlineCode",{parentName:"p"},"B")," is initialized first, then ",(0,i.kt)("inlineCode",{parentName:"p"},"C"),", and only then ",(0,i.kt)("inlineCode",{parentName:"p"},"A"),"."),(0,i.kt)("p",null,"The above behavior can however be changed using the appropriate lsFusion application server startup parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/Launch_parameters#project"},(0,i.kt)("inlineCode",{parentName:"a"},"logics.includePaths"),", ",(0,i.kt)("inlineCode",{parentName:"a"},"logics.excludePaths"))," - the paths (relative to the classpath) in which the platform will look for LSF files. When specifying these parameters you can use paths to specific files (for example, ",(0,i.kt)("inlineCode",{parentName:"li"},"A/B/C.lsf"),") as well as path templates (for example, ",(0,i.kt)("inlineCode",{parentName:"li"},"A/*")," - all LSF files in folder ",(0,i.kt)("inlineCode",{parentName:"li"},"A")," and all its subfolders). In addition, in these parameters you can specify several paths/path patterns at once, separated by semicolons - for example, ",(0,i.kt)("inlineCode",{parentName:"li"},"A.lsf; dirB/*"),". The name of a JAR file in the path is ignored (that is, a file in ",(0,i.kt)("inlineCode",{parentName:"li"},"b.jar/C/x.lsf")," is considered to have the path ",(0,i.kt)("inlineCode",{parentName:"li"},"C/x.lsf"),"). By default, ",(0,i.kt)("inlineCode",{parentName:"li"},"includePaths")," is equal to ",(0,i.kt)("inlineCode",{parentName:"li"},"*")," (that is, all files), and ",(0,i.kt)("inlineCode",{parentName:"li"},"excludedPaths")," is empty."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/Launch_parameters#project"},(0,i.kt)("inlineCode",{parentName:"a"},"logics.topModule"))," - the name of the top module. If this parameter is specified (not empty), not all LSF files will be loaded, but only the specified module and all its ",(0,i.kt)("a",{parentName:"li",href:"/Modules#depends"},"dependencies"),". By default, this parameter is considered not specified (empty)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/Launch_parameters#project"},(0,i.kt)("inlineCode",{parentName:"a"},"logics.orderDependencies"))," - redefinition of the order of dependencies (set as module names separated by commas). Thus, if ",(0,i.kt)("inlineCode",{parentName:"li"},"A")," depends on ",(0,i.kt)("inlineCode",{parentName:"li"},"B")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"C"),", and this parameter contains ",(0,i.kt)("inlineCode",{parentName:"li"},"B")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"C"),", with ",(0,i.kt)("inlineCode",{parentName:"li"},"C")," placed before ",(0,i.kt)("inlineCode",{parentName:"li"},"B"),", then ",(0,i.kt)("inlineCode",{parentName:"li"},"C")," will be initialized before ",(0,i.kt)("inlineCode",{parentName:"li"},"B"),". By default, this parameter is considered not specified (empty); that is, the ",(0,i.kt)("inlineCode",{parentName:"li"},"REQUIRE")," order is used in the LSF files themselves.")),(0,i.kt)("p",null,"Regardless of the parameters described above, the platform always automatically loads the following system modules: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/System.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"System")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Service.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"Service")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Reflection.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"Reflection")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Authentication.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"Authentication")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Security.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"Security")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/SystemEvents.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"SystemEvents")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Scheduler.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"Scheduler")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Email.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"Email")),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Time.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"Time"))," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Utils.lsf"},(0,i.kt)("inlineCode",{parentName:"a"},"Utils")),"."))}d.isMDXComponent=!0}}]);