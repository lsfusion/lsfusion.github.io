"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["20381"],{95005:function(e,o,t){t.r(o),t.d(o,{default:()=>u,frontMatter:()=>r,metadata:()=>n,assets:()=>i,toc:()=>c,contentTitle:()=>l});var n=JSON.parse('{"id":"How-to_GROUP_CONCAT","title":"How-to: GROUP CONCAT","description":"Example 1","source":"@site/docs/How-to_GROUP_CONCAT.md","sourceDirName":".","slug":"/How-to_GROUP_CONCAT","permalink":"/How-to_GROUP_CONCAT","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/master/docs/en/How-to_GROUP_CONCAT.md","tags":[],"version":"current","lastUpdatedAt":1622042248000,"frontMatter":{"title":"How-to: GROUP CONCAT"},"sidebar":"learn","previous":{"title":"How-to: GROUP LAST","permalink":"/How-to_GROUP_LAST"},"next":{"title":"How-to: PARTITION","permalink":"/How-to_PARTITION"}}'),a=t("85893"),s=t("50065");let r={title:"How-to: GROUP CONCAT"},l=void 0,i={},c=[{value:"Example 1",id:"example-1",level:2},{value:"Task",id:"task",level:3},{value:"Solution",id:"solution",level:3},{value:"Example 2",id:"example-2",level:2},{value:"Task",id:"task-1",level:3},{value:"Solution",id:"solution-1",level:3}];function d(e){let o={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.h2,{id:"example-1",children:"Example 1"}),"\n",(0,a.jsx)(o.h3,{id:"task",children:"Task"}),"\n",(0,a.jsx)(o.p,{children:"We have a set of books associated with certain priority tags."}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-lsf",children:"CLASS Book 'Book';\nCLASS Tag 'Tag';\nname 'Name' = DATA ISTRING[10] (Tag);\n\nin 'On' = DATA BOOLEAN (Tag, Book);\n"})}),"\n",(0,a.jsx)(o.p,{children:"We need to retrieve a list of book tags separated by commas in alphabetical order."}),"\n",(0,a.jsx)(o.h3,{id:"solution",children:"Solution"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-lsf",children:"tags 'Tags' (Book b) = GROUP CONCAT name(Tag t) IF in(t, b), ',' ORDER name(t), t CHARWIDTH 10;\n"})}),"\n",(0,a.jsxs)(o.p,{children:["It is recommended that you specify the sizes of all the properties created using ",(0,a.jsx)(o.code,{children:"GROUP CONCAT"}),' that will be visible on a form. By default, the system implements the "pessimistic" scenario and reserves a lot of space for such properties.']}),"\n",(0,a.jsx)(o.h2,{id:"example-2",children:"Example 2"}),"\n",(0,a.jsx)(o.h3,{id:"task-1",children:"Task"}),"\n",(0,a.jsx)(o.p,{children:"We have a set of books associated with certain categories and authors."}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-lsf",children:"CLASS Category 'Category';\n\nCLASS Author 'Author';\nname 'Author' = DATA ISTRING[20] (Author);\n\ncategory 'Category' = DATA Category (Book);\nauthor 'Author' = DATA Author (Book);\n"})}),"\n",(0,a.jsx)(o.p,{children:"We need to retrieve a list of all authors by category separated by commas in descending order of the number of books."}),"\n",(0,a.jsx)(o.h3,{id:"solution-1",children:"Solution"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-lsf",children:"countBooks 'Number of books' (Author a, Category c) = GROUP SUM 1 BY author(Book b), category(b);\n\nauthors 'Authors' (Category c) = GROUP CONCAT name(Author a) IF countBooks(a, c) ORDER DESC countBooks(a, c), a;\n"})})]})}function u(e={}){let{wrapper:o}={...(0,s.a)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},50065:function(e,o,t){t.d(o,{Z:function(){return l},a:function(){return r}});var n=t(67294);let a={},s=n.createContext(a);function r(e){let o=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);