"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[23291],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),f=r,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||i;return n?a.createElement(d,o(o({ref:t},s),{},{components:n})):a.createElement(d,o({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},35532:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var a=n(83117),r=(n(67294),n(3905));const i={title:"BEFORE statement"},o=void 0,l={unversionedId:"BEFORE_statement",id:"version-v5/BEFORE_statement",title:"BEFORE statement",description:"The BEFORE statement calls an action before calling another action.",source:"@site/versioned_docs/version-v5/BEFORE_statement.md",sourceDirName:".",slug:"/BEFORE_statement",permalink:"/BEFORE_statement",draft:!1,editUrl:"https://github.com/lsfusion/platform/edit/v5/docs/en/BEFORE_statement.md",tags:[],version:"v5",lastUpdatedAt:1685108136,formattedLastUpdatedAt:"May 26, 2023",frontMatter:{title:"BEFORE statement"},sidebar:"learn",previous:{title:"INDEX statement",permalink:"/INDEX_statement"},next:{title:"AFTER statement",permalink:"/AFTER_statement"}},p={},c=[{value:"Syntax",id:"syntax",level:3},{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}],s={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"BEFORE")," statement calls an ",(0,r.kt)("a",{parentName:"p",href:"/Actions"},"action")," before calling another action. "),(0,r.kt)("h3",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"BEFORE action(param1, ..., paramN) DO aspectAction;\n")),(0,r.kt)("h3",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"BEFORE")," statement defines an action (let's call it an ",(0,r.kt)("em",{parentName:"p"},"aspect"),") that will be called before the specified one."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"action")),(0,r.kt)("p",{parentName:"li"},"  The ",(0,r.kt)("a",{parentName:"p",href:"/IDs#propertyid"},"ID")," of the action before which the aspect will be called.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"param1, ..., paramN")),(0,r.kt)("p",{parentName:"li"},"  List of action parameter names. Each name is defined ",(0,r.kt)("a",{parentName:"p",href:"/IDs#id"},"by a simple ID"),". These parameters can be accessed while defining an aspect.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"aspectAction")),(0,r.kt)("p",{parentName:"li"},"  A ",(0,r.kt)("a",{parentName:"p",href:"/Action_operators#contextdependent"},"context-dependent action operator")," describing the aspect."))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lsf"},"changeName(Sku s, STRING[100] name)  { name(s) <- name; }\n\n// The message will be shown before each call to changeName\nBEFORE changeName(Sku s, STRING[100] name) DO MESSAGE 'Changing user name'; \n")))}m.isMDXComponent=!0}}]);