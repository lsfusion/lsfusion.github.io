"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["56130"],{73549:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>l,metadata:()=>o,assets:()=>i,toc:()=>s,contentTitle:()=>r});var o=JSON.parse('{"id":"How-to_WHILE","title":"How-to: WHILE","description":"Example 1","source":"@site/docs/How-to_WHILE.md","sourceDirName":".","slug":"/How-to_WHILE","permalink":"/How-to_WHILE","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/master/docs/en/How-to_WHILE.md","tags":[],"version":"current","lastUpdatedAt":1625651520000,"frontMatter":{"title":"How-to: WHILE"},"sidebar":"learn","previous":{"title":"How-to: IF/CASE","permalink":"/How-to_IF_CASE"},"next":{"title":"How-to: NEWSESSION","permalink":"/How-to_NEWSESSION"}}'),a=t("85893"),d=t("50065");let l={title:"How-to: WHILE"},r=void 0,i={},s=[{value:"Example 1",id:"example-1",level:2},{value:"Task",id:"task",level:3},{value:"Solution",id:"solution",level:3},{value:"Example 2",id:"example-2",level:2},{value:"Task",id:"task-1",level:3},{value:"Solution",id:"solution-1",level:3},{value:"Example 3",id:"example-3",level:2},{value:"Task",id:"task-2",level:3},{value:"Solution",id:"solution-2",level:3}];function c(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"example-1",children:"Example 1"}),"\n",(0,a.jsx)(n.h3,{id:"task",children:"Task"}),"\n",(0,a.jsx)(n.p,{children:"We have an order for which a date is defined."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lsf",children:"CLASS Order 'Order';\n\ndate 'Date' = DATA DATE (Order);\n"})}),"\n",(0,a.jsx)(n.p,{children:"We need to display a message containing the number of orders for each date from a given interval."}),"\n",(0,a.jsx)(n.h3,{id:"solution",children:"Solution"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lsf",children:"countOrders (DATE date) = GROUP SUM 1 BY date(Order o);\n\nmessageCountOrders 'Count the number of orders' (DATE dFrom, DATE dTo)  {\n    // Option 1\n    LOCAL date = DATE ();\n    date() <- dFrom;\n\n    WHILE date() <= dTo DO {\n        MESSAGE 'Number of orders for ' + date () + ' : ' + OVERRIDE countOrders(date()), 0.0;\n        date() <- sum(date(), 1);\n    }\n\n    // Option 2\n    FOR iterate(DATE date, dFrom, dTo) DO\n        MESSAGE 'Number of orders for ' + date + ' : ' + OVERRIDE countOrders(date()), 0.0;\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Both these options will provide the same result."}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"sum"})," property defined in the ",(0,a.jsx)(n.code,{children:"Time"})," system ",(0,a.jsx)(n.a,{href:"/Modules",children:"module"})," is used to add one day to the given date."]}),"\n",(0,a.jsx)(n.h2,{id:"example-2",children:"Example 2"}),"\n",(0,a.jsx)(n.h3,{id:"task-1",children:"Task"}),"\n",(0,a.jsxs)(n.p,{children:["Similar to ",(0,a.jsx)(n.a,{href:"#example-1",children:(0,a.jsx)(n.strong,{children:"Example 1"})}),". We have also defined order lines, so that each line contains the (full) amount and the discount."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lsf",children:"CLASS OrderDetail 'Order line';\norder 'Order' = DATA Order (OrderDetail) NONULL DELETE;\n\nsum 'Amount' = DATA NUMERIC[14,2] (OrderDetail);\ndiscountSum 'Discount amount' = DATA NUMERIC[14,2] (OrderDetail);\n"})}),"\n",(0,a.jsx)(n.p,{children:'We need to create an action that "distributes" given discount by line, starting from the line with the largest amount.'}),"\n",(0,a.jsx)(n.h3,{id:"solution-1",children:"Solution"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lsf",children:"distributeDiscount 'Distribute discount' (Order o, NUMERIC[14,2] discount)  {\n    LOCAL discount = NUMERIC[14,2] ();\n    discount() <- discount;\n\n    LOCAL leftSum = NUMERIC[14,2] (OrderDetail);\n    leftSum(OrderDetail d) <- sum(d) WHERE order(d) == o;\n\n    WHILE discount() > 0 DO {\n        // finding the row with the largest \"remaining\" amount\n        FOR OrderDetail d == [ GROUP LAST OrderDetail od ORDER leftSum(od), od BY order(od)](o) DO { \n            discountSum(d) <- MIN leftSum(d), discount();\n            discount() <- discount() (-) discountSum(d);\n        }\n        IF (GROUP SUM 1 IF leftSum(OrderDetail d) > 0) THEN\n            BREAK; // nothing left to break down\n    }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example-3",children:"Example 3"}),"\n",(0,a.jsx)(n.h3,{id:"task-2",children:"Task"}),"\n",(0,a.jsx)(n.p,{children:"The logic for changing the balance for the book is defined as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lsf",children:"CLASS Book 'Book';\n\nCLASS Ledger 'Change balance';\ndate 'Date' = DATA DATE (Ledger);\nbook 'Book' = DATA Book (Ledger);\nquantity 'Qty' = DATA NUMERIC[14,2] (Ledger);\n"})}),"\n",(0,a.jsx)(n.p,{children:"We need to create an action that will calculate the accumulated (integral) balance for a given time period."}),"\n",(0,a.jsx)(n.h3,{id:"solution-2",children:"Solution"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lsf",children:"calculateIntegral (DATE dFrom, DATE dTo)  {\n    LOCAL date = DATE();\n    date() <- dFrom;\n\n    LOCAL balance = NUMERIC[14,2] (Book);\n    balance(Book b) <- [ GROUP SUM quantity(Ledger l) IF date(l) < dFrom BY book(l)](b);\n\n    LOCAL cumBalance = NUMERIC[14,2] (Book);\n\n    WHILE date() <= dTo DO {\n        cumBalance(Book b) <- cumBalance(b) (+) balance(b); //\n        balance(Book b) <- balance(b) (+) [ GROUP SUM quantity(Ledger l) BY book(l), date(l)](b, date());\n        date() <- sum(date(), 1);\n    }\n\n    FOR cumBalance(Book b) DO {\n        MESSAGE 'Accumulated balance for book ' + b + ' : ' + cumBalance(b);\n    }\n}\n"})})]})}function u(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return l}});var o=t(67294);let a={},d=o.createContext(a);function l(e){let n=o.useContext(d);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);