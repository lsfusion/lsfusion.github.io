"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["92588"],{1559:function(e,t,r){r.r(t),r.d(t,{default:()=>h,frontMatter:()=>c,metadata:()=>s,assets:()=>i,toc:()=>d,contentTitle:()=>a});var s=JSON.parse('{"id":"Structure_operators_STRUCT","title":"Structure operators (STRUCT, [])","description":"The term structure is used in the platform to refer to the classes which objects consist of a collection of other objects in a fixed order. The platform supports two operators for working with structures:","source":"@site/versioned_docs/version-v4/Structure_operators_STRUCT.md","sourceDirName":".","slug":"/Structure_operators_STRUCT","permalink":"/v4/Structure_operators_STRUCT","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/v4/docs/en/Structure_operators_STRUCT.md","tags":[],"version":"v4","lastUpdatedAt":1623249583000,"frontMatter":{"title":"Structure operators (STRUCT, [])"},"sidebar":"learn","previous":{"title":"String operators (+, CONCAT, SUBSTRING)","permalink":"/v4/String_operators_+_CONCAT_SUBSTRING"},"next":{"title":"Type conversion","permalink":"/v4/Type_conversion"}}'),n=r("85893"),o=r("50065");let c={title:"Structure operators (STRUCT, [])"},a=void 0,i={},d=[{value:"Language",id:"language",level:3},{value:"Examples",id:"examples",level:3}];function l(e){let t={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The term ",(0,n.jsx)(t.em,{children:"structure"})," is used in the platform to refer to the ",(0,n.jsx)(t.a,{href:"/v4/Classes",children:"classes"})," which objects consist of a collection of other objects in a fixed order. The platform supports two operators for working with structures:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Operator"}),(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Example"}),(0,n.jsx)(t.th,{children:"Result"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"STRUCT"})}),(0,n.jsx)(t.td,{children:"Creation"}),(0,n.jsxs)(t.td,{children:["Creates a ",(0,n.jsx)(t.a,{href:"/v4/Properties",children:"property"})," that takes a list of operands and returns a structure consisting of the objects passed"]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"STRUCT('a', 1)"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"STRUCT('a', 1)"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"[ ]"})}),(0,n.jsx)(t.td,{children:"Access"}),(0,n.jsx)(t.td,{children:"Creates a property that takes an operand with a fixed integer and returns an object of the structure specified in the first operand with a number equal to the specified integer"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"STRUCT('a',1)[2]"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"1"})})]})]})]}),"\n",(0,n.jsx)(t.p,{children:"Structures support comparison operations which are executed sequentially for each object included in the structure."}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"To better understand how this works, it\u2019s sufficient to say that physically a structure is just a concatenation of the objects included in this structure converted to bit strings"})}),"\n",(0,n.jsx)(t.h3,{id:"language",children:"Language"}),"\n",(0,n.jsxs)(t.p,{children:["To create a property that creates a structure the ",(0,n.jsxs)(t.a,{href:"/v4/STRUCT_operator",children:[(0,n.jsx)(t.code,{children:"STRUCT"})," operator"]})," is used."]}),"\n",(0,n.jsxs)(t.p,{children:["To create a property that returns an object from the structure the ",(0,n.jsxs)(t.a,{href:"/v4/Brackets_operator",children:[(0,n.jsx)(t.code,{children:"[ ]"})," operator"]})," is used."]}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lsf",children:"objectStruct(a, b) = STRUCT(a, f(b));\nstringStruct() = STRUCT(1, 'two', 3.0);\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lsf",children:"CLASS Letter;\nattachment1 = DATA FILE (Letter);\nattachment2 = DATA FILE (Letter);\nletterAttachments (Letter l) = STRUCT(attachment1(l), attachment2(l));\nsecondAttachment(Letter l) = letterAttachments(l)[2]; // returns attachment2\n"})})]})}function h(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},50065:function(e,t,r){r.d(t,{Z:function(){return a},a:function(){return c}});var s=r(67294);let n={},o=s.createContext(n);function c(e){let t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);