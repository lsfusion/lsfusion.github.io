"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["66536"],{14457:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>o,metadata:()=>i,assets:()=>a,toc:()=>c,contentTitle:()=>l});var i=JSON.parse('{"id":"EXPAND_operator","title":"EXPAND operator","description":"The EXPAND operator is the creation of an action, that implements the expansion of elements in the object tree.","source":"@site/docs/EXPAND_operator.md","sourceDirName":".","slug":"/EXPAND_operator","permalink":"/EXPAND_operator","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/master/docs/en/EXPAND_operator.md","tags":[],"version":"current","lastUpdatedAt":1713867720000,"frontMatter":{"title":"EXPAND operator"},"sidebar":"learn","previous":{"title":"EXEC operator","permalink":"/EXEC_operator"},"next":{"title":"EXPORT operator","permalink":"/EXPORT_operator"}}'),s=t("85893"),r=t("50065");let o={title:"EXPAND operator"},l=void 0,a={},c=[{value:"Syntax",id:"syntax",level:3},{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function d(e){let n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"EXPAND"})," operator is the creation of an ",(0,s.jsx)(n.a,{href:"/Actions",children:"action"}),", that implements the ",(0,s.jsx)(n.a,{href:"/Object_tree_visibility_EXPAND_COLLAPSE",children:"expansion of elements"})," in the ",(0,s.jsx)(n.a,{href:"/Interactive_view#tree",children:"object tree"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"EXPAND [expandType] formObjectGroupId [OBJECTS objName1 = expr1, ..., objNameN = exprN]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"EXPAND"})," operator creates an action that is used to expand specific elements of the object tree on a form. These elements can be determined using the ",(0,s.jsx)(n.code,{children:"OBJECTS"})," block. If this block is not specified, the expansion operation will be applied either to the current element of the tree or to the top-level elements of the specified ",(0,s.jsx)(n.a,{href:"/Form_structure#objects",children:"object group"}),", depending on the type of operation."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"expandType"})}),"\n",(0,s.jsx)(n.p,{children:"Expansion type. Specified in one of the following ways:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"DOWN"})}),"\n",(0,s.jsxs)(n.p,{children:["Keyword that, when specified, will cause the elements of the tree to expand. If the ",(0,s.jsx)(n.code,{children:"OBJECTS"})," block is not specified, the operation is applied to the current element."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"UP"})}),"\n",(0,s.jsxs)(n.p,{children:["Keyword that, when specified, will cause the expansion of tree elements, as well as all elements that are their ancestors. If the ",(0,s.jsx)(n.code,{children:"OBJECTS"})," block is not specified, the operation is applied to the current element."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"ALL"})}),"\n",(0,s.jsxs)(n.p,{children:["Keyword that, when specified, will cause the recursive expansion of tree elements and all their descendants. If the ",(0,s.jsx)(n.code,{children:"OBJECTS"})," block is not specified, the operation is applied to the current element."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"ALL TOP"})}),"\n",(0,s.jsxs)(n.p,{children:["Two keywords that, when specified, will cause the recursive expansion of all top-level elements of the specified object group. The ",(0,s.jsx)(n.code,{children:"OBJECTS"})," block is ignored."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If not specified, the default value is ",(0,s.jsx)(n.code,{children:"DOWN"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"formObjectGroupId"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/IDs#groupobjectid",children:"Object group ID"})," that specifies the object group to which the expansion operation is applied."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"objName1 ... objNameN"})}),"\n",(0,s.jsxs)(n.p,{children:["Names of objects on the form. The objects must belong to the specified object group. The object name is specified by a ",(0,s.jsx)(n.a,{href:"/IDs#id",children:"simple ID"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"expr1 ... exprN"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/Expression",children:"Expressions"})," whose values are the target values of the corresponding objects in the specified object group."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lsf",children:"FORM expandCollapseTest\n    TREE elements e = NavigatorElement PARENT parent(e)\n    PROPERTIES(e) READONLY BACKGROUND NOT e IS NavigatorFolder VALUE, canonicalName, caption\n;\n\nexpandDown {\n    EXPAND DOWN expandCollapseTest.e OBJECTS e = navigatorElementCanonicalName('System.administration');\n}\n\nexpandUp {\n    EXPAND UP expandCollapseTest.e OBJECTS e = navigatorElementCanonicalName('System.administration');\n}\n\nexpandAllTop {\n    EXPAND ALL TOP expandCollapseTest.e;\n}\n\nEXTEND FORM expandCollapseTest\n    PROPERTIES() expandDown, expandUp, expandAllTop\n;\n"})})]})}function p(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return o}});var i=t(67294);let s={},r=i.createContext(s);function o(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);