(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[54328],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return m},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},m=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=l(r),d=a,h=u["".concat(s,".").concat(d)]||u[d]||c[d]||o;return r?n.createElement(h,p(p({ref:t},m),{},{components:r})):n.createElement(h,p({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var l=2;l<o;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},17671:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return p},metadata:function(){return i},toc:function(){return s},default:function(){return m}});var n=r(22122),a=r(19756),o=(r(67294),r(3905)),p={title:"GROUP operator"},i={unversionedId:"GROUP_operator",id:"GROUP_operator",isDocsHomePage:!1,title:"GROUP operator",description:"The GROUP operator creates a property implementing\xa0grouping.",source:"@site/docs/GROUP_operator.md",sourceDirName:".",slug:"/GROUP_operator",permalink:"/next/GROUP_operator",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/GROUP_operator.md",version:"current",lastUpdatedAt:1617631212,formattedLastUpdatedAt:"4/5/2021",frontMatter:{title:"GROUP operator"},sidebar:"learn",previous:{title:"FORMULA operator",permalink:"/next/FORMULA_operator"},next:{title:"IF operator",permalink:"/next/IF_operator"}},s=[{value:"Syntax\xa0",id:"syntax",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]}],l={toc:s};function m(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"GROUP")," operator creates a ",(0,o.kt)("a",{parentName:"p",href:"/next/Properties"},"property")," implementing\xa0",(0,o.kt)("a",{parentName:"p",href:"/next/Grouping_GROUP_"},"grouping"),"."),(0,o.kt)("h3",{id:"syntax"},"Syntax\xa0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GROUP \ntype expr1, ..., exprN\n[ORDER [DESC] orderExpr1, ..., orderExprK]\n[WHERE whereExpr]\n[BY groupExpr1, ..., groupExprM]\n")),(0,o.kt)("h3",{id:"description"},"Description"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"GROUP")," operator creates a property implementing grouping. The type of grouping is determined by the type of the ",(0,o.kt)("a",{parentName:"p",href:"/next/Set_operations"},"aggregate function"),". This operator differs from others in that it can implicitly declare its parameters in the expressions used (by analogy with the ",(0,o.kt)("a",{parentName:"p",href:"/next/Instruction_="},(0,o.kt)("strong",{parentName:"a"},"=")," instruction"),' when the parameters are not defined explicitly). At the same time, it is important to understand that these "implicitly declared" parameters are not parameters of the created property (which are actually determined by the ',(0,o.kt)("strong",{parentName:"p"},"BY")," block\xa0and / or the upper parameters used)"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"BY")," block describes group expressions. Each expression corresponds to a parameter of the property being created. As in other operators, upper parameters can be used in this operator, and the used parameters also implicitly\xa0become groups of the created property. Accordingly, when using the operator in the ",(0,o.kt)("a",{parentName:"p",href:"/next/Instruction_="},(0,o.kt)("strong",{parentName:"a"},"=")," instruction"),"\xa0and explicitly defining the parameters on the left, the expressions from the ",(0,o.kt)("strong",{parentName:"p"},"BY")," block are mapped only for unused parameters. Moreover, if the classes or the number of these parameters do not match the number / classes of ",(0,o.kt)("strong",{parentName:"p"},"BY")," expressions then the platform will throw an error.\xa0"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If a ",(0,o.kt)("strong",{parentName:"p"},"BY")," block\xa0is defined, this operator cannot be used inside\xa0",(0,o.kt)("a",{parentName:"p",href:"/next/Expression"},"expressions"),"."))),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"ORDER")," block defines the order in which the aggregate function will be calculated. Can only be used for ",(0,o.kt)("a",{parentName:"p",href:"/next/Set_operations"},"non-commutative")," aggregate functions (",(0,o.kt)("strong",{parentName:"p"},"CONCAT, LAST")," ) and must be uniquely defined. If a new parameter is declared in the expressions specifying the order (i.e. parameter is not used in the remaining blocks**\xa0",(0,o.kt)("strong",{parentName:"p"},"or in the upper context), the condition of non-\xa0"),"NULLness** of all these expressions is automatically added."),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"WHERE")," block defines the condition under which object collections will participate in the group operation. Can only be used for the aggregate\xa0functions\xa0",(0,o.kt)("strong",{parentName:"p"},"AGGR"),", ",(0,o.kt)("strong",{parentName:"p"},"NAGGR"),", ",(0,o.kt)("strong",{parentName:"p"},"LAST"),"."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"For ",(0,o.kt)("strong",{parentName:"p"},"AGGR")," and\xa0",(0,o.kt)("strong",{parentName:"p"},"NAGGR"),"\xa0using this block explicitly (and not, say, an\xa0",(0,o.kt)("a",{parentName:"p",href:"/next/IF_operator"},(0,o.kt)("strong",{parentName:"a"},"IF")," operator")," in ",(0,o.kt)("strong",{parentName:"p"},"GROUP")," and ",(0,o.kt)("strong",{parentName:"p"},"BY")," blocks) only makes sense from the perspective of being able to change the created property to non-",(0,o.kt)("strong",{parentName:"p"},"NULL"),"\xa0in some automatic mechanisms of the platform (for example, ",(0,o.kt)("a",{parentName:"p",href:"/next/Simple_constraints"},"automatic resolution")," of simple constraints)."))),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"type")),(0,o.kt)("p",null,"Type of aggregate function. Can be one of the following: ",(0,o.kt)("strong",{parentName:"p"},"SUM"),", ",(0,o.kt)("strong",{parentName:"p"},"MAX"),", ",(0,o.kt)("strong",{parentName:"p"},"MIN"),", ",(0,o.kt)("strong",{parentName:"p"},"CONCAT"),", ",(0,o.kt)("strong",{parentName:"p"},"EQUAL"),", *",(0,o.kt)("strong",{parentName:"p"},"*AGGR, NAGGR, LAST**"),".\xa0"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"expr1, ..., exprN\xa0")),(0,o.kt)("p",null,"A list of expressions whose values are passed to the aggregate function as operands. The number of expressions should correspond to the number of operands of the function used.\xa0"),(0,o.kt)("p",null,"groupExpr1, ..., groupExprN\xa0\xa0"),(0,o.kt)("p",null,"\xa0List of group expressions.\xa0"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"DESC")),(0,o.kt)("p",null,"Keyword. Specifies a reverse iteration order for object collections.\xa0"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"orderExpr1, ..., orderExprM")),(0,o.kt)("p",null,"A list of expressions that define the order in which object collections will be iterated over when calculating the aggregate function. To determine the order, first the value of the first expression is used; then, if equal, the value of the second is used, etc.\xa0"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"whereExpr")),(0,o.kt)("p",null,"Filtering expression. Only object groups for which the value of the filtering expression is not\xa0",(0,o.kt)("strong",{parentName:"p"},"NULL")," will participate in the grouping."),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lsf"},"CLASS Game;\nCLASS Team;\nhostGoals = DATA INTEGER (Game);\nhostTeam = DATA Team (Game);\nhostGoalsScored(team) = GROUP SUM hostGoals(Game game) BY hostTeam(game);\n\nname = DATA STRING[100] (Country);\ncountryName = GROUP AGGR Country country WHERE country IS Country BY name(country); // property (STRING[100]) -> Country is obtained\n\nCLASS Book;\nCLASS Tag;\nname = DATA STRING[100] (Tag);\nin = DATA BOOLEAN (Book, Tag);\n\ntags(Book b) = GROUP CONCAT name(Tag t) IF in(b, t), ', ' ORDER name(t), t;\n")))}m.isMDXComponent=!0}}]);