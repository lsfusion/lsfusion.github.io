(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[10655],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return m},kt:function(){return u}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),f=p(r),u=a,d=f["".concat(l,".").concat(u)]||f[u]||c[u]||s;return r?n.createElement(d,o(o({ref:t},m),{},{components:r})):n.createElement(d,o({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},35817:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},metadata:function(){return i},toc:function(){return l},default:function(){return m}});var n=r(22122),a=r(19756),s=(r(67294),r(3905)),o={title:"Projects"},i={unversionedId:"Projects",id:"Projects",isDocsHomePage:!1,title:"Projects",description:"Project is a collection of modules\xa0and additional information (pictures, report design files, etc.) that fully describe the functionality of the information system being created.",source:"@site/docs/Projects.md",sourceDirName:".",slug:"/Projects",permalink:"/next/Projects",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/Projects.md",version:"current",lastUpdatedAt:1617631212,formattedLastUpdatedAt:"4/5/2021",frontMatter:{title:"Projects"},sidebar:"learn",previous:{title:"Modules",permalink:"/next/Modules"},next:{title:"Extensions",permalink:"/next/Extensions"}},l=[{value:"Language",id:"language",children:[]}],p={toc:l};function m(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Project")," is a collection of ",(0,s.kt)("a",{parentName:"p",href:"/next/Modules"},"modules"),"\xa0and additional information (pictures, report design files, etc.) that fully describe the functionality of the information system being created."),(0,s.kt)("p",null,'Projects, like modules, can depend on each other. A project graph should "include" a module graph. That is, if module ',(0,s.kt)("strong",{parentName:"p"},"A")," ",(0,s.kt)("a",{parentName:"p",href:"/next/Modules#depends"},"depends")," on module ",(0,s.kt)("strong",{parentName:"p"},"B"),", then module ",(0,s.kt)("strong",{parentName:"p"},"A")," project should depend on module ",(0,s.kt)("strong",{parentName:"p"},"B")," project."),(0,s.kt)("p",null,"Also, as a rule, assembly automation and versioning are supported for projects (for example, assembling a single executable file with all dependencies)."),(0,s.kt)("h3",{id:"language"},"Language"),(0,s.kt)("p",null,"From a technical standpoint, a project is nothing more than a set of files, so project support is not directly a part of the platform. It is assumed that external tools are used for this, from simple built-in IDEs to complex multi-purpose frameworks (such as ",(0,s.kt)("a",{parentName:"p",href:"https://maven.apache.org/"},"Maven"),")."),(0,s.kt)("p",null,"By default, at startup the platform searches for all files with the LSF extension in the\xa0",(0,s.kt)("a",{parentName:"p",href:"/next/Launch_parameters#classpath-broken"},"classpath"),"\xa0of the application server being started, and considers them loaded modules. Modules are loaded in the order of their\xa0",(0,s.kt)("a",{parentName:"p",href:"/next/Modules#depends"},"dependencies"),", so if ",(0,s.kt)("strong",{parentName:"p"},"A")," depends on\xa0",(0,s.kt)("strong",{parentName:"p"},"B")," and ",(0,s.kt)("strong",{parentName:"p"},"C"),", then by default ",(0,s.kt)("strong",{parentName:"p"},"B")," is initialized first, then ",(0,s.kt)("strong",{parentName:"p"},"C"),", and only then ",(0,s.kt)("strong",{parentName:"p"},"A"),"."),(0,s.kt)("p",null,"The above behavior can however be changed using the appropriate lsFusion application server startup parameters:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/next/Launch_parameters#project-broken"},"logics.includePaths, logics.excludePaths")," - the paths (relative to the classpath) in which the platform will look for LSF files. When specifying these parameters\xa0you can use paths to specific files (for example, A/B/C.lsf) as well as path templates (for example, A/","*"," - all LSF files in folder A and all its subfolders). In addition, in these parameters you can specify several paths/path patterns at once, separated by semicolons - for example, A.lsf; dirB/","*",". The name of a JAR file in the path is ignored (that is, a file in b.jar/C/x.lsf is considered to have the path C/x.lsf). By default, includePaths is equal to ","*"," (that is, all files), and excludedPaths is empty."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/next/Launch_parameters#project-broken"},"logics.topModule")," - the name of the top module. If this parameter is specified (not empty), not all LSF files will be loaded, but only the specified module and all its ",(0,s.kt)("a",{parentName:"li",href:"/next/Modules#depends"},"dependencies"),". By default, this parameter is considered not specified (empty)."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/next/Launch_parameters#project-broken"},"logics.orderDependencies")," - redefinition of the order of dependencies (set as module names separated by commas). Thus, if ",(0,s.kt)("strong",{parentName:"li"},"A")," depends on ",(0,s.kt)("strong",{parentName:"li"},"B")," and ",(0,s.kt)("strong",{parentName:"li"},"C"),", and this parameter contains ",(0,s.kt)("strong",{parentName:"li"},"B")," and ",(0,s.kt)("strong",{parentName:"li"},"C"),", with ",(0,s.kt)("strong",{parentName:"li"},"C")," placed before ",(0,s.kt)("strong",{parentName:"li"},"B"),", then ",(0,s.kt)("strong",{parentName:"li"},"C")," will be initialized before ",(0,s.kt)("strong",{parentName:"li"},"B"),". By default, this parameter is considered not specified (empty); that is, the REQUIRE order is used in the LSF files themselves.")),(0,s.kt)("p",null,"Regardless of the parameters described above, the platform always automatically loads the following system modules: ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/System.lsf"},(0,s.kt)("strong",{parentName:"a"},"System")),", ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Service.lsf"},"Service")),",\xa0",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Reflection.lsf"},"Reflection")),",\xa0",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Authentication.lsf"},"Authentication")),",\xa0",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Security.lsf"},"Security")),",\xa0",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/SystemEvents.lsf"},"SystemEvents")),",\xa0",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Scheduler.lsf"},"Scheduler")),",\xa0",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Email.lsf"},"Email")),",\xa0",(0,s.kt)("a",{parentName:"p",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Time.lsf"},(0,s.kt)("strong",{parentName:"a"},"Time"),","),"\xa0and ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("a",{parentName:"strong",href:"https://github.com/lsfusion/platform/blob/master/server/src/main/lsfusion/system/Utils.lsf"},"Utils")),"."))}m.isMDXComponent=!0}}]);