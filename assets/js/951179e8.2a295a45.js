"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[16496],{9226:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>x,frontMatter:()=>t,metadata:()=>p,toc:()=>c});var s=o(74848),n=o(28453);const t={title:"JSON operator"},i=void 0,p={id:"JSON_operator",title:"JSON operator",description:"The JSON operator is property that creates JSON from specified properties or, in common case, from form.",source:"@site/docs/JSON_operator.md",sourceDirName:".",slug:"/JSON_operator",permalink:"/JSON_operator",draft:!1,unlisted:!1,editUrl:"https://github.com/lsfusion/platform/edit/master/docs/en/JSON_operator.md",tags:[],version:"current",lastUpdatedAt:1733927637e3,frontMatter:{title:"JSON operator"},sidebar:"learn",previous:{title:"JOIN operator",permalink:"/JOIN_operator"},next:{title:"LIKE operator",permalink:"/LIKE_operator"}},d={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Description",id:"description",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2}];function l(e){const r={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"JSON"})," operator is property that creates JSON from ",(0,s.jsx)(r.a,{href:"/Data_export_EXPORT",children:"specified properties"})," or, in common case, from ",(0,s.jsx)(r.a,{href:"/In_a_structured_view_EXPORT_IMPORT",children:"form"}),"."]}),"\n",(0,s.jsx)(r.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"JSON FROM [columnId1 =] propertyExpr1, ..., [columnIdN = ] propertyExprN \n  [WHERE whereExpr] [ORDER orderExpr1 [DESC], ..., orderExprL [DESC]]\n  [TOP topExpr] [OFFSET offsetExpr]\nJSON ( formName [OBJECTS objName1 = expr1, ..., objNameK = exprK]\n  [TOP (topExpr | (topGroupId1 = topPropertyExpr1, ..., topGroupIdT = topPropertyExprT))]\n  [OFFSET (offsetExpr | (offsetGroupId1 = offsetPropertyExpr1, ..., offsetGroupIdF = offsetPropertyExprF))] )\n"})}),"\n",(0,s.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"JSON"})," operator is property that creates JSON from the specified properties or form."]}),"\n",(0,s.jsxs)(r.p,{children:["When exporting a form in an ",(0,s.jsx)(r.code,{children:"OBJECTS"})," block, it is possible to add extra filters to check for the equality of the objects on the form with ",(0,s.jsx)(r.a,{href:"/Open_form#params",children:"the values passed"}),". These objects ",(0,s.jsx)(r.a,{href:"/Structured_view#objects",children:"will not participate"})," in building the object group hierarchy."]}),"\n",(0,s.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"formName"})}),"\n",(0,s.jsxs)(r.p,{children:["The name of the form from which you want to export data. ",(0,s.jsx)(r.a,{href:"/IDs#cid",children:"Composite ID"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"objName1 ... objNameK"})}),"\n",(0,s.jsxs)(r.p,{children:["Names of form objects for which filtered (fixed) values are specified. ",(0,s.jsx)(r.a,{href:"/IDs#id",children:"Simple IDs"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"expr1 ... exprK"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/Expression",children:"Expressions"})," whose values determine the filtered (fixed) values for form objects."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"propertyExpr1, ..., propertyExprN"})}),"\n",(0,s.jsxs)(r.p,{children:["List of ",(0,s.jsx)(r.a,{href:"/Expression",children:"expressions"})," from whose values the data is exported"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"columnId1, ..., columnIdN"})}),"\n",(0,s.jsxs)(r.p,{children:["A list of column IDs in the resulting JSON into which data from the corresponding property will be exported. Each list element is either ",(0,s.jsx)(r.a,{href:"/IDs#id",children:"a simple ID"})," or a ",(0,s.jsx)(r.a,{href:"/Literals#strliteral",children:"string literal"}),". If no ID is specified, it is considered equal to ",(0,s.jsx)(r.code,{children:"expr<Column number>"})," by default."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"whereExpr"})}),"\n",(0,s.jsxs)(r.p,{children:["An expression whose value is a condition for the export. If not specified, it is considered equal to the ",(0,s.jsx)(r.a,{href:"/Logical_operators_AND_OR_NOT_XOR",children:"disjunction"})," of all exported properties (that is, at least one of the properties must be non-",(0,s.jsx)(r.code,{children:"NULL"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"orderExpr1, ..., orderExprL"})}),"\n",(0,s.jsxs)(r.p,{children:["List of ",(0,s.jsx)(r.a,{href:"/Expression",children:"expressions"})," by which the exported data is sorted. Only properties present in the list ",(0,s.jsx)(r.code,{children:"propertyExpr1, ..., propertyExprN"})," can be used"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"DESC"})}),"\n",(0,s.jsx)(r.p,{children:"Keyword. Specifies reverse sort order. By default, ascending sort is used."}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"TOP topExpr"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"TOP (topExpr | (topGroupId1 = topPropertyExpr1, ..., topGroupIdT = topPropertyExprT))"})}),"\n",(0,s.jsxs)(r.p,{children:["Export only first ",(0,s.jsx)(r.code,{children:"n"})," records, where ",(0,s.jsx)(r.code,{children:"n"})," is value of expression ",(0,s.jsx)(r.code,{children:"topExpr"})," or ",(0,s.jsx)(r.code,{children:"topPropertyExprT"})," for group object ",(0,s.jsx)(r.code,{children:"topGroupIdT"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"OFFSET offsetExpr"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"OFFSET (offsetExpr | (offsetGroupId1 = offsetPropertyExpr1, ..., offsetGroupIdF = offsetPropertyExprF))"})}),"\n",(0,s.jsxs)(r.p,{children:["Export only records with offset ",(0,s.jsx)(r.code,{children:"m"}),", where ",(0,s.jsx)(r.code,{children:"m"})," is value of expression ",(0,s.jsx)(r.code,{children:"offsetExpr"})," or ",(0,s.jsx)(r.code,{children:"offsetPropertyExprF"})," for group object ",(0,s.jsx)(r.code,{children:"offsetGroupIdF"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lsf",children:"FORM testF \n      OBJECTS j = INTEGER\n      PROPERTIES ab='34'\n      OBJECTS i = INTEGER\n      PROPERTIES name = 'Name ' + (i AS INTEGER)\n;\n\nrun() {\n\tMESSAGE JSON (testF OBJECTS j=4 FILTERS mod(i,2) = 0);\n}\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lsf",children:"MESSAGE JSON (FROM code = '1', message = 'OK');\n"})})]})}function x(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>i,x:()=>p});var s=o(96540);const n={},t=s.createContext(n);function i(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function p(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);