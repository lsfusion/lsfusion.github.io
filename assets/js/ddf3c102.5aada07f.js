"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["23549"],{7270:function(r,e,s){s.r(e),s.d(e,{default:()=>a,frontMatter:()=>o,metadata:()=>i,assets:()=>c,toc:()=>h,contentTitle:()=>d});var i=JSON.parse('{"id":"Operator_priority","title":"Operator priority","description":"When evaluating an expression, operators are evaluated in a specific order depending on operator priority. The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.","source":"@site/versioned_docs/version-v5/Operator_priority.md","sourceDirName":".","slug":"/Operator_priority","permalink":"/v5/Operator_priority","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/v5/docs/en/Operator_priority.md","tags":[],"version":"v5","lastUpdatedAt":1720706674000,"frontMatter":{"title":"Operator priority"},"sidebar":"learn","previous":{"title":"Expression","permalink":"/v5/Expression"},"next":{"title":"Property operators","permalink":"/v5/Property_operators"}}'),n=s("85893"),t=s("50065");let o={title:"Operator priority"},d=void 0,c={},h=[];function x(r){let e={a:"a",code:"code",em:"em",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:["When evaluating an ",(0,n.jsx)(e.a,{href:"/v5/Expression",children:"expression"}),", ",(0,n.jsx)(e.a,{href:"/v5/Property_operators_paradigm",children:"operators"})," are evaluated in a specific order depending on ",(0,n.jsx)(e.em,{children:"operator priority"}),". The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order."]}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:"Operator"}),(0,n.jsx)(e.th,{children:"Description"}),(0,n.jsx)(e.th,{children:"Type"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.code,{children:"(expression)"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/JOIN_operator",children:(0,n.jsx)(e.code,{children:"JOIN"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/CASE_operator",children:(0,n.jsx)(e.code,{children:"CASE"})}),", ",(0,n.jsx)(e.a,{href:"/v5/MULTI_operator",children:(0,n.jsx)(e.code,{children:"MULTI"})}),", ",(0,n.jsx)(e.a,{href:"/v5/OVERRIDE_operator",children:(0,n.jsx)(e.code,{children:"OVERRIDE"})}),", ",(0,n.jsx)(e.a,{href:"/v5/EXCLUSIVE_operator",children:(0,n.jsx)(e.code,{children:"EXCLUSIVE"})}),", ",(0,n.jsx)(e.a,{href:"/v5/IF_..._THEN_operator",children:(0,n.jsx)(e.code,{children:"IF ... THEN"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/PARTITION_operator",children:(0,n.jsx)(e.code,{children:"PARTITION"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/RECURSION_operator",children:(0,n.jsx)(e.code,{children:"RECURSION"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/GROUP_operator",children:(0,n.jsx)(e.code,{children:"GROUP"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/STRUCT_operator",children:(0,n.jsx)(e.code,{children:"STRUCT"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/MAX_operator",children:(0,n.jsx)(e.code,{children:"MAX"})}),"/",(0,n.jsx)(e.a,{href:"/v5/MIN_operator",children:(0,n.jsx)(e.code,{children:"MIN"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/ROUND_operator",children:(0,n.jsx)(e.code,{children:"ROUND"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/CONCAT_operator",children:(0,n.jsx)(e.code,{children:"CONCAT"})}),(0,n.jsx)("br",{}),(0,n.jsxs)(e.a,{href:"/v5/Type_conversion_operator",children:[(0,n.jsx)(e.code,{children:"INTEGER"}),", ",(0,n.jsx)(e.code,{children:"DOUBLE"}),"..."]}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/PREV_operator",children:(0,n.jsx)(e.code,{children:"PREV"})}),", ",(0,n.jsxs)(e.a,{href:"/v5/Change_operators",children:[(0,n.jsx)(e.code,{children:"CHANGED"}),", ..."]}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/CLASS_operator",children:(0,n.jsx)(e.code,{children:"ISCLASS"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/ACTIVE_TAB_operator",children:(0,n.jsx)(e.code,{children:"ACTIVE"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Literals",children:(0,n.jsx)(e.code,{children:"literal"})})]}),(0,n.jsxs)(e.td,{children:["Expression in parentheses",(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Composition_JOIN",children:"Composition"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE",children:"Selection"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Partitioning_sorting_PARTITION_..._ORDER",children:"Partition/order"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Recursion_RECURSION",children:"Recursion"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Grouping_GROUP",children:"Group"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Structure_operators_STRUCT",children:"Structure creation"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Extremum_MAX_MIN",children:"Maximum/minimum"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Rounding_operator_ROUND",children:"Rounding"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/String_operators_+_CONCAT_SUBSTRING",children:"String concatenation"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Type_conversion",children:"Type conversion"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Previous_value_PREV",children:"Previous value"}),", ",(0,n.jsx)(e.a,{href:"/v5/Change_operators_SET_CHANGED_etc",children:"Change operators"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Property_signature_CLASS",children:"Signature matching"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Activity_ACTIVE",children:"Activity"}),(0,n.jsx)("br",{})," ",(0,n.jsx)(e.a,{href:"/v5/Constant",children:"Constants"})]}),(0,n.jsxs)(e.td,{children:[(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),"Prefix",(0,n.jsx)("br",{}),(0,n.jsx)("br",{})]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:"/v5/Brackets_operator",children:(0,n.jsx)(e.code,{children:"[ ]"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/IS_AS_operators",children:(0,n.jsx)(e.code,{children:"IS"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/IS_AS_operators",children:(0,n.jsx)(e.code,{children:"AS"})})]}),(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:"/v5/Structure_operators_STRUCT",children:"Structure element access"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Classification_IS_AS",children:"Classification"}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Classification_IS_AS",children:"Classification"})]}),(0,n.jsxs)(e.td,{children:["Postfix",(0,n.jsx)("br",{}),"Postfix",(0,n.jsx)("br",{}),"Postfix"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/Arithmetic_operators",children:(0,n.jsx)(e.code,{children:"-"})})}),(0,n.jsx)(e.td,{children:"Unary minus"}),(0,n.jsx)(e.td,{children:"Prefix"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:"/v5/Arithmetic_operators",children:(0,n.jsx)(e.code,{children:"*"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Arithmetic_operators",children:(0,n.jsx)(e.code,{children:"/"})})]}),(0,n.jsxs)(e.td,{children:["Multiplication",(0,n.jsx)("br",{}),"Division"]}),(0,n.jsxs)(e.td,{children:["Binary",(0,n.jsx)("br",{}),"Binary"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:"/v5/Arithmetic_operators",children:(0,n.jsx)(e.code,{children:"+"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Arithmetic_operators",children:(0,n.jsx)(e.code,{children:"-"})})]}),(0,n.jsxs)(e.td,{children:["Addition",(0,n.jsx)("br",{}),"Subtraction"]}),(0,n.jsxs)(e.td,{children:["Binary",(0,n.jsx)("br",{}),"Binary"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:"/v5/Arithmetic_operators",children:(0,n.jsx)(e.code,{children:"(+)"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Arithmetic_operators",children:(0,n.jsx)(e.code,{children:"(-)"})})]}),(0,n.jsxs)(e.td,{children:["Addition with ",(0,n.jsx)(e.code,{children:"NULL"})," values",(0,n.jsx)("br",{}),"Subtraction with ",(0,n.jsx)(e.code,{children:"NULL"})," values"]}),(0,n.jsxs)(e.td,{children:["Binary",(0,n.jsx)("br",{}),"Binary"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/LIKE_operator",children:(0,n.jsx)(e.code,{children:"LIKE"})})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/Comparison_operators_=_etc",children:"Comparison with a pattern"})}),(0,n.jsx)(e.td,{children:"Binary"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:"/v5/Comparison_operators",children:(0,n.jsx)(e.code,{children:"<"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Comparison_operators",children:(0,n.jsx)(e.code,{children:"<="})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Comparison_operators",children:(0,n.jsx)(e.code,{children:">"})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Comparison_operators",children:(0,n.jsx)(e.code,{children:">="})})]}),(0,n.jsxs)(e.td,{children:["Less",(0,n.jsx)("br",{}),"Less or equal",(0,n.jsx)("br",{}),"Greater",(0,n.jsx)("br",{}),"Greater or equal"]}),(0,n.jsxs)(e.td,{children:["Binary",(0,n.jsx)("br",{}),"Binary",(0,n.jsx)("br",{}),"Binary",(0,n.jsx)("br",{}),"Binary"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.a,{href:"/v5/Comparison_operators",children:(0,n.jsx)(e.code,{children:"=="})}),(0,n.jsx)("br",{}),(0,n.jsx)(e.a,{href:"/v5/Comparison_operators",children:(0,n.jsx)(e.code,{children:"!="})})]}),(0,n.jsxs)(e.td,{children:["Equal",(0,n.jsx)("br",{}),"Not equal"]}),(0,n.jsxs)(e.td,{children:["Binary",(0,n.jsx)("br",{}),"Binary"]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/AND_OR_NOT_XOR_operators",children:(0,n.jsx)(e.code,{children:"NOT"})})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/Logical_operators_AND_OR_NOT_XOR",children:"Logical negation"})}),(0,n.jsx)(e.td,{children:"Prefix"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/AND_OR_NOT_XOR_operators",children:(0,n.jsx)(e.code,{children:"AND"})})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/Logical_operators_AND_OR_NOT_XOR",children:"Logical AND"})}),(0,n.jsx)(e.td,{children:"Binary"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/AND_OR_NOT_XOR_operators",children:(0,n.jsx)(e.code,{children:"XOR"})})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/Logical_operators_AND_OR_NOT_XOR",children:"Logical exclusive OR"})}),(0,n.jsx)(e.td,{children:"Binary"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/AND_OR_NOT_XOR_operators",children:(0,n.jsx)(e.code,{children:"OR"})})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/Logical_operators_AND_OR_NOT_XOR",children:"Logical OR"})}),(0,n.jsx)(e.td,{children:"Binary"})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/IF_operator",children:(0,n.jsx)(e.code,{children:"IF"})})}),(0,n.jsx)(e.td,{children:(0,n.jsx)(e.a,{href:"/v5/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE#single",children:"Condition"})}),(0,n.jsx)(e.td,{children:"Binary"})]})]})]})]})}function a(r={}){let{wrapper:e}={...(0,t.a)(),...r.components};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(x,{...r})}):x(r)}},50065:function(r,e,s){s.d(e,{Z:function(){return d},a:function(){return o}});var i=s(67294);let n={},t=i.createContext(n);function o(r){let e=i.useContext(t);return i.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function d(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(n):r.components||n:o(r.components),i.createElement(t.Provider,{value:e},r.children)}}}]);