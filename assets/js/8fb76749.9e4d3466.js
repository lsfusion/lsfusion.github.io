(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[89904],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return u}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(n),u=i,k=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(k,o(o({ref:t},s),{},{components:n})):a.createElement(k,o({ref:t},s))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16345:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return p},toc:function(){return l},default:function(){return s}});var a=n(22122),i=n(19756),r=(n(67294),n(3905)),o={title:"Action options"},p={unversionedId:"Action_options",id:"version-v4/Action_options",isDocsHomePage:!1,title:"Action options",description:"When declaring an action in the ACTION instruction a certain set of action options may be specified at the end of the declaration.",source:"@site/versioned_docs/version-v4/Action_options.md",sourceDirName:".",slug:"/Action_options",permalink:"/Action_options",editUrl:"https://github.com/danchanka/platform/edit/v4/docs/en/Action_options.md",version:"v4",lastUpdatedAt:1620995697,formattedLastUpdatedAt:"5/14/2021",frontMatter:{title:"Action options"},sidebar:"version-v4/learn",previous:{title:"WRITE operator",permalink:"/WRITE_operator"},next:{title:"GROUP instruction",permalink:"/GROUP_instruction"}},l=[{value:"Syntax",id:"syntax",children:[]},{value:"Description and parameters",id:"description-and-parameters",children:[{value:"Interactive view block",id:"interactive-view-block",children:[]},{value:"<code>DESIGN</code> instruction default values block",id:"design-instruction-default-values-block",children:[]}]}],c={toc:l};function s(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When declaring an ",(0,r.kt)("a",{parentName:"p",href:"/Actions"},"action")," in the ",(0,r.kt)("a",{parentName:"p",href:"/ACTION_instruction"},(0,r.kt)("inlineCode",{parentName:"a"},"ACTION")," instruction")," a certain set of ",(0,r.kt)("em",{parentName:"p"},"action options")," may be specified at the end of the declaration. "),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,"Options are listed one after another in arbitrary order, separated by spaces or line feeds:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"propertyOption1 ... propertyOptionN\n")),(0,r.kt)("p",null,"The following set of options is supported (the syntax of each option is indicated on a separate line):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"IN groupName\nviewType\nON eventType { actionOperator }\nCHANGEKEY key [SHOW | HIDE]\nASON eventType [ACTION] propertyId\nIMAGE path\nCONFIRM\n")),(0,r.kt)("h2",{id:"description-and-parameters"},"Description and parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"IN groupName")),(0,r.kt)("p",{parentName:"li"},"  Specifying the ",(0,r.kt)("a",{parentName:"p",href:"/Groups_of_properties_and_actions"},"group of properties and actions")," to which the action belongs. If the option is not specified, then the action will belong by default to the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.private")," group."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"groupName")),(0,r.kt)("p",{parentName:"li"},"  A group name. ",(0,r.kt)("a",{parentName:"p",href:"/IDs#cid-broken"},"Composite ID"),"."))))),(0,r.kt)("h3",{id:"interactive-view-block"},"Interactive view block"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"viewType")),(0,r.kt)("p",{parentName:"li"},"  Specifying the type of the ",(0,r.kt)("a",{parentName:"p",href:"/Interactive_view#property"},"action view")," when added to the form."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GRID")," - table column"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TOOLBAR")," - toolbar"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PANEL")," - panel")),(0,r.kt)("p",{parentName:"li"},"It is similar to specifying the viewType option in the ",(0,r.kt)("a",{parentName:"p",href:"/Properties_and_actions_block"},"property block")," of the ",(0,r.kt)("a",{parentName:"p",href:"/FORM_instruction"},(0,r.kt)("inlineCode",{parentName:"a"},"FORM"),"instruction "),". Thus, if this option is not specified either in the action options or in the property block directly on the form, the ",(0,r.kt)("a",{parentName:"p",href:"/Interactive_view#property"},"default view")," of the action display group on the form is used.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ON eventType { actionOperator }")),(0,r.kt)("p",{parentName:"li"},"  Specifying an action that will be the default handler of a certain ",(0,r.kt)("a",{parentName:"p",href:"/Form_events"},"event")," for all the interactive views of this action. Can be overridden in the property block of the ",(0,r.kt)("inlineCode",{parentName:"p"},"FORM")," instruction."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"eventType")),(0,r.kt)("p",{parentName:"li"},"  A ",(0,r.kt)("a",{parentName:"p",href:"/Form_events"},"form event")," type. It is specified by one of the keywords:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CHANGE")," - occurs when the user tries to change the value of the specified property"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CHANGEWYS")," - occurs when the user tries to change the value of the specified property using a special input mechanism. You can read more in the description of the ",(0,r.kt)("a",{parentName:"li",href:"/Form_events"},"form events")," "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GROUPCHANGE")," - occurs when the user tries to change the property value for all objects in the table (group editing)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"EDIT")," - occurs when the user tries to edit the object that is the value of the specified property"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CONTEXTMENU [caption]")," - the user has selected the specified item in the property context menu on the form. If necessary, you can also define the caption of this menu item (",(0,r.kt)("a",{parentName:"li",href:"/Literals#strliteral-broken"},"string literal"),"). If it is not specified, then, by default, it will be the same as the action caption."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"actionOperator")),(0,r.kt)("p",{parentName:"li"},"  A ",(0,r.kt)("a",{parentName:"p",href:"/Action_operator#contextdependent"},"context-dependent action operator"),". An operator that defines the action executed on an event. You can use the parameters of the property itself as operator parameters.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ASON eventType [ACTION] propertyId")),(0,r.kt)("p",{parentName:"li"},"  Specifies that this action will be the default handler of a certain ",(0,r.kt)("a",{parentName:"p",href:"/Form_events"},"event")," for all the interactive views of the specified property or action. Can be overridden in the ",(0,r.kt)("a",{parentName:"p",href:"/Properties_and_actions_block"},"property and action block")," of the ",(0,r.kt)("inlineCode",{parentName:"p"},"FORM")," instruction. "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"eventType")),(0,r.kt)("p",{parentName:"li"},"  Similar to the ",(0,r.kt)("inlineCode",{parentName:"p"},"ON")," block.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"propertyId")),(0,r.kt)("p",{parentName:"li"},"  An ",(0,r.kt)("a",{parentName:"p",href:"/IDs#propertyid-broken"},"ID of the property or action")," for which the created action will be executed when the specified form event occurs.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ACTION")),(0,r.kt)("p",{parentName:"li"},"  Keyword. If specified, it is considered that the action is set in ",(0,r.kt)("inlineCode",{parentName:"p"},"propertyId"),". If not specified, it is initially considered that a property is defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"propertyId"),"; otherwise, if no property is found, it is considered that an action is specified in ",(0,r.kt)("inlineCode",{parentName:"p"},"propertyId"),".")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"IMAGE path")),(0,r.kt)("p",{parentName:"li"},"  Specifies the file with the image to be displayed as an action icon."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"path")),(0,r.kt)("p",{parentName:"li"},"  The relative path to the file. ",(0,r.kt)("a",{parentName:"p",href:"/Literals#strliteral-broken"},"String literal"),". The path is specified relative to the ",(0,r.kt)("inlineCode",{parentName:"p"},"images")," folder."))))),(0,r.kt)("h3",{id:"design-instruction-default-values-block"},(0,r.kt)("inlineCode",{parentName:"h3"},"DESIGN")," instruction default values block"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"CHANGEKEY key [SHOW | HIDE]")),(0,r.kt)("p",{parentName:"li"},"  Specifies a ",(0,r.kt)("a",{parentName:"p",href:"/Form_events#keyboard-broken"},"keyboard shortcut")," which triggers this action. Sets the value for the ",(0,r.kt)("a",{parentName:"p",href:"/Form_design#defaultDesign"},"default design")," and can be overridden in the ",(0,r.kt)("a",{parentName:"p",href:"/DESIGN_instruction"},(0,r.kt)("inlineCode",{parentName:"a"},"DESIGN")," instruction"),"."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"key")),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("a",{parentName:"p",href:"/Literals#strliteral-broken"},"String literal")," that defines a keyboard shortcut. The definition method is identical to that for a parameter in the Java class method ",(0,r.kt)("a",{parentName:"p",href:"http://docs.oracle.com/javase/7/docs/api/javax/swing/KeyStroke.html#getKeyStroke(java.lang.String)"},"Keystroke.getKeystroke(String)"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"SHOW")),(0,r.kt)("p",{parentName:"li"},"  A keyword. If specified, the keyboard shortcut will be displayed in the action caption. Used by default.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"HIDE")),(0,r.kt)("p",{parentName:"li"},"  A keyword. If specified, the keyboard shortcut will not be displayed in the action caption. ")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"CONFIRM")),(0,r.kt)("p",{parentName:"li"},"  Keyword. If specified, the user will be asked to confirm the action when it is executed. Sets the value for the default design and can be overridden in the ",(0,r.kt)("inlineCode",{parentName:"p"},"DESIGN")," instruction."))))}s.isMDXComponent=!0}}]);