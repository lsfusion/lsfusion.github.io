(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[68661],{3905:function(t,e,r){"use strict";r.d(e,{Zo:function(){return k},kt:function(){return d}});var n=r(67294);function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function p(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){l(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,l=function(t,e){if(null==t)return{};var r,n,l={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(l[r]=t[r]);return l}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(l[r]=t[r])}return l}var o=n.createContext({}),u=function(t){var e=n.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):p(p({},e),t)),r},k=function(t){var e=u(t.components);return n.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var r=t.components,l=t.mdxType,a=t.originalType,o=t.parentName,k=i(t,["components","mdxType","originalType","parentName"]),s=u(r),d=l,N=s["".concat(o,".").concat(d)]||s[d]||m[d]||a;return r?n.createElement(N,p(p({ref:e},k),{},{components:r})):n.createElement(N,p({ref:e},k))}));function d(t,e){var r=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var a=r.length,p=new Array(a);p[0]=s;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i.mdxType="string"==typeof t?t:l,p[1]=i;for(var u=2;u<a;u++)p[u]=r[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},67355:function(t,e,r){"use strict";r.r(e),r.d(e,{frontMatter:function(){return p},metadata:function(){return i},toc:function(){return o},default:function(){return k}});var n=r(22122),l=r(19756),a=(r(67294),r(3905)),p={title:"Operator priority"},i={unversionedId:"Operator_priority",id:"Operator_priority",isDocsHomePage:!1,title:"Operator priority",description:"When evaluating an expression, operators\xa0are evaluated in a specific order depending on operator priority. The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.*\xa0*",source:"@site/docs/Operator_priority.md",sourceDirName:".",slug:"/Operator_priority",permalink:"/next/Operator_priority",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/Operator_priority.md",version:"current",lastUpdatedAt:1617631212,formattedLastUpdatedAt:"4/5/2021",frontMatter:{title:"Operator priority"},sidebar:"learn",previous:{title:"Expression",permalink:"/next/Expression"},next:{title:"Property operators",permalink:"/next/Property_operators"}},o=[],u={toc:o};function k(t){var e=t.components,r=(0,l.Z)(t,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When evaluating an ",(0,a.kt)("a",{parentName:"p",href:"/next/Expression"},"expression"),", ",(0,a.kt)("a",{parentName:"p",href:"/next/Operators"},"operators"),"\xa0are evaluated in a specific order depending on ",(0,a.kt)("em",{parentName:"p"},"operator priority.")," The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.*\xa0*"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Operator"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"(expression)"),(0,a.kt)("br",null),(0,a.kt)("p",null,"JOIN"),(0,a.kt)("br",null),(0,a.kt)("p",null,"CASE, MULTI, OVERRIDE, EXCLUSIVE, IF ... THEN"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/PARTITION_operator"},"PARTITION")),(0,a.kt)("br",null),(0,a.kt)("p",null,"RECURSION"),(0,a.kt)("br",null),(0,a.kt)("p",null,"GROUP"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/STRUCT_operator"},"STRUCT")),(0,a.kt)("br",null),(0,a.kt)("p",null,"MAX/MIN"),(0,a.kt)("br",null),(0,a.kt)("p",null,"CONCAT"),(0,a.kt)("br",null),(0,a.kt)("p",null,"INTEGER, DOUBLE..."),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/PREV_operator"},"PREV"),", ",(0,a.kt)("a",{parentName:"td",href:"/next/Change_operators"},"CHANGED, ...")),(0,a.kt)("br",null),(0,a.kt)("p",null,"CLASS"),(0,a.kt)("br",null),(0,a.kt)("p",null,"ACTIVE"),(0,a.kt)("br",null),(0,a.kt)("p",null,"literal")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Expression in parentheses"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Composition_JOIN_"},"Composition")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE_"},"Selection")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Partitioning_sorting_PARTITION_..._ORDER_"},"Partition/order")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Recursion_RECURSION_"},"Recursion")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Grouping_GROUP_"},"Group")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Structure_operations_STRUCT_"},"Structure creation")),(0,a.kt)("br",null),(0,a.kt)("p",null,"Maximum/minimum"),(0,a.kt)("br",null),(0,a.kt)("p",null,"String concatenation"),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Type_conversion"},"Type conversion")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("br",null),(0,a.kt)("br",null)),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Property_signature_CLASS_"},"Property signature")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Activity_ACTIVE_"},"Activity")),(0,a.kt)("br",null),(0,a.kt)("p",null,"\xa0",(0,a.kt)("a",{parentName:"td",href:"/next/Constant"},"Constants"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("br",null),(0,a.kt)("br",null)),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Prefix"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Operator_"},"[ ]")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/IS_AS_operators"},"IS")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/IS_AS_operators"},"AS"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Structure_operations_STRUCT_"},"Structure element access")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Classification_IS_AS_"},"Classification")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Classification_IS_AS_"},"Classification"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Postfix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Postfix"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Postfix"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/Arithmetic_operators"},"-")),(0,a.kt)("td",{parentName:"tr",align:null},"Unary minus"),(0,a.kt)("td",{parentName:"tr",align:null},"Prefix")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Arithmetic_operators"},"*")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Arithmetic_operators"},"/"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Multiplication"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Division")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Binary"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Binary"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Arithmetic_operators"},"+")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Arithmetic_operators"},"-"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Addition"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Subtraction")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Binary"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Binary"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Arithmetic_operators"},"(+)")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Arithmetic_operators"},"(-)"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Addition with NULL values"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Subtraction with NULL values")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Binary"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Binary"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Comparison_operators"},"<")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Comparison_operators"},"<=")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Comparison_operators"},">")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Comparison_operators"},">","="))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Less"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Less or equal"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Greater"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Greater or equal")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Binary"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Binary"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Binary"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Binary"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Comparison_operators"},"==")),(0,a.kt)("br",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"td",href:"/next/Comparison_operators"},"!="))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Equal"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Not equal")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,"Binary"),(0,a.kt)("br",null),(0,a.kt)("p",null,"Binary"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/AND_OR_NOT_XOR_operators"},"NOT")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical negation")),(0,a.kt)("td",{parentName:"tr",align:null},"Prefix")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/AND_OR_NOT_XOR_operators"},"AND")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical AND")),(0,a.kt)("td",{parentName:"tr",align:null},"Binary")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/AND_OR_NOT_XOR_operators"},"XOR")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical exclusive OR")),(0,a.kt)("td",{parentName:"tr",align:null},"Binary")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/AND_OR_NOT_XOR_operators"},"OR")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical OR")),(0,a.kt)("td",{parentName:"tr",align:null},"Binary")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/next/IF_operator"},"IF")),(0,a.kt)("td",{parentName:"tr",align:null},"Condition"),(0,a.kt)("td",{parentName:"tr",align:null},"Binary")))),(0,a.kt)("p",null,"*\xa0*"))}k.isMDXComponent=!0}}]);