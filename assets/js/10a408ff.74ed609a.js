"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[91035],{47589:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"v5","label":"5.x","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-v5","isLast":false,"docsSidebars":{"install":[{"type":"link","label":"Overview","href":"/v5/Install","docId":"Install","unlisted":false},{"collapsed":false,"type":"category","label":"Automatic installation","items":[{"type":"link","label":"For development","href":"/v5/Development_auto","docId":"Development_auto","unlisted":false},{"type":"link","label":"For production","href":"/v5/Execution_auto","docId":"Execution_auto","unlisted":false}],"collapsible":true,"href":"/v5/Automatic_installation"},{"collapsed":false,"type":"category","label":"Manual installation","items":[{"type":"link","label":"For development","href":"/v5/Development_manual","docId":"Development_manual","unlisted":false},{"type":"link","label":"For production","href":"/v5/Execution_manual","docId":"Execution_manual","unlisted":false}],"collapsible":true,"href":"/v5/Manual_installation"}],"learn":[{"type":"link","label":"Overview","href":"/v5/","docId":"Learn","unlisted":false},{"collapsed":false,"type":"category","label":"Paradigm","items":[{"type":"category","label":"Logical model","items":[{"type":"category","label":"Domain logic","items":[{"type":"category","label":"Properties","items":[{"type":"category","label":"Operators","items":[{"type":"link","label":"Data properties (DATA)","href":"/v5/Data_properties_DATA","docId":"Data_properties_DATA","unlisted":false},{"type":"link","label":"Composition (JOIN)","href":"/v5/Composition_JOIN","docId":"Composition_JOIN","unlisted":false},{"type":"link","label":"Constant","href":"/v5/Constant","docId":"Constant","unlisted":false},{"type":"category","label":"Operations with primitives","items":[{"type":"link","label":"Arithmetic operators (+, -, *, ...)","href":"/v5/Arithmetic_operators_+_-_etc","docId":"Arithmetic_operators_+_-_etc","unlisted":false},{"type":"link","label":"Logical operators (AND, OR, NOT, XOR)","href":"/v5/Logical_operators_AND_OR_NOT_XOR","docId":"Logical_operators_AND_OR_NOT_XOR","unlisted":false},{"type":"link","label":"Comparison operators (=, >, <, ...)","href":"/v5/Comparison_operators_=_etc","docId":"Comparison_operators_=_etc","unlisted":false},{"type":"link","label":"Rounding operator (ROUND)","href":"/v5/Rounding_operator_ROUND","docId":"Rounding_operator_ROUND","unlisted":false},{"type":"link","label":"Extremum (MAX, MIN)","href":"/v5/Extremum_MAX_MIN","docId":"Extremum_MAX_MIN","unlisted":false},{"type":"link","label":"String operators (+, CONCAT, SUBSTRING)","href":"/v5/String_operators_+_CONCAT_SUBSTRING","docId":"String_operators_+_CONCAT_SUBSTRING","unlisted":false},{"type":"link","label":"Structure operators (STRUCT, [])","href":"/v5/Structure_operators_STRUCT","docId":"Structure_operators_STRUCT","unlisted":false},{"type":"link","label":"Type conversion","href":"/v5/Type_conversion","docId":"Type_conversion","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Operations_with_primitives"},{"type":"category","label":"Class operators","items":[{"type":"link","label":"Classification (IS/AS)","href":"/v5/Classification_IS_AS","docId":"Classification_IS_AS","unlisted":false},{"type":"link","label":"Signature matching (ISCLASS)","href":"/v5/Property_signature_CLASS","docId":"Property_signature_CLASS","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Class_operators"},{"type":"link","label":"Selection (CASE, IF, MULTI, OVERRIDE, EXCLUSIVE)","href":"/v5/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE","docId":"Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE","unlisted":false},{"type":"category","label":"Set operations","items":[{"type":"link","label":"Grouping (GROUP)","href":"/v5/Grouping_GROUP","docId":"Grouping_GROUP","unlisted":false},{"type":"link","label":"Partitioning / sorting (PARTITION ... ORDER)","href":"/v5/Partitioning_sorting_PARTITION_..._ORDER","docId":"Partitioning_sorting_PARTITION_..._ORDER","unlisted":false},{"type":"link","label":"Recursion (RECURSION)","href":"/v5/Recursion_RECURSION","docId":"Recursion_RECURSION","unlisted":false},{"type":"link","label":"Distribution (UNGROUP)","href":"/v5/Distribution_UNGROUP","docId":"Distribution_UNGROUP","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Set_operations"}],"collapsed":true,"collapsible":true,"href":"/v5/Property_operators_paradigm"}],"collapsed":true,"collapsible":true,"href":"/v5/Properties"},{"type":"category","label":"Actions","items":[{"type":"link","label":"Change sessions","href":"/v5/Change_sessions","docId":"Change_sessions","unlisted":false},{"type":"category","label":"\u041eperators","items":[{"type":"category","label":"Execution order","items":[{"type":"link","label":"Sequence ({...})","href":"/v5/Sequence","docId":"Sequence","unlisted":false},{"type":"link","label":"Call (EXEC)","href":"/v5/Call_EXEC","docId":"Call_EXEC","unlisted":false},{"type":"link","label":"Loop (FOR)","href":"/v5/Loop_FOR","docId":"Loop_FOR","unlisted":false},{"type":"link","label":"Branching (CASE, IF, MULTI)","href":"/v5/Branching_CASE_IF_MULTI","docId":"Branching_CASE_IF_MULTI","unlisted":false},{"type":"link","label":"Recursive loop (WHILE)","href":"/v5/Recursive_loop_WHILE","docId":"Recursive_loop_WHILE","unlisted":false},{"type":"link","label":"Interruption (BREAK)","href":"/v5/Interruption_BREAK","docId":"Interruption_BREAK","unlisted":false},{"type":"link","label":"Exit (RETURN)","href":"/v5/Exit_RETURN","docId":"Exit_RETURN","unlisted":false},{"type":"link","label":"New threads (NEWTHREAD, NEWEXECUTOR)","href":"/v5/New_threads_NEWTHREAD_NEWEXECUTOR","docId":"New_threads_NEWTHREAD_NEWEXECUTOR","unlisted":false},{"type":"link","label":"Exception handling (TRY)","href":"/v5/Exception_handling_TRY","docId":"Exception_handling_TRY","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Execution_order"},{"type":"category","label":"State change","items":[{"type":"link","label":"Property change (CHANGE)","href":"/v5/Property_change_CHANGE","docId":"Property_change_CHANGE","unlisted":false},{"type":"link","label":"New object (NEW)","href":"/v5/New_object_NEW","docId":"New_object_NEW","unlisted":false},{"type":"link","label":"Class change (CHANGECLASS, DELETE)","href":"/v5/Class_change_CHANGECLASS_DELETE","docId":"Class_change_CHANGECLASS_DELETE","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/State_change"},{"type":"category","label":"Session management","items":[{"type":"link","label":"Apply changes (APPLY)","href":"/v5/Apply_changes_APPLY","docId":"Apply_changes_APPLY","unlisted":false},{"type":"link","label":"Cancel changes (CANCEL)","href":"/v5/Cancel_changes_CANCEL","docId":"Cancel_changes_CANCEL","unlisted":false},{"type":"link","label":"New session (NEWSESSION, NESTEDSESSION)","href":"/v5/New_session_NEWSESSION_NESTEDSESSION","docId":"New_session_NEWSESSION_NESTEDSESSION","unlisted":false},{"type":"link","label":"Previous value (PREV)","href":"/v5/Previous_value_PREV","docId":"Previous_value_PREV","unlisted":false},{"type":"link","label":"Change operators (SET, CHANGED, ...)","href":"/v5/Change_operators_SET_CHANGED_etc","docId":"Change_operators_SET_CHANGED_etc","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Session_management"},{"type":"category","label":"User/IS interaction","items":[{"type":"link","label":"Show message (MESSAGE, ASK)","href":"/v5/Show_message_MESSAGE_ASK","docId":"Show_message_MESSAGE_ASK","unlisted":false},{"type":"category","label":"File operators","items":[{"type":"link","label":"Read file (READ)","href":"/v5/Read_file_READ","docId":"Read_file_READ","unlisted":false},{"type":"link","label":"Write file (WRITE)","href":"/v5/Write_file_WRITE","docId":"Write_file_WRITE","unlisted":false},{"type":"link","label":"Data import (IMPORT)","href":"/v5/Data_import_IMPORT","docId":"Data_import_IMPORT","unlisted":false},{"type":"link","label":"Data export (EXPORT)","href":"/v5/Data_export_EXPORT","docId":"Data_export_EXPORT","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/File_operators"},{"type":"link","label":"Send mail (EMAIL)","href":"/v5/Send_mail_EMAIL","docId":"Send_mail_EMAIL","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/User_IS_interaction"}],"collapsed":true,"collapsible":true,"href":"/v5/Action_operators_paradigm"}],"collapsed":true,"collapsible":true,"href":"/v5/Actions"},{"type":"category","label":"Events","items":[{"type":"link","label":"Simple event","href":"/v5/Simple_event","docId":"Simple_event","unlisted":false},{"type":"link","label":"Calculated events","href":"/v5/Calculated_events","docId":"Calculated_events","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Events"},{"type":"category","label":"Constraints","items":[{"type":"link","label":"Simple constraints","href":"/v5/Simple_constraints","docId":"Simple_constraints","unlisted":false},{"type":"category","label":"Classes","items":[{"type":"link","label":"Built-in classes","href":"/v5/Built-in_classes","docId":"Built-in_classes","unlisted":false},{"type":"link","label":"User classes","href":"/v5/User_classes","docId":"User_classes","unlisted":false},{"type":"link","label":"Static objects","href":"/v5/Static_objects","docId":"Static_objects","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Classes"},{"type":"link","label":"Aggregations","href":"/v5/Aggregations","docId":"Aggregations","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Constraints"}],"collapsed":true,"collapsible":true,"href":"/v5/Domain_logic"},{"type":"category","label":"View logic","items":[{"type":"category","label":"Forms","items":[{"type":"category","label":"Form structure","items":[{"type":"link","label":"Groups of properties and actions","href":"/v5/Groups_of_properties_and_actions","docId":"Groups_of_properties_and_actions","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Form_structure"},{"type":"category","label":"Form views","items":[{"type":"category","label":"Interactive view","items":[{"type":"link","label":"Form design","href":"/v5/Form_design","docId":"Form_design","unlisted":false},{"type":"link","label":"Form events","href":"/v5/Form_events","docId":"Form_events","unlisted":false},{"type":"category","label":"Form operators","items":[{"type":"category","label":"Value input","items":[{"type":"link","label":"Primitive input (INPUT)","href":"/v5/Primitive_input_INPUT","docId":"Primitive_input_INPUT","unlisted":false},{"type":"link","label":"Value request (REQUEST)","href":"/v5/Value_request_REQUEST","docId":"Value_request_REQUEST","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Value_input"},{"type":"category","label":"Object group operators","items":[{"type":"link","label":"Search (SEEK)","href":"/v5/Search_SEEK","docId":"Search_SEEK","unlisted":false},{"type":"link","label":"Object tree visibility (EXPAND, COLLAPSE)","href":"/v5/Object_tree_visibility_EXPAND_COLLAPSE","docId":"Object_tree_visibility_EXPAND_COLLAPSE","unlisted":false},{"type":"link","label":"Filter (FILTER)","href":"/v5/Filter_FILTER","docId":"Filter_FILTER","unlisted":false},{"type":"link","label":"Order (ORDER)","href":"/v5/Order_ORDER","docId":"Order_ORDER","unlisted":false},{"type":"link","label":"View (VIEW)","href":"/v5/View_VIEW","docId":"View_VIEW","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Object_group_operators"},{"type":"category","label":"Focus operators","items":[{"type":"link","label":"Activation (ACTIVATE)","href":"/v5/Activation_ACTIVATE","docId":"Activation_ACTIVATE","unlisted":false},{"type":"link","label":"Activity (ACTIVE)","href":"/v5/Activity_ACTIVE","docId":"Activity_ACTIVE","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Focus_operators"}],"collapsed":true,"collapsible":true,"href":"/v5/Form_operators"}],"collapsed":true,"collapsible":true,"href":"/v5/Interactive_view"},{"type":"category","label":"Static view","items":[{"type":"category","label":"Print view","items":[{"type":"link","label":"Report design","href":"/v5/Report_design","docId":"Report_design","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Print_view"},{"type":"link","label":"Structured view","href":"/v5/Structured_view","docId":"Structured_view","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Static_view"}],"collapsed":true,"collapsible":true,"href":"/v5/Form_views"},{"type":"category","label":"Open form","items":[{"type":"link","label":"In an interactive view (SHOW, DIALOG)","href":"/v5/In_an_interactive_view_SHOW_DIALOG","docId":"In_an_interactive_view_SHOW_DIALOG","unlisted":false},{"type":"link","label":"In a print view (PRINT)","href":"/v5/In_a_print_view_PRINT","docId":"In_a_print_view_PRINT","unlisted":false},{"type":"link","label":"In a structured view (EXPORT, IMPORT)","href":"/v5/In_a_structured_view_EXPORT_IMPORT","docId":"In_a_structured_view_EXPORT_IMPORT","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Open_form"}],"collapsed":true,"collapsible":true,"href":"/v5/Forms"},{"type":"category","label":"Navigator","items":[{"type":"link","label":"Navigator design","href":"/v5/Navigator_design","docId":"Navigator_design","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Navigator"}],"collapsed":true,"collapsible":true,"href":"/v5/View_logic"}],"collapsed":true,"collapsible":true,"href":"/v5/Logical_model"},{"type":"category","label":"Physical model","items":[{"type":"category","label":"Development","items":[{"type":"category","label":"Element identification","items":[{"type":"link","label":"Naming","href":"/v5/Naming","docId":"Naming","unlisted":false},{"type":"link","label":"Search","href":"/v5/Search_","docId":"Search_","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Element_identification"},{"type":"category","label":"Modularity","items":[{"type":"link","label":"Modules","href":"/v5/Modules","docId":"Modules","unlisted":false},{"type":"link","label":"Projects","href":"/v5/Projects","docId":"Projects","unlisted":false},{"type":"category","label":"Extensions","items":[{"type":"link","label":"Class extension","href":"/v5/Class_extension","docId":"Class_extension","unlisted":false},{"type":"link","label":"Property extension","href":"/v5/Property_extension","docId":"Property_extension","unlisted":false},{"type":"link","label":"Action extension","href":"/v5/Action_extension","docId":"Action_extension","unlisted":false},{"type":"link","label":"Form extension","href":"/v5/Form_extension","docId":"Form_extension","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Extensions"}],"collapsed":true,"collapsible":true,"href":"/v5/Modularity"},{"type":"link","label":"Metaprogramming","href":"/v5/Metaprogramming","docId":"Metaprogramming","unlisted":false},{"type":"category","label":"Integration","items":[{"type":"link","label":"Access from an external system","href":"/v5/Access_from_an_external_system","docId":"Access_from_an_external_system","unlisted":false},{"type":"link","label":"Access from an internal system","href":"/v5/Access_from_an_internal_system","docId":"Access_from_an_internal_system","unlisted":false},{"type":"link","label":"Access to an external system (EXTERNAL)","href":"/v5/Access_to_an_external_system_EXTERNAL","docId":"Access_to_an_external_system_EXTERNAL","unlisted":false},{"type":"category","label":"Access to an internal system (INTERNAL, FORMULA)","items":[{"type":"link","label":"Internal call (INTERNAL)","href":"/v5/Internal_call_INTERNAL","docId":"Internal_call_INTERNAL","unlisted":false},{"type":"link","label":"Custom formula (FORMULA)","href":"/v5/Custom_formula_FORMULA","docId":"Custom_formula_FORMULA","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Access_to_an_internal_system_INTERNAL_FORMULA"},{"type":"link","label":"Eval (EVAL)","href":"/v5/Eval_EVAL","docId":"Eval_EVAL","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Integration"},{"type":"link","label":"Migration","href":"/v5/Migration","docId":"Migration","unlisted":false},{"type":"link","label":"Internationalization","href":"/v5/Internationalization","docId":"Internationalization","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Development"},{"type":"category","label":"Execution","items":[{"type":"link","label":"Materializations","href":"/v5/Materializations","docId":"Materializations","unlisted":false},{"type":"link","label":"Indexes","href":"/v5/Indexes","docId":"Indexes","unlisted":false},{"type":"link","label":"Tables","href":"/v5/Tables","docId":"Tables","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Execution"},{"type":"category","label":"Management","items":[{"type":"category","label":"System parameters","items":[{"type":"category","label":"Launch parameters","items":[{"type":"link","label":"Launch events","href":"/v5/Launch_events","docId":"Launch_events","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Launch_parameters"},{"type":"link","label":"Working parameters","href":"/v5/Working_parameters","docId":"Working_parameters","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/System_parameters"},{"type":"link","label":"User interface","href":"/v5/User_interface","docId":"User_interface","unlisted":false},{"type":"link","label":"Interpreter","href":"/v5/Interpreter","docId":"Interpreter","unlisted":false},{"type":"link","label":"Security policy","href":"/v5/Security_policy","docId":"Security_policy","unlisted":false},{"type":"link","label":"Process monitor","href":"/v5/Process_monitor","docId":"Process_monitor","unlisted":false},{"type":"link","label":"Scheduler","href":"/v5/Scheduler","docId":"Scheduler","unlisted":false},{"type":"link","label":"Journals and logs","href":"/v5/Journals_and_logs","docId":"Journals_and_logs","unlisted":false},{"type":"link","label":"Profiler","href":"/v5/Profiler","docId":"Profiler","unlisted":false},{"type":"link","label":"Chat","href":"/v5/Chat","docId":"Chat","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Management"}],"collapsed":true,"collapsible":true,"href":"/v5/Physical_model"}],"collapsible":true,"href":"/v5/Paradigm"},{"collapsed":false,"type":"category","label":"Language","items":[{"type":"link","label":"Tokens","href":"/v5/Tokens","docId":"Tokens","unlisted":false},{"type":"link","label":"IDs","href":"/v5/IDs","docId":"IDs","unlisted":false},{"type":"link","label":"Literals","href":"/v5/Literals","docId":"Literals","unlisted":false},{"type":"category","label":"Statements","items":[{"type":"link","label":"Module header","href":"/v5/Module_header","docId":"Module_header","unlisted":false},{"type":"category","label":"= statement","items":[{"type":"category","label":"Expression","items":[{"type":"link","label":"Operator priority","href":"/v5/Operator_priority","docId":"Operator_priority","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Expression"},{"type":"category","label":"Property operators","items":[{"type":"link","label":"Arithmetic operators","href":"/v5/Arithmetic_operators","docId":"Arithmetic_operators","unlisted":false},{"type":"link","label":"[] operator","href":"/v5/Brackets_operator","docId":"Brackets_operator","unlisted":false},{"type":"link","label":"ABSTRACT operator","href":"/v5/ABSTRACT_operator","docId":"ABSTRACT_operator","unlisted":false},{"type":"link","label":"ACTIVE TAB operator","href":"/v5/ACTIVE_TAB_operator","docId":"ACTIVE_TAB_operator","unlisted":false},{"type":"link","label":"AGGR operator","href":"/v5/AGGR_operator","docId":"AGGR_operator","unlisted":false},{"type":"link","label":"CASE operator","href":"/v5/CASE_operator","docId":"CASE_operator","unlisted":false},{"type":"link","label":"CONCAT operator","href":"/v5/CONCAT_operator","docId":"CONCAT_operator","unlisted":false},{"type":"link","label":"DATA operator","href":"/v5/DATA_operator","docId":"DATA_operator","unlisted":false},{"type":"link","label":"EXCLUSIVE operator","href":"/v5/EXCLUSIVE_operator","docId":"EXCLUSIVE_operator","unlisted":false},{"type":"link","label":"FORMULA operator","href":"/v5/FORMULA_operator","docId":"FORMULA_operator","unlisted":false},{"type":"link","label":"GROUP operator","href":"/v5/GROUP_operator","docId":"GROUP_operator","unlisted":false},{"type":"link","label":"IF operator","href":"/v5/IF_operator","docId":"IF_operator","unlisted":false},{"type":"link","label":"IF ... THEN operator","href":"/v5/IF_..._THEN_operator","docId":"IF_..._THEN_operator","unlisted":false},{"type":"link","label":"ISCLASS operator","href":"/v5/CLASS_operator","docId":"CLASS_operator","unlisted":false},{"type":"link","label":"JOIN operator","href":"/v5/JOIN_operator","docId":"JOIN_operator","unlisted":false},{"type":"link","label":"LIKE operator","href":"/v5/LIKE_operator","docId":"LIKE_operator","unlisted":false},{"type":"link","label":"MAX operator","href":"/v5/MAX_operator","docId":"MAX_operator","unlisted":false},{"type":"link","label":"MIN operator","href":"/v5/MIN_operator","docId":"MIN_operator","unlisted":false},{"type":"link","label":"MULTI operator","href":"/v5/MULTI_operator","docId":"MULTI_operator","unlisted":false},{"type":"link","label":"OVERRIDE operator","href":"/v5/OVERRIDE_operator","docId":"OVERRIDE_operator","unlisted":false},{"type":"link","label":"PARTITION operator","href":"/v5/PARTITION_operator","docId":"PARTITION_operator","unlisted":false},{"type":"link","label":"PREV operator","href":"/v5/PREV_operator","docId":"PREV_operator","unlisted":false},{"type":"link","label":"RECURSION operator","href":"/v5/RECURSION_operator","docId":"RECURSION_operator","unlisted":false},{"type":"link","label":"ROUND operator","href":"/v5/ROUND_operator","docId":"ROUND_operator","unlisted":false},{"type":"link","label":"STRUCT operator","href":"/v5/STRUCT_operator","docId":"STRUCT_operator","unlisted":false},{"type":"link","label":"UNGROUP operator","href":"/v5/UNGROUP_operator","docId":"UNGROUP_operator","unlisted":false},{"type":"link","label":"Object group operator","href":"/v5/Object_group_operator","docId":"Object_group_operator","unlisted":false},{"type":"link","label":"Type conversion operator","href":"/v5/Type_conversion_operator","docId":"Type_conversion_operator","unlisted":false},{"type":"link","label":"AND, OR, NOT, XOR operators","href":"/v5/AND_OR_NOT_XOR_operators","docId":"AND_OR_NOT_XOR_operators","unlisted":false},{"type":"link","label":"IS, AS operators","href":"/v5/IS_AS_operators","docId":"IS_AS_operators","unlisted":false},{"type":"link","label":"Change operators","href":"/v5/Change_operators","docId":"Change_operators","unlisted":false},{"type":"link","label":"Comparison operators","href":"/v5/Comparison_operators","docId":"Comparison_operators","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Property_operators"},{"type":"link","label":"Property options","href":"/v5/Property_options","docId":"Property_options","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/=_statement"},{"type":"category","label":"ACTION statement","items":[{"type":"category","label":"Action operators","items":[{"type":"link","label":"{...} operator","href":"/v5/Braces_operator","docId":"Braces_operator","unlisted":false},{"type":"link","label":"ABSTRACT operator","href":"/v5/ABSTRACT_action_operator","docId":"ABSTRACT_action_operator","unlisted":false},{"type":"link","label":"ACTIVATE operator","href":"/v5/ACTIVATE_operator","docId":"ACTIVATE_operator","unlisted":false},{"type":"link","label":"ACTIVE FORM operator","href":"/v5/ACTIVE_FORM_operator","docId":"ACTIVE_FORM_operator","unlisted":false},{"type":"link","label":"APPLY operator","href":"/v5/APPLY_operator","docId":"APPLY_operator","unlisted":false},{"type":"link","label":"ASK operator","href":"/v5/ASK_operator","docId":"ASK_operator","unlisted":false},{"type":"link","label":"CHANGE operator","href":"/v5/CHANGE_operator","docId":"CHANGE_operator","unlisted":false},{"type":"link","label":"BREAK operator","href":"/v5/BREAK_operator","docId":"BREAK_operator","unlisted":false},{"type":"link","label":"CANCEL operator","href":"/v5/CANCEL_operator","docId":"CANCEL_operator","unlisted":false},{"type":"link","label":"CASE operator","href":"/v5/CASE_action_operator","docId":"CASE_action_operator","unlisted":false},{"type":"link","label":"CHANGECLASS operator","href":"/v5/CHANGECLASS_operator","docId":"CHANGECLASS_operator","unlisted":false},{"type":"link","label":"COLLAPSE operator","href":"/v5/COLLAPSE_operator","docId":"COLLAPSE_operator","unlisted":false},{"type":"link","label":"INTERNAL operator","href":"/v5/INTERNAL_operator","docId":"INTERNAL_operator","unlisted":false},{"type":"link","label":"DELETE operator","href":"/v5/DELETE_operator","docId":"DELETE_operator","unlisted":false},{"type":"link","label":"DIALOG operator","href":"/v5/DIALOG_operator","docId":"DIALOG_operator","unlisted":false},{"type":"link","label":"EMAIL operator","href":"/v5/EMAIL_operator","docId":"EMAIL_operator","unlisted":false},{"type":"link","label":"EVAL operator","href":"/v5/EVAL_operator","docId":"EVAL_operator","unlisted":false},{"type":"link","label":"EXEC operator","href":"/v5/EXEC_operator","docId":"EXEC_operator","unlisted":false},{"type":"link","label":"EXPAND operator","href":"/v5/EXPAND_operator","docId":"EXPAND_operator","unlisted":false},{"type":"link","label":"EXPORT operator","href":"/v5/EXPORT_operator","docId":"EXPORT_operator","unlisted":false},{"type":"link","label":"EXTERNAL operator","href":"/v5/EXTERNAL_operator","docId":"EXTERNAL_operator","unlisted":false},{"type":"link","label":"FOR operator","href":"/v5/FOR_operator","docId":"FOR_operator","unlisted":false},{"type":"link","label":"IF ... THEN operator","href":"/v5/IF_..._THEN_action_operator","docId":"IF_..._THEN_action_operator","unlisted":false},{"type":"link","label":"IMPORT operator","href":"/v5/IMPORT_operator","docId":"IMPORT_operator","unlisted":false},{"type":"link","label":"INPUT operator","href":"/v5/INPUT_operator","docId":"INPUT_operator","unlisted":false},{"type":"link","label":"MESSAGE operator","href":"/v5/MESSAGE_operator","docId":"MESSAGE_operator","unlisted":false},{"type":"link","label":"MULTI operator","href":"/v5/MULTI_action_operator","docId":"MULTI_action_operator","unlisted":false},{"type":"link","label":"NEW operator","href":"/v5/NEW_operator","docId":"NEW_operator","unlisted":false},{"type":"link","label":"NESTEDSESSION operator","href":"/v5/NESTEDSESSION_operator","docId":"NESTEDSESSION_operator","unlisted":false},{"type":"link","label":"NEWEXECUTOR operator","href":"/v5/NEWEXECUTOR_operator","docId":"NEWEXECUTOR_operator","unlisted":false},{"type":"link","label":"NEWSESSION operator","href":"/v5/NEWSESSION_operator","docId":"NEWSESSION_operator","unlisted":false},{"type":"link","label":"NEWTHREAD operator","href":"/v5/NEWTHREAD_operator","docId":"NEWTHREAD_operator","unlisted":false},{"type":"link","label":"PRINT operator","href":"/v5/PRINT_operator","docId":"PRINT_operator","unlisted":false},{"type":"link","label":"READ operator","href":"/v5/READ_operator","docId":"READ_operator","unlisted":false},{"type":"link","label":"REQUEST operator","href":"/v5/REQUEST_operator","docId":"REQUEST_operator","unlisted":false},{"type":"link","label":"RETURN operator","href":"/v5/RETURN_operator","docId":"RETURN_operator","unlisted":false},{"type":"link","label":"SEEK operator","href":"/v5/SEEK_operator","docId":"SEEK_operator","unlisted":false},{"type":"link","label":"SHOW operator","href":"/v5/SHOW_operator","docId":"SHOW_operator","unlisted":false},{"type":"link","label":"TRY operator","href":"/v5/TRY_operator","docId":"TRY_operator","unlisted":false},{"type":"link","label":"WHILE operator","href":"/v5/WHILE_operator","docId":"WHILE_operator","unlisted":false},{"type":"link","label":"WRITE operator","href":"/v5/WRITE_operator","docId":"WRITE_operator","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Action_operators"},{"type":"link","label":"Action options","href":"/v5/Action_options","docId":"Action_options","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/ACTION_statement"},{"type":"link","label":"GROUP statement","href":"/v5/GROUP_statement","docId":"GROUP_statement","unlisted":false},{"type":"category","label":"ON statement","items":[{"type":"link","label":"Event description block","href":"/v5/Event_description_block","docId":"Event_description_block","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/ON_statement"},{"type":"link","label":"WHEN statement","href":"/v5/WHEN_statement","docId":"WHEN_statement","unlisted":false},{"type":"link","label":"<- WHEN statement","href":"/v5/lt-_WHEN_statement","docId":"lt-_WHEN_statement","unlisted":false},{"type":"link","label":"CONSTRAINT statement","href":"/v5/CONSTRAINT_statement","docId":"CONSTRAINT_statement","unlisted":false},{"type":"link","label":"=> statement","href":"/v5/=gt_statement","docId":"=gt_statement","unlisted":false},{"type":"link","label":"CLASS statement","href":"/v5/CLASS_statement","docId":"CLASS_statement","unlisted":false},{"type":"category","label":"FORM statement","items":[{"type":"link","label":"Object blocks","href":"/v5/Object_blocks","docId":"Object_blocks","unlisted":false},{"type":"link","label":"Properties and actions block","href":"/v5/Properties_and_actions_block","docId":"Properties_and_actions_block","unlisted":false},{"type":"link","label":"Filter and sorting blocks","href":"/v5/Filters_and_sortings_block","docId":"Filters_and_sortings_block","unlisted":false},{"type":"link","label":"Event block","href":"/v5/Event_block","docId":"Event_block","unlisted":false},{"type":"link","label":"Pivot table settings block","href":"/v5/Pivot_block","docId":"Pivot_block","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/FORM_statement"},{"type":"link","label":"DESIGN statement","href":"/v5/DESIGN_statement","docId":"DESIGN_statement","unlisted":false},{"type":"link","label":"NAVIGATOR statement","href":"/v5/NAVIGATOR_statement","docId":"NAVIGATOR_statement","unlisted":false},{"type":"link","label":"WINDOW statement","href":"/v5/WINDOW_statement","docId":"WINDOW_statement","unlisted":false},{"type":"link","label":"EXTEND CLASS statement","href":"/v5/EXTEND_CLASS_statement","docId":"EXTEND_CLASS_statement","unlisted":false},{"type":"link","label":"EXTEND FORM statement","href":"/v5/EXTEND_FORM_statement","docId":"EXTEND_FORM_statement","unlisted":false},{"type":"link","label":"+= statement","href":"/v5/+=_statement","docId":"+=_statement","unlisted":false},{"type":"link","label":"ACTION+ statement","href":"/v5/ACTION+_statement","docId":"ACTION+_statement","unlisted":false},{"type":"link","label":"META statement","href":"/v5/META_statement","docId":"META_statement","unlisted":false},{"type":"link","label":"@ statement","href":"/v5/commat_statement","docId":"commat_statement","unlisted":false},{"type":"link","label":"TABLE statement","href":"/v5/TABLE_statement","docId":"TABLE_statement","unlisted":false},{"type":"link","label":"INDEX statement","href":"/v5/INDEX_statement","docId":"INDEX_statement","unlisted":false},{"type":"link","label":"BEFORE statement","href":"/v5/BEFORE_statement","docId":"BEFORE_statement","unlisted":false},{"type":"link","label":"AFTER statement","href":"/v5/AFTER_statement","docId":"AFTER_statement","unlisted":false},{"type":"link","label":"Empty statement","href":"/v5/Empty_statement","docId":"Empty_statement","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Statements"},{"type":"link","label":"Comments","href":"/v5/Comments","docId":"Comments","unlisted":false},{"type":"link","label":"Coding conventions","href":"/v5/Coding_conventions","docId":"Coding_conventions","unlisted":false}],"collapsible":true,"href":"/v5/Language"},{"type":"link","label":"IDE","href":"/v5/IDE","docId":"IDE","unlisted":false},{"collapsed":false,"type":"category","label":"Learning materials","items":[{"type":"category","label":"Examples","items":[{"type":"link","label":"Score table","href":"/v5/Score_table","docId":"Score_table","unlisted":false},{"type":"link","label":"Materials management","href":"/v5/Materials_management","docId":"Materials_management","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/Examples"},{"type":"category","label":"How-to","items":[{"type":"category","label":"How-to: Computations","items":[{"type":"link","label":"How-to: GROUP SUM","href":"/v5/How-to_GROUP_SUM","docId":"How-to_GROUP_SUM","unlisted":false},{"type":"link","label":"How-to: GROUP MAX/MIN/AGGR","href":"/v5/How-to_GROUP_MAX_MIN_AGGR","docId":"How-to_GROUP_MAX_MIN_AGGR","unlisted":false},{"type":"link","label":"How-to: CASE/IF/OVERRIDE","href":"/v5/How-to_CASE_IF_OVERRIDE","docId":"How-to_CASE_IF_OVERRIDE","unlisted":false},{"type":"link","label":"How-to: GROUP LAST","href":"/v5/How-to_GROUP_LAST","docId":"How-to_GROUP_LAST","unlisted":false},{"type":"link","label":"How-to: GROUP CONCAT","href":"/v5/How-to_GROUP_CONCAT","docId":"How-to_GROUP_CONCAT","unlisted":false},{"type":"link","label":"How-to: PARTITION","href":"/v5/How-to_PARTITION","docId":"How-to_PARTITION","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Computations"},{"type":"category","label":"How-to: GUI","items":[{"type":"category","label":"How-to: Interactive forms","items":[{"type":"link","label":"How-to: CRUD","href":"/v5/How-to_CRUD","docId":"How-to_CRUD","unlisted":false},{"type":"link","label":"How-to: Documents with lines","href":"/v5/How-to_Documents_with_lines","docId":"How-to_Documents_with_lines","unlisted":false},{"type":"link","label":"How-to: Filtering and ordering","href":"/v5/How-to_Filtering_and_ordering","docId":"How-to_Filtering_and_ordering","unlisted":false},{"type":"link","label":"How-to: Design","href":"/v5/How-to_Design","docId":"How-to_Design","unlisted":false},{"type":"link","label":"How-to: Trees","href":"/v5/How-to_Trees","docId":"How-to_Trees","unlisted":false},{"type":"link","label":"How-to: Data entry","href":"/v5/How-to_Data_entry","docId":"How-to_Data_entry","unlisted":false},{"type":"link","label":"How-to: Navigator","href":"/v5/How-to_Navigator","docId":"How-to_Navigator","unlisted":false},{"type":"link","label":"How-to: Matrix","href":"/v5/How-to_Matrix","docId":"How-to_Matrix","unlisted":false},{"type":"link","label":"How-to: Table status","href":"/v5/How-to_Table_status","docId":"How-to_Table_status","unlisted":false},{"type":"link","label":"How-to: Custom components (properties)","href":"/v5/How-to_Custom_components_properties","docId":"How-to_Custom_components_properties","unlisted":false},{"type":"link","label":"How-to: Custom Components (objects)","href":"/v5/How-to_Custom_components_objects","docId":"How-to_Custom_components_objects","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Interactive_forms"},{"type":"link","label":"How-to: Reports","href":"/v5/How-to_Reports","docId":"How-to_Reports","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_GUI"},{"type":"category","label":"How-to: Imperative logic","items":[{"type":"category","label":"How-to: Actions","items":[{"type":"link","label":"How-to: CHANGE","href":"/v5/How-to_CHANGE","docId":"How-to_CHANGE","unlisted":false},{"type":"link","label":"How-to: EXEC","href":"/v5/How-to_EXEC","docId":"How-to_EXEC","unlisted":false},{"type":"link","label":"How-to: NEW","href":"/v5/How-to_NEW","docId":"How-to_NEW","unlisted":false},{"type":"link","label":"How-to: DELETE","href":"/v5/How-to_DELETE","docId":"How-to_DELETE","unlisted":false},{"type":"link","label":"How-to: FOR","href":"/v5/How-to_FOR","docId":"How-to_FOR","unlisted":false},{"type":"link","label":"How-to: IF/CASE","href":"/v5/How-to_IF_CASE","docId":"How-to_IF_CASE","unlisted":false},{"type":"link","label":"How-to: WHILE","href":"/v5/How-to_WHILE","docId":"How-to_WHILE","unlisted":false},{"type":"link","label":"How-to: NEWSESSION","href":"/v5/How-to_NEWSESSION","docId":"How-to_NEWSESSION","unlisted":false},{"type":"link","label":"How-to: SEEK","href":"/v5/How-to_SEEK","docId":"How-to_SEEK","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Actions"},{"type":"link","label":"How-to: Events","href":"/v5/How-to_Events","docId":"How-to_Events","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Imperative_logic"},{"type":"category","label":"How-to: Declarative logic","items":[{"type":"link","label":"How-to: Constraints","href":"/v5/How-to_Constraints","docId":"How-to_Constraints","unlisted":false},{"type":"link","label":"How-to: Inheritance and aggregation","href":"/v5/How-to_Inheritance_and_aggregation","docId":"How-to_Inheritance_and_aggregation","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Declarative_logic"},{"type":"category","label":"How-to: Searching for elements","items":[{"type":"link","label":"How-to: Namespaces","href":"/v5/How-to_Namespaces","docId":"How-to_Namespaces","unlisted":false},{"type":"link","label":"How-to: Explicit typing","href":"/v5/How-to_Explicit_typing","docId":"How-to_Explicit_typing","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Searching_for_elements"},{"type":"category","label":"How-to: Extensions","items":[{"type":"link","label":"How-to: Class extension","href":"/v5/How-to_Class_extension","docId":"How-to_Class_extension","unlisted":false},{"type":"link","label":"How-to: Property extension","href":"/v5/How-to_Property_extension","docId":"How-to_Property_extension","unlisted":false},{"type":"link","label":"How-to: Action extension","href":"/v5/How-to_Action_extension","docId":"How-to_Action_extension","unlisted":false},{"type":"link","label":"How-to: Form extension","href":"/v5/How-to_Form_extension","docId":"How-to_Form_extension","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Extensions"},{"type":"category","label":"How-to: Integration","items":[{"type":"category","label":"How-to: Working with external formats","items":[{"type":"link","label":"How-to: Data export","href":"/v5/How-to_Data_export","docId":"How-to_Data_export","unlisted":false},{"type":"link","label":"How-to: Data import","href":"/v5/How-to_Data_import","docId":"How-to_Data_import","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Working_with_external_formats"},{"type":"link","label":"How-to: Interaction via HTTP protocol","href":"/v5/How-to_Interaction_via_HTTP_protocol","docId":"How-to_Interaction_via_HTTP_protocol","unlisted":false},{"type":"link","label":"How-to: Frontend","href":"/v5/How-to_Frontend","docId":"How-to_Frontend","unlisted":false},{"type":"category","label":"How-to: Access to internal systems","items":[{"type":"link","label":"How-to: FORMULA","href":"/v5/How-to_FORMULA","docId":"How-to_FORMULA","unlisted":false},{"type":"link","label":"How-to: INTERNAL","href":"/v5/How-to_INTERNAL","docId":"How-to_INTERNAL","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Access_to_internal_systems"}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Integration"},{"type":"category","label":"How-to: Use Cases","items":[{"type":"link","label":"How-to: Working with documents","href":"/v5/How-to_Working_with_documents","docId":"How-to_Working_with_documents","unlisted":false},{"type":"link","label":"How-to: Registers","href":"/v5/How-to_Registers","docId":"How-to_Registers","unlisted":false},{"type":"link","label":"How-to: Numbering","href":"/v5/How-to_Numbering","docId":"How-to_Numbering","unlisted":false},{"type":"link","label":"How-to: Using objects as templates","href":"/v5/How-to_Using_objects_as_templates","docId":"How-to_Using_objects_as_templates","unlisted":false},{"type":"link","label":"How-to: Overriding values","href":"/v5/How-to_Overriding_values","docId":"How-to_Overriding_values","unlisted":false},{"type":"link","label":"How-to: Binding properties","href":"/v5/How-to_Binding_properties","docId":"How-to_Binding_properties","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to_Use_Cases"},{"type":"link","label":"How-to: Metaprogramming","href":"/v5/How-to_Metaprogramming","docId":"How-to_Metaprogramming","unlisted":false},{"type":"link","label":"How-to: Physical model","href":"/v5/How-to_Physical_model","docId":"How-to_Physical_model","unlisted":false},{"type":"link","label":"How-to: Internationalization","href":"/v5/How-to_Internationalization","docId":"How-to_Internationalization","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/v5/How-to"}],"collapsible":true,"href":"/v5/Learning_materials"},{"type":"link","label":"Online demo","href":"/v5/Online_demo","docId":"Online_demo","unlisted":false}]},"docs":{"+=_statement":{"id":"+=_statement","title":"+= statement","description":"The += statement adds an implementation (selection option) to an abstract property.","sidebar":"learn"},"=_statement":{"id":"=_statement","title":"= statement","description":"The = statement creates a new property.","sidebar":"learn"},"=gt_statement":{"id":"=gt_statement","title":"=> statement","description":"The => statement creates a consequence.","sidebar":"learn"},"ABSTRACT_action_operator":{"id":"ABSTRACT_action_operator","title":"ABSTRACT operator","description":"The ABSTRACT operator - creating an abstract action.","sidebar":"learn"},"ABSTRACT_operator":{"id":"ABSTRACT_operator","title":"ABSTRACT operator","description":"The ABSTRACT operator creates an abstract property.","sidebar":"learn"},"Access_from_an_external_system":{"id":"Access_from_an_external_system","title":"Access from an external system","description":"Action API","sidebar":"learn"},"Access_from_an_internal_system":{"id":"Access_from_an_internal_system","title":"Access from an internal system","description":"Java interaction","sidebar":"learn"},"Access_to_an_external_system_EXTERNAL":{"id":"Access_to_an_external_system_EXTERNAL","title":"Access to an external system (EXTERNAL)","description":"The operator for accessing an external system executes a specified code in the language/paradigm of the external system specified. In addition, this operator allows passing objects of built-in classes as parameters of this type of call, and also writing the results of calls to the properties specified (without parameters).","sidebar":"learn"},"Access_to_an_internal_system_INTERNAL_FORMULA":{"id":"Access_to_an_internal_system_INTERNAL_FORMULA","title":"Access to an internal system (INTERNAL, FORMULA)","description":"Java interaction","sidebar":"learn"},"Action_extension":{"id":"Action_extension","title":"Action extension","description":"The actions extension technique allows the developer to declare an abstract action in one module and add to it an implementation in other modules. This technique is essentially a \\"postponed definition\\" of a branch operator, where the operator\u2019s title is defined when the property is declared, and branching conditions are added as new functionality (of classes or static objects) is added to the system. Furthermore, branching conditions (if branching is not mutually exclusive) can be added both to the beginning and to the end of the abstract action created. Similarly, this technique works with a sequence operator.","sidebar":"learn"},"Action_operators":{"id":"Action_operators","title":"Action operators","description":"Action operator is a syntax construct that describes an operator creating an action.","sidebar":"learn"},"Action_operators_paradigm":{"id":"Action_operators_paradigm","title":"\u041eperators","description":"Operators for creating actions can be divided into several categories:","sidebar":"learn"},"Action_options":{"id":"Action_options","title":"Action options","description":"When declaring an action in the ACTION statement a certain set of action options may be specified at the end of the declaration.","sidebar":"learn"},"ACTION_statement":{"id":"ACTION_statement","title":"ACTION statement","description":"The ACTION statement creates an action.","sidebar":"learn"},"ACTION+_statement":{"id":"ACTION+_statement","title":"ACTION+ statement","description":"The ACTION+ statement adds an implementation (branching condition) to an abstract action.","sidebar":"learn"},"Actions":{"id":"Actions","title":"Actions","description":"An action is an element of the system that takes a set of objects (parameters) and uses them in one way or another to change the system state (that of the system in which the action is executed, as well as the state of any other external system).","sidebar":"learn"},"ACTIVATE_operator":{"id":"ACTIVATE_operator","title":"ACTIVATE operator","description":"The ACTIVATE operator creates an action that activates a specified form, tab, property, or action on a form","sidebar":"learn"},"Activation_ACTIVATE":{"id":"Activation_ACTIVATE","title":"Activation (ACTIVATE)","description":"The activation operator creates an action that activates one of three form elements:","sidebar":"learn"},"ACTIVE_FORM_operator":{"id":"ACTIVE_FORM_operator","title":"ACTIVE FORM operator","description":"The ACTIVATE FORM operator creates an action that checks the activeness of a form.","sidebar":"learn"},"ACTIVE_TAB_operator":{"id":"ACTIVE_TAB_operator","title":"ACTIVE TAB operator","description":"The ACTIVE TAB operator creates a property that checks if specified tab is active.","sidebar":"learn"},"Activity_ACTIVE":{"id":"Activity_ACTIVE","title":"Activity (ACTIVE)","description":"The activity operator creates a property that determines whether one of the following form elements is active:","sidebar":"learn"},"AFTER_statement":{"id":"AFTER_statement","title":"AFTER statement","description":"The AFTER statement calls an action after calling another action.","sidebar":"learn"},"AGGR_operator":{"id":"AGGR_operator","title":"AGGR operator","description":"The AGGR operator creates an aggregation.","sidebar":"learn"},"Aggregations":{"id":"Aggregations","title":"Aggregations","description":"Aggregation is the creation of a unique (aggregate) of the object corresponding to each non-NULL value of some aggregated property. Each such object is assumed to have properties that map this object to each aggregated property parameter, and, conversely, a property that maps the aggregated property parameters to this object.","sidebar":"learn"},"AND_OR_NOT_XOR_operators":{"id":"AND_OR_NOT_XOR_operators","title":"AND, OR, NOT, XOR operators","description":"AND, OR, NOT, XOR operators that create properties that implement logical operations.","sidebar":"learn"},"Apply_changes_APPLY":{"id":"Apply_changes_APPLY","title":"Apply changes (APPLY)","description":"The apply changes operator saves all changes made to the database, and also triggers the handling of all synchronous global events.","sidebar":"learn"},"APPLY_operator":{"id":"APPLY_operator","title":"APPLY operator","description":"The APPLY operator creates an action that applies changes to the database.","sidebar":"learn"},"Arithmetic_operators":{"id":"Arithmetic_operators","title":"Arithmetic operators","description":"+, -, *, /, (+), (-) operators create properties responsible for arithmetic operations.","sidebar":"learn"},"Arithmetic_operators_+_-_etc":{"id":"Arithmetic_operators_+_-_etc","title":"Arithmetic operators (+, -, *, ...)","description":"Arithmetic operators create properties whose value is the result of an arithmetic operation. The arguments of these operators must be properties whose values are instances of number classes . The platform currently supports the following arithmetic operators:","sidebar":"learn"},"ASK_operator":{"id":"ASK_operator","title":"ASK operator","description":"The ASK operator creates an action that shows the user a message in a dialog form.","sidebar":"learn"},"Automatic_installation":{"id":"Automatic_installation","title":"Install automatically","description":"For development","sidebar":"install"},"BEFORE_statement":{"id":"BEFORE_statement","title":"BEFORE statement","description":"The BEFORE statement calls an action before calling another action.","sidebar":"learn"},"Braces_operator":{"id":"Braces_operator","title":"{...} operator","description":"The {...} operator creates actions that executes a sequence of other actions.","sidebar":"learn"},"Brackets_operator":{"id":"Brackets_operator","title":"[] operator","description":"The ] operator creates a [property that returns an object from a structure.","sidebar":"learn"},"Branching_CASE_IF_MULTI":{"id":"Branching_CASE_IF_MULTI","title":"Branching (CASE, IF, MULTI)","description":"The branching operator creates an action that determines for a set of conditions which condition is met, and calls the corresponding action.","sidebar":"learn"},"BREAK_operator":{"id":"BREAK_operator","title":"BREAK operator","description":"The BREAK operator creates an action that implements a loop interruption.","sidebar":"learn"},"Built-in_classes":{"id":"Built-in_classes","title":"Built-in classes","description":"Built-in classes are classes whose instances are objects belonging to primitive data types such as integers, strings, etc.","sidebar":"learn"},"Calculated_events":{"id":"Calculated_events","title":"Calculated events","description":"Calculated events are events that change the value of a property when the value of some other property (condition) changes to a non-NULL value. Moreover, unlike simple events, this change is not made at the moment the condition is changed but is calculated each time the changed property is accessed. If the property has already been changed in the same session, this change is considered higher priority than the change in the calculated event.","sidebar":"learn"},"Call_EXEC":{"id":"Call_EXEC","title":"Call (EXEC)","description":"The EXEC operator creates an action that executes another action, passing it specified properties (arguments).","sidebar":"learn"},"Cancel_changes_CANCEL":{"id":"Cancel_changes_CANCEL","title":"Cancel changes (CANCEL)","description":"The cancel changes operator completely clears the current change session.","sidebar":"learn"},"CANCEL_operator":{"id":"CANCEL_operator","title":"CANCEL operator","description":"The CANCEL operator creates an action that cancels changes in the current session.","sidebar":"learn"},"CASE_action_operator":{"id":"CASE_action_operator","title":"CASE operator","description":"The CASE operator creates an action that implements branching.","sidebar":"learn"},"CASE_operator":{"id":"CASE_operator","title":"CASE operator","description":"The CASE operator  creates a property that selects a result by condition.","sidebar":"learn"},"CHANGE_operator":{"id":"CHANGE_operator","title":"CHANGE operator","description":"The CHANGE operator creates an action that changes properties.","sidebar":"learn"},"Change_operators":{"id":"Change_operators","title":"Change operators","description":"Change operators - a set of operators that determine various types of property value changes.","sidebar":"learn"},"Change_operators_SET_CHANGED_etc":{"id":"Change_operators_SET_CHANGED_etc","title":"Change operators (SET, CHANGED, ...)","description":"Change operators determine whether some types of changes have occurred for a certain property in the current session. All these operators are derived from the previous value operator (PREV), however, it is recommended to use them to improve readability and performance. The following table shows the supported types of changes and their description:","sidebar":"learn"},"Change_sessions":{"id":"Change_sessions","title":"Change sessions","description":"Actions can change the state of the system in which they are executed. It is not always desirable to write these changes directly to the database, both from the perspective of integrity and from the perspective of the ergonomics of the system. The platform therefore allows to accumulate these changes locally in change sessions.","sidebar":"learn"},"CHANGECLASS_operator":{"id":"CHANGECLASS_operator","title":"CHANGECLASS operator","description":"The CHANGECLASS operator creates an action that changes objects classes.","sidebar":"learn"},"Chat":{"id":"Chat","title":"Chat","description":"(Under development)","sidebar":"learn"},"Class_change_CHANGECLASS_DELETE":{"id":"Class_change_CHANGECLASS_DELETE","title":"Class change (CHANGECLASS, DELETE)","description":"The class change operator creates an action that assigns the given class to all objects where value of a particular property (condition) is not equal to NULL. The condition can be omitted, in which case it is considered to be equal to TRUE.","sidebar":"learn"},"Class_extension":{"id":"Class_extension","title":"Class extension","description":"The class extension technique allows the developer to inherit one class from another after its creation. Also, using this mechanism you can add extra static objects to a class.","sidebar":"learn"},"CLASS_operator":{"id":"CLASS_operator","title":"ISCLASS operator","description":"The ISCLASS operator creates a property that implements a signature matching operator.","sidebar":"learn"},"Class_operators":{"id":"Class_operators","title":"Class operators","description":"Class operators include the following operators:","sidebar":"learn"},"CLASS_statement":{"id":"CLASS_statement","title":"CLASS statement","description":"CLASS statement - creating a new custom class.","sidebar":"learn"},"Classes":{"id":"Classes","title":"Classes","description":"The base element in lsFusion is the object. Each object is an instance of some class, which determines the qualities of all its instances. Classes in turn can be divided into built-in classes, which are responsible for primitive data types, and user classes.","sidebar":"learn"},"Classification_IS_AS":{"id":"Classification_IS_AS","title":"Classification (IS/AS)","description":"Classification operators create properties that determine whether an object belongs to the class specified. If the property argument does not belong to the class specified in the operator, the property returns NULL. Otherwise, the operator IS returns TRUE, and the operator AS returns the object passed as an argument.","sidebar":"learn"},"Coding_conventions":{"id":"Coding_conventions","title":"Coding conventions","description":"Common","sidebar":"learn"},"COLLAPSE_operator":{"id":"COLLAPSE_operator","title":"COLLAPSE operator","description":"The COLLAPSE operator is the creation of an action, that implements the collapse of elements in the object tree.","sidebar":"learn"},"commat_statement":{"id":"commat_statement","title":"@ statement","description":"The @ statement uses metacode.","sidebar":"learn"},"Comments":{"id":"Comments","title":"Comments","description":"Comments in a programming language allow you to add textual explanations and notes directly into the code without affecting its execution. In lsFusion, comments are marked by two slashes //. Everything that follows these symbols until the end of the line is treated as a comment and is ignored by the interpreter.","sidebar":"learn"},"Comparison_operators":{"id":"Comparison_operators","title":"Comparison operators","description":"==, =, !=, `, =` operators create properties that implement comparison operations.","sidebar":"learn"},"Comparison_operators_=_etc":{"id":"Comparison_operators_=_etc","title":"Comparison operators (=, >, <, ...)","description":"Comparison operators create actions which return the result of the comparison operation. The values of the created properties belong to the built-in class BOOLEAN.","sidebar":"learn"},"Composition_JOIN":{"id":"Composition_JOIN","title":"Composition (JOIN)","description":"The composition operator allows you to use values of other properties as arguments for one (main) property.","sidebar":"learn"},"CONCAT_operator":{"id":"CONCAT_operator","title":"CONCAT operator","description":"The CONCAT operator creates a property that implements a string concatenation.","sidebar":"learn"},"Constant":{"id":"Constant","title":"Constant","description":"The constant operator is used to create properties without parameters which always return the same value. This value can be static objects of custom and built-in classes as well as the special NULL value.","sidebar":"learn"},"CONSTRAINT_statement":{"id":"CONSTRAINT_statement","title":"CONSTRAINT statement","description":"The CONSTRAINT statement creates a constraint.","sidebar":"learn"},"Constraints":{"id":"Constraints","title":"Constraints","description":"Constraints in the platform determine which values the data properties can have and which cannot. In general, a constraint is defined as a property which value should always be NULL.","sidebar":"learn"},"Custom_formula_FORMULA":{"id":"Custom_formula_FORMULA","title":"Custom formula (FORMULA)","description":"The custom formula operator allows you to create a property that calculates defined formula in SQL. You can specify different implementations of the formula for different SQL servers. The formula is defined as a string, within which the special character $ and the number of this parameter (starting from 1) are used to access the parameter. Accordingly, the number of parameters of the result property will be equal to the greatest of the numbers of the parameters used.","sidebar":"learn"},"Data_export_EXPORT":{"id":"Data_export_EXPORT","title":"Data export (EXPORT)","description":"The data export operator creates an action that reads values of the specified properties for all object collections where the value of the specified property (condition) is not NULL, and then saves these values to a file in a specified format.","sidebar":"learn"},"Data_import_IMPORT":{"id":"Data_import_IMPORT","title":"Data import (IMPORT)","description":"The data import operator creates an action which reads a file from the value of some property, then, depending on its format, defines the columns (fields) of data in this file, after which it writes the value of each column (field) to the corresponding property (parameter) - import assignment. The mapping of columns to properties can go in either column or name order.","sidebar":"learn"},"DATA_operator":{"id":"DATA_operator","title":"DATA operator","description":"The DATA operator creates a data property.","sidebar":"learn"},"Data_properties_DATA":{"id":"Data_properties_DATA","title":"Data properties (DATA)","description":"Data property is a property which value is stored in the database and may change through the execution of the corresponding action. Each parameter and the value of a data property must belong to a certain specified class. If a parameter does not belong to the specified class or is NULL, then the property value will return NULL.","sidebar":"learn"},"DELETE_operator":{"id":"DELETE_operator","title":"DELETE operator","description":"The DELETE operator creates an action that deletes objects.","sidebar":"learn"},"DESIGN_statement":{"id":"DESIGN_statement","title":"DESIGN statement","description":"The DESIGN statement changes form design.","sidebar":"learn"},"Development":{"id":"Development","title":"Development","description":"The development model includes the following concepts:","sidebar":"learn"},"Development_auto":{"id":"Development_auto","title":"For development","description":"On this page you can download installers that install everything needed for development in a single click. In addition to lsFusion, these installers also install OpenJDK, PostgreSQL, Tomcat, and IntelliJ IDEA Community Edition with the built-in lsFusion plugin. If any of these programs are already on your computer, you can exclude them during the installation process.","sidebar":"install"},"Development_manual":{"id":"Development_manual","title":"For development","description":"To install the application server, IDE, and client, Java version 8 or later must first be installed on the computer.","sidebar":"install"},"DIALOG_operator":{"id":"DIALOG_operator","title":"DIALOG operator","description":"The DIALOG operator creates an action that opens a form in an interactive view in dialog mode.","sidebar":"learn"},"Distribution_UNGROUP":{"id":"Distribution_UNGROUP","title":"Distribution (UNGROUP)","description":"The distribution operator creates a property, the grouping value of which using sum function will be equal to the value of the specified property (distributable). Accordingly, as for a group operator, for a distribution operator multiple properties (groups) must be set by which the grouping will take place.","sidebar":"learn"},"Domain_logic":{"id":"Domain_logic","title":"Domain logic","description":"Properties are the basic concept for business logic and are responsible for storing and calculating data.","sidebar":"learn"},"Element_identification":{"id":"Element_identification","title":"Element identification","description":"On the lsFusion platform, some elements of the system are named, meaning that they can be used by accessing them by name.","sidebar":"learn"},"EMAIL_operator":{"id":"EMAIL_operator","title":"EMAIL operator","description":"The EMAIL operator creates an action that sends email.","sidebar":"learn"},"Empty_statement":{"id":"Empty_statement","title":"Empty statement","description":"Empty statement - a special statement that consists of a single semicolon.","sidebar":"learn"},"Eval_EVAL":{"id":"Eval_EVAL","title":"Eval (EVAL)","description":"The eval operator creates an action that executes defined program code in the lsFusion language. Program code is defined as a property whose value should belong to the string class. This is implemented using an action which takes a line of code as an argument.","sidebar":"learn"},"EVAL_operator":{"id":"EVAL_operator","title":"EVAL operator","description":"The EVAL operator: creating an action that executes code in the lsFusion language.","sidebar":"learn"},"Event_block":{"id":"Event_block","title":"Event block","description":"The event block of the  FORM statement - a set of constructions controlling events in an interactive form view.","sidebar":"learn"},"Event_description_block":{"id":"Event_description_block","title":"Event description block","description":"Event description block describes an event in different statements.","sidebar":"learn"},"Events":{"id":"Events","title":"Events","description":"Events are a mechanism that allows to execute certain actions at certain points in time (these actions shall be called event handlers).","sidebar":"learn"},"Examples":{"id":"Examples","title":"Examples","description":"Examples are intended to demonstrate the capabilities of the lsFusion platform.","sidebar":"learn"},"Exception_handling_TRY":{"id":"Exception_handling_TRY","title":"Exception handling (TRY)","description":"The exception handling operator enables you to execute an action and do the following if an error (exception) occurs:","sidebar":"learn"},"EXCLUSIVE_operator":{"id":"EXCLUSIVE_operator","title":"EXCLUSIVE operator","description":"The EXCLUSIVE operator creates a property that implements a selection of one of the values (polymorphic form).","sidebar":"learn"},"EXEC_operator":{"id":"EXEC_operator","title":"EXEC operator","description":"The EXEC operator creates an action that executes another action.","sidebar":"learn"},"Execution":{"id":"Execution","title":"Execution","description":"If the system is small and there is not much data in it, it usually works quite efficiently without any additional optimizations. But if the logic becomes more complex, and the amount of data increases significantly, it often makes sense to tell the platform how best to store and process all this data.","sidebar":"learn"},"Execution_auto":{"id":"Execution_auto","title":"For production","description":"Installation","sidebar":"install"},"Execution_manual":{"id":"Execution_manual","title":"For production","description":"To install the application server, web server and client, Java version 8 or later must first be installed on the computer.","sidebar":"install"},"Execution_order":{"id":"Execution_order","title":"Execution order","description":"The platform supports the following operators for managing the order in which actions are executed:","sidebar":"learn"},"Exit_RETURN":{"id":"Exit_RETURN","title":"Exit (RETURN)","description":"The exit operator creates an action that exits from the inmost action call. Control is passed to the first action following that call operator.","sidebar":"learn"},"EXPAND_operator":{"id":"EXPAND_operator","title":"EXPAND operator","description":"The EXPAND operator is the creation of an action, that implements the expansion of elements in the object tree.","sidebar":"learn"},"EXPORT_operator":{"id":"EXPORT_operator","title":"EXPORT operator","description":"The EXPORT operator: creates an action that exports specified properties to a file, or, in common case, that opens a form in a structured view.","sidebar":"learn"},"Expression":{"id":"Expression","title":"Expression","description":"An expression is a combination of property operators and parameters. When an expression is evaluated sequentially in priority order, all the operators are executed.","sidebar":"learn"},"EXTEND_CLASS_statement":{"id":"EXTEND_CLASS_statement","title":"EXTEND CLASS statement","description":"The EXTEND CLASS statement extends an existing class.","sidebar":"learn"},"EXTEND_FORM_statement":{"id":"EXTEND_FORM_statement","title":"EXTEND FORM statement","description":"The EXTEND FORM statement extends an existing form.","sidebar":"learn"},"Extensions":{"id":"Extensions","title":"Extensions","description":"Extension is a technique that allows a developer to extend the functionality of one module in another.","sidebar":"learn"},"EXTERNAL_operator":{"id":"EXTERNAL_operator","title":"EXTERNAL operator","description":"The EXTERNAL operator creates an action that implements accessing to an external system.","sidebar":"learn"},"Extremum_MAX_MIN":{"id":"Extremum_MAX_MIN","title":"Extremum (MAX, MIN)","description":"The extremum operator creates a property which calculates the maximum or minimum between several specified properties. If the value of any of these properties is NULL, this property is ignored. If the values of all properties are NULL, the result value is also NULL.","sidebar":"learn"},"File_operators":{"id":"File_operators","title":"File operators","description":"The platform supports the following file operators:","sidebar":"learn"},"Filter_FILTER":{"id":"Filter_FILTER","title":"Filter (FILTER)","description":"The filter operator creates a property that returns TRUE if the object collection matches the current filter of the specified object group, and NULL if it does not.","sidebar":"learn"},"Filters_and_sortings_block":{"id":"Filters_and_sortings_block","title":"Filter and sorting blocks","description":"The filter and order blocks of the FORM statement \u2013 adding filters and orderings to the form structure, as well as filter groups and user filters to the interactive form view.","sidebar":"learn"},"Focus_operators":{"id":"Focus_operators","title":"Focus operators","description":"This category includes operators responsible for managing component activity:","sidebar":"learn"},"FOR_operator":{"id":"FOR_operator","title":"FOR operator","description":"The FOR operator creates an action that implements loop.","sidebar":"learn"},"Form_design":{"id":"Form_design","title":"Form design","description":"The form design defines how a form is displayed in the interactive view.","sidebar":"learn"},"Form_events":{"id":"Form_events","title":"Form events","description":"While the application is running, there is a number of events for each form that occur as a result of certain user actions:","sidebar":"learn"},"Form_extension":{"id":"Form_extension","title":"Form extension","description":"The form extension technique allows the developer to extend the structure and design of a form created in another module.","sidebar":"learn"},"Form_operators":{"id":"Form_operators","title":"Form operators","description":"Form operators can be divided into several categories:","sidebar":"learn"},"FORM_statement":{"id":"FORM_statement","title":"FORM statement","description":"The FORM statement creates a form.","sidebar":"learn"},"Form_structure":{"id":"Form_structure","title":"Form structure","description":"The form structure is a complex of objects, properties, actions and relations between them.","sidebar":"learn"},"Form_views":{"id":"Form_views","title":"Form views","description":"A form view can be classified as follows:","sidebar":"learn"},"Forms":{"id":"Forms","title":"Forms","description":"Forms let you combine different types of information for one or more objects in a single interface. Logically, aform can be divided into two parts:","sidebar":"learn"},"FORMULA_operator":{"id":"FORMULA_operator","title":"FORMULA operator","description":"The FORMULA operator creates a property that implements a custom formula.","sidebar":"learn"},"GROUP_operator":{"id":"GROUP_operator","title":"GROUP operator","description":"The GROUP operator creates a property implementing grouping.","sidebar":"learn"},"GROUP_statement":{"id":"GROUP_statement","title":"GROUP statement","description":"The GROUP statement creates a new property group.","sidebar":"learn"},"Grouping_GROUP":{"id":"Grouping_GROUP","title":"Grouping (GROUP)","description":"The group operator creates a property that divides all object collections in the system into groups, and calculates an aggregating function for each group following specified order. Accordingly, the set for which this aggregating function is calculated is determined as all the object collections belonging to this group.","sidebar":"learn"},"Groups_of_properties_and_actions":{"id":"Groups_of_properties_and_actions","title":"Groups of properties and actions","description":"The behavior of properties and actions in the context of working with groups is absolutely identical, therefore, in the rest of this section, we will use only the term property (the behavior for actions is completely similar).","sidebar":"learn"},"How-to":{"id":"How-to","title":"How-to","description":"How to read these sections","sidebar":"learn"},"How-to_Access_to_internal_systems":{"id":"How-to_Access_to_internal_systems","title":"How-to: Access to internal systems","description":"How to read these sections","sidebar":"learn"},"How-to_Action_extension":{"id":"How-to_Action_extension","title":"How-to: Action extension","description":"We can use the following scheme to implement polymorphism:","sidebar":"learn"},"How-to_Actions":{"id":"How-to_Actions","title":"How-to: Actions","description":"How to read these sections","sidebar":"learn"},"How-to_Binding_properties":{"id":"How-to_Binding_properties","title":"How-to: Binding properties","description":"Example 1","sidebar":"learn"},"How-to_CASE_IF_OVERRIDE":{"id":"How-to_CASE_IF_OVERRIDE","title":"How-to: CASE/IF/OVERRIDE","description":"Example 1","sidebar":"learn"},"How-to_CHANGE":{"id":"How-to_CHANGE","title":"How-to: CHANGE","description":"Example 1","sidebar":"learn"},"How-to_Class_extension":{"id":"How-to_Class_extension","title":"How-to: Class extension","description":"The typical scheme for extracting relations between classes to a separate module is as follows:","sidebar":"learn"},"How-to_Computations":{"id":"How-to_Computations","title":"How-to: Computations","description":"How to read these sections","sidebar":"learn"},"How-to_Constraints":{"id":"How-to_Constraints","title":"How-to: Constraints","description":"Example 1","sidebar":"learn"},"How-to_CRUD":{"id":"How-to_CRUD","title":"How-to: CRUD","description":"Example 1","sidebar":"learn"},"How-to_Custom_components_objects":{"id":"How-to_Custom_components_objects","title":"How-to: Custom Components (objects)","description":"By default, each object on a form with GRID view is displayed on the form as a flat table with columns.","sidebar":"learn"},"How-to_Custom_components_properties":{"id":"How-to_Custom_components_properties","title":"How-to: Custom components (properties)","description":"For each property type, by default, a predefined visual component is used to display and edit the data.","sidebar":"learn"},"How-to_Data_entry":{"id":"How-to_Data_entry","title":"How-to: Data entry","description":"Example 1","sidebar":"learn"},"How-to_Data_export":{"id":"How-to_Data_export","title":"How-to: Data export","description":"Example 1","sidebar":"learn"},"How-to_Data_import":{"id":"How-to_Data_import","title":"How-to: Data import","description":"Example 1","sidebar":"learn"},"How-to_Declarative_logic":{"id":"How-to_Declarative_logic","title":"How-to: Declarative logic","description":"How to read these sections","sidebar":"learn"},"How-to_DELETE":{"id":"How-to_DELETE","title":"How-to: DELETE","description":"Example 1","sidebar":"learn"},"How-to_Design":{"id":"How-to_Design","title":"How-to: Design","description":"Example 1","sidebar":"learn"},"How-to_Documents_with_lines":{"id":"How-to_Documents_with_lines","title":"How-to: Documents with lines","description":"Example 1","sidebar":"learn"},"How-to_Events":{"id":"How-to_Events","title":"How-to: Events","description":"Example 1","sidebar":"learn"},"How-to_EXEC":{"id":"How-to_EXEC","title":"How-to: EXEC","description":"Example 1","sidebar":"learn"},"How-to_Explicit_typing":{"id":"How-to_Explicit_typing","title":"How-to: Explicit typing","description":"In certain situations, you may want to use the same name for different system properties or actions.","sidebar":"learn"},"How-to_Extensions":{"id":"How-to_Extensions","title":"How-to: Extensions","description":"Extensions are very important for providing the modularity and extensibility of applications.","sidebar":"learn"},"How-to_Filtering_and_ordering":{"id":"How-to_Filtering_and_ordering","title":"How-to: Filtering and ordering","description":"Example 1","sidebar":"learn"},"How-to_FOR":{"id":"How-to_FOR","title":"How-to: FOR","description":"Example 1","sidebar":"learn"},"How-to_Form_extension":{"id":"How-to_Form_extension","title":"How-to: Form extension","description":"Let\'s assume there is a module that describes the Sku form that is used to edit SKU values:","sidebar":"learn"},"How-to_FORMULA":{"id":"How-to_FORMULA","title":"How-to: FORMULA","description":"Example 1","sidebar":"learn"},"How-to_Frontend":{"id":"How-to_Frontend","title":"How-to: Frontend","description":"The easiest way to organize the interaction of a React application with an application based on lsFusion is communication via the HTTP protocol through the JSON API. To export a list of objects meeting a specified condition, it is most convenient to use the interface located at the eval/action Url. You can pass lsFusion program code to it in BODY, and it will then be executed. If you need to return data from your request, use the EXPORT operator. By default it returns data in JSON format, which is then easily processed using JavaScript.","sidebar":"learn"},"How-to_GROUP_CONCAT":{"id":"How-to_GROUP_CONCAT","title":"How-to: GROUP CONCAT","description":"Example 1","sidebar":"learn"},"How-to_GROUP_LAST":{"id":"How-to_GROUP_LAST","title":"How-to: GROUP LAST","description":"Example 1","sidebar":"learn"},"How-to_GROUP_MAX_MIN_AGGR":{"id":"How-to_GROUP_MAX_MIN_AGGR","title":"How-to: GROUP MAX/MIN/AGGR","description":"Example 1","sidebar":"learn"},"How-to_GROUP_SUM":{"id":"How-to_GROUP_SUM","title":"How-to: GROUP SUM","description":"Example 1","sidebar":"learn"},"How-to_GUI":{"id":"How-to_GUI","title":"How-to: GUI","description":"How to read these sections","sidebar":"learn"},"How-to_IF_CASE":{"id":"How-to_IF_CASE","title":"How-to: IF/CASE","description":"Example 1","sidebar":"learn"},"How-to_Imperative_logic":{"id":"How-to_Imperative_logic","title":"How-to: Imperative logic","description":"How to read these sections","sidebar":"learn"},"How-to_Inheritance_and_aggregation":{"id":"How-to_Inheritance_and_aggregation","title":"How-to: Inheritance and aggregation","description":"In order to demonstrate the principles of object inheritance and aggregation, let\'s implement the logic of creating batches based on receipts and production documents. Let\'s make it so that each new document with a Posted property will automatically generate exactly one new product batch.","sidebar":"learn"},"How-to_Integration":{"id":"How-to_Integration","title":"How-to: Integration","description":"How to read these sections","sidebar":"learn"},"How-to_Interaction_via_HTTP_protocol":{"id":"How-to_Interaction_via_HTTP_protocol","title":"How-to: Interaction via HTTP protocol","description":"Example 1","sidebar":"learn"},"How-to_Interactive_forms":{"id":"How-to_Interactive_forms","title":"How-to: Interactive forms","description":"How to read these sections","sidebar":"learn"},"How-to_INTERNAL":{"id":"How-to_INTERNAL","title":"How-to: INTERNAL","description":"Example 1","sidebar":"learn"},"How-to_Internationalization":{"id":"How-to_Internationalization","title":"How-to: Internationalization","description":"The system supports  internationalization by passing to the client values localized according to the language chosen by the user. All values in braces are localized. Let\'s assume that we need to implement a simple form with a list of books and their prices that we can create/delete.","sidebar":"learn"},"How-to_Matrix":{"id":"How-to_Matrix","title":"How-to: Matrix","description":"Example 1","sidebar":"learn"},"How-to_Metaprogramming":{"id":"How-to_Metaprogramming","title":"How-to: Metaprogramming","description":"You may often need to write \\"similar\\" code for certain cases. The META statement exists for this purpose, and makes it possible to create a code template or metacode. It can contain parameters that will be replaced by certain values when this metacode is used. Such an approach is called metaprogramming.","sidebar":"learn"},"How-to_Namespaces":{"id":"How-to_Namespaces","title":"How-to: Namespaces","description":"Occasionally, you will find yourself in situations where you will need to use the same name for different system elements. For this purpose, you can assign them to different namespaces that are defined for a module using the NAMESPACE statement. By default, the namespace matches the name of the module.","sidebar":"learn"},"How-to_Navigator":{"id":"How-to_Navigator","title":"How-to: Navigator","description":"Example 1","sidebar":"learn"},"How-to_NEW":{"id":"How-to_NEW","title":"How-to: NEW","description":"Example 1","sidebar":"learn"},"How-to_NEWSESSION":{"id":"How-to_NEWSESSION","title":"How-to: NEWSESSION","description":"Example 1","sidebar":"learn"},"How-to_Numbering":{"id":"How-to_Numbering","title":"How-to: Numbering","description":"Let\'s suppose we have a set of books. For each of these books, we define a number as an integer.","sidebar":"learn"},"How-to_Overriding_values":{"id":"How-to_Overriding_values","title":"How-to: Overriding values","description":"Often there are tasks when it is necessary to give the user opportunity to enter the value of some attribute for some general object and then override it for some specific object.","sidebar":"learn"},"How-to_PARTITION":{"id":"How-to_PARTITION","title":"How-to: PARTITION","description":"Example 1","sidebar":"learn"},"How-to_Physical_model":{"id":"How-to_Physical_model","title":"How-to: Physical model","description":"By default, each class in the database creates a separate table that stores all those properties whose only parameter is an object of this class. The key in this table is a field that stores a unique object ID. For properties with several parameters, a table will be created with the IDs of parameter objects as keys.","sidebar":"learn"},"How-to_Property_extension":{"id":"How-to_Property_extension","title":"How-to: Property extension","description":"The classic approach for implementing polymorphism can look as follows:","sidebar":"learn"},"How-to_Registers":{"id":"How-to_Registers","title":"How-to: Registers","description":"Accumulation ledger","sidebar":"learn"},"How-to_Reports":{"id":"How-to_Reports","title":"How-to: Reports","description":"Example 1","sidebar":"learn"},"How-to_Searching_for_elements":{"id":"How-to_Searching_for_elements","title":"How-to: Searching for elements","description":"How to read these sections","sidebar":"learn"},"How-to_SEEK":{"id":"How-to_SEEK","title":"How-to: SEEK","description":"Example 1","sidebar":"learn"},"How-to_Table_status":{"id":"How-to_Table_status","title":"How-to: Table status","description":"Example 1","sidebar":"learn"},"How-to_Trees":{"id":"How-to_Trees","title":"How-to: Trees","description":"Example 1","sidebar":"learn"},"How-to_Use_Cases":{"id":"How-to_Use_Cases","title":"How-to: Use Cases","description":"How to read these sections","sidebar":"learn"},"How-to_Using_objects_as_templates":{"id":"How-to_Using_objects_as_templates","title":"How-to: Using objects as templates","description":"Example 1","sidebar":"learn"},"How-to_WHILE":{"id":"How-to_WHILE","title":"How-to: WHILE","description":"Example 1","sidebar":"learn"},"How-to_Working_with_documents":{"id":"How-to_Working_with_documents","title":"How-to: Working with documents","description":"Posting documents","sidebar":"learn"},"How-to_Working_with_external_formats":{"id":"How-to_Working_with_external_formats","title":"How-to: Working with external formats","description":"How to read these sections","sidebar":"learn"},"IDE":{"id":"IDE","title":"IDE","description":"Creating a new lsFusion project","sidebar":"learn"},"IDs":{"id":"IDs","title":"IDs","description":"|Name                |Examples|Use|Description|Technical description|","sidebar":"learn"},"IF_..._THEN_action_operator":{"id":"IF_..._THEN_action_operator","title":"IF ... THEN operator","description":"The IF ... THEN operator creates an action that implements branching with one condition (single form).","sidebar":"learn"},"IF_..._THEN_operator":{"id":"IF_..._THEN_operator","title":"IF ... THEN operator","description":"The IF ... THEN operator creates a property that implements selection with one condition (single form).","sidebar":"learn"},"IF_operator":{"id":"IF_operator","title":"IF operator","description":"The IF operator - creating a property implementing selection of a value by condition (single form).","sidebar":"learn"},"IMPORT_operator":{"id":"IMPORT_operator","title":"IMPORT operator","description":"The IMPORT operator creates an action that imports data from a specified file into specified properties (parameters) or, in general, into a specified form.","sidebar":"learn"},"In_a_print_view_PRINT":{"id":"In_a_print_view_PRINT","title":"In a print view (PRINT)","description":"This operator creates an action that opens a form in the print view.","sidebar":"learn"},"In_a_structured_view_EXPORT_IMPORT":{"id":"In_a_structured_view_EXPORT_IMPORT","title":"In a structured view (EXPORT, IMPORT)","description":"This operator creates an action that opens a form in the structured view.","sidebar":"learn"},"In_an_interactive_view_SHOW_DIALOG":{"id":"In_an_interactive_view_SHOW_DIALOG","title":"In an interactive view (SHOW, DIALOG)","description":"This operator creates an action that opens a form in the interactive view.","sidebar":"learn"},"INDEX_statement":{"id":"INDEX_statement","title":"INDEX statement","description":"The INDEX statement creates a new index.","sidebar":"learn"},"Indexes":{"id":"Indexes","title":"Indexes","description":"Building an index by property allows storing all the values of this property in the database in an ordered form. Accordingly, the index is updated with every change of the indexed property value. Due to the index, if, for example, you filter by an indexed property, you can find the objects you need very quickly, rather than viewing all the objects that exist in the system.","sidebar":"learn"},"INPUT_operator":{"id":"INPUT_operator","title":"INPUT operator","description":"The INPUT operator creates an action that inputs a primitive.","sidebar":"learn"},"Install":{"id":"Install","title":"Install","description":"Install automatically","sidebar":"install"},"Integration":{"id":"Integration","title":"Integration","description":"Integration includes everything related to interaction of the lsFusion system with other systems. In terms of the direction of this interaction, integration can be divided into:","sidebar":"learn"},"Interactive_view":{"id":"Interactive_view","title":"Interactive view","description":"A form opened in interactive mode is a graphical component with a certain design in which the user can trigger various events and thereby navigate through system objects, view and change property values, execute actions, and so on. Developers can also use an additional set of operators with this view, making it possible to manage the open form.","sidebar":"learn"},"Internal_call_INTERNAL":{"id":"Internal_call_INTERNAL","title":"Internal call (INTERNAL)","description":"The internal call operator allows to create actions in programming languages other than the lsFusion language. The platform currently supports external actions only in the Java language.","sidebar":"learn"},"INTERNAL_operator":{"id":"INTERNAL_operator","title":"INTERNAL operator","description":"The INTERNAL operator creates an action that executes an internal call.","sidebar":"learn"},"Internationalization":{"id":"Internationalization","title":"Internationalization","description":"Internationalization consists of software development techniques that allow adapting the software to the linguistic and cultural particularities of different countries and regions.","sidebar":"learn"},"Interpreter":{"id":"Interpreter","title":"Interpreter","description":"(Under development)","sidebar":"learn"},"Interruption_BREAK":{"id":"Interruption_BREAK","title":"Interruption (BREAK)","description":"The interrupt operator creates an action that exits the most nested loop (normal or recursive) within which this action is located. Control is transferred to the first action following the loop. If the created action is not inside a loop, its behavior becomes similar to the action created by the exit operator.","sidebar":"learn"},"IS_AS_operators":{"id":"IS_AS_operators","title":"IS, AS operators","description":"IS, AS operators create an action that implements classification.","sidebar":"learn"},"JOIN_operator":{"id":"JOIN_operator","title":"JOIN operator","description":"The JOIN operator creates a property that implements a composition.","sidebar":"learn"},"Journals_and_logs":{"id":"Journals_and_logs","title":"Journals and logs","description":"Logs","sidebar":"learn"},"JSON_operator":{"id":"JSON_operator","title":"JSON operator","description":"The JSON operator is property that creates JSON from specified properties or, in common case, from form."},"Language":{"id":"Language","title":"Language","description":"lsFusion is a programming language that describes lsFusion modules.","sidebar":"learn"},"Launch_events":{"id":"Launch_events","title":"Launch events","description":"There are several predefined actions in the platform that are called when various components of the platform are launched:","sidebar":"learn"},"Launch_parameters":{"id":"Launch_parameters","title":"Launch parameters","description":"Application server (Server)","sidebar":"learn"},"Learn":{"id":"Learn","title":"Learn","description":"Overview","sidebar":"learn"},"Learning_materials":{"id":"Learning_materials","title":"Learning materials","description":"In addition to the documentation, the following materials can be used to explore the features of the lsFusion platform.","sidebar":"learn"},"LIKE_operator":{"id":"LIKE_operator","title":"LIKE operator","description":"The LIKE operator is the creation of a property that implements the operation of comparing a string with a pattern.","sidebar":"learn"},"Literals":{"id":"Literals","title":"Literals","description":"|Name|Example|Class|Description|Constraints|","sidebar":"learn"},"Logical_model":{"id":"Logical_model","title":"Logical model","description":"The logical model is traditionally divided into two parts:","sidebar":"learn"},"Logical_operators_AND_OR_NOT_XOR":{"id":"Logical_operators_AND_OR_NOT_XOR","title":"Logical operators (AND, OR, NOT, XOR)","description":"Logical operators create properties that consider their arguments as logical values of class BOOLEAN and whose return value is also a value of class BOOLEAN. If the value of an argument of an logical operator is not NULL, then the argument is treated as the value TRUE of class BOOLEAN, otherwise as NULL.","sidebar":"learn"},"Loop_FOR":{"id":"Loop_FOR","title":"Loop (FOR)","description":"The loop operator creates an action that iterates all object collections for which the defined condition is met, and executes a defined action for each such object collection (let\'s call it the main one). You can also define an alternative action that will be executed only if no object collections have been found that meet the condition. The condition itself is defined as a certain property. Let\'s say that the condition is satisfied if the value of this property is not NULL.","sidebar":"learn"},"lt-_WHEN_statement":{"id":"lt-_WHEN_statement","title":"<- WHEN statement","description":"The <- WHEN statement creates a calculated event.","sidebar":"learn"},"Management":{"id":"Management","title":"Management","description":"System parameters","sidebar":"learn"},"Manual_installation":{"id":"Manual_installation","title":"Install manually","description":"For development","sidebar":"install"},"Materializations":{"id":"Materializations","title":"Materializations","description":"Almost any aggregated property in the platform can be materialized. In this case, the property will be stored in the database permanently and automatically updated when the data on which this property depends is changed. At the same time, when reading the values of the materialized property, these values will be read directly from the database, as if the property was data (and not calculated every time). Accordingly, all data properties are materialized by definition.","sidebar":"learn"},"Materials_management":{"id":"Materials_management","title":"Materials management","description":"Description of the \\"Materials management\\" task","sidebar":"learn"},"MAX_operator":{"id":"MAX_operator","title":"MAX operator","description":"The MAX operator creates a property that implements finding maximum value.","sidebar":"learn"},"MESSAGE_operator":{"id":"MESSAGE_operator","title":"MESSAGE operator","description":"The MESSAGE operator creates an action that shows the user a message.","sidebar":"learn"},"META_statement":{"id":"META_statement","title":"META statement","description":"The META statement creates a new metacode.","sidebar":"learn"},"Metaprogramming":{"id":"Metaprogramming","title":"Metaprogramming","description":"Metaprogramming is a type of programming associated with writing software code that results in the generation of more software code. Metaprogramming is used for code reusability and to speed up development.","sidebar":"learn"},"Migration":{"id":"Migration","title":"Migration","description":"An lsFusion-based information system uses a relational database management system for permanent data storage. It should be remembered that after certain changes to the system logic, the platform is unable to determine how the data should be migrated. In these cases, the developer must explicitly define the migration method by creating the special migration file migration.script, which should be in the CLASSPATH of the application server.","sidebar":"learn"},"MIN_operator":{"id":"MIN_operator","title":"MIN operator","description":"The MIN operator creates a property that implements finding the minimum value.","sidebar":"learn"},"Modularity":{"id":"Modularity","title":"Modularity","description":"Modularity is a key mechanism for providing extensibility, reusability, and effective interaction among the development team.","sidebar":"learn"},"Module_header":{"id":"Module_header","title":"Module header","description":"Each module begins with a header.","sidebar":"learn"},"Modules":{"id":"Modules","title":"Modules","description":"A module is a functionally complete part of a project. A module consists of declarations of properties, actions, events, constraints, and other system elements.","sidebar":"learn"},"MULTI_action_operator":{"id":"MULTI_action_operator","title":"MULTI operator","description":"The MULTI operator creates an action that implements branching (polymorphic form).","sidebar":"learn"},"MULTI_operator":{"id":"MULTI_operator","title":"MULTI operator","description":"The MULTI operator creates a property that implements selection of one of the values (polymorphic form).","sidebar":"learn"},"Naming":{"id":"Naming","title":"Naming","description":"Each system element may have a *name* which can be used to access the element.","sidebar":"learn"},"Navigator":{"id":"Navigator","title":"Navigator","description":"Navigator is a hierarchical structure (tree) consisting of navigator elements. There are three types of navigator elements:","sidebar":"learn"},"Navigator_design":{"id":"Navigator_design","title":"Navigator design","description":"Navigator design determines how the navigator is displayed to the user on the screen of his device (we will call the screen space on which the navigator is displayed the desktop).","sidebar":"learn"},"NAVIGATOR_statement":{"id":"NAVIGATOR_statement","title":"NAVIGATOR statement","description":"The NAVIGATOR instruction - managing and configuring the navigator.","sidebar":"learn"},"NESTEDSESSION_operator":{"id":"NESTEDSESSION_operator","title":"NESTEDSESSION operator","description":"The NESTEDSESSION operator creates an action that executes the other action in a nested session.","sidebar":"learn"},"New_object_NEW":{"id":"New_object_NEW","title":"New object (NEW)","description":"The new object operator creates an action that creates objects of a specified custom class for object collections where the value of some property (condition) is not NULL. The condition can be omitted, in which case it is considered to be equal to TRUE.","sidebar":"learn"},"NEW_operator":{"id":"NEW_operator","title":"NEW operator","description":"The NEW operator creates an action that creates objects of the specified class.","sidebar":"learn"},"New_session_NEWSESSION_NESTEDSESSION":{"id":"New_session_NEWSESSION_NESTEDSESSION","title":"New session (NEWSESSION, NESTEDSESSION)","description":"The new session operator allows you to execute an action in a session different from the current one.","sidebar":"learn"},"New_threads_NEWTHREAD_NEWEXECUTOR":{"id":"New_threads_NEWTHREAD_NEWEXECUTOR","title":"New threads (NEWTHREAD, NEWEXECUTOR)","description":"The new thread operator allows you to execute an action in a thread other than the current one.","sidebar":"learn"},"NEWEXECUTOR_operator":{"id":"NEWEXECUTOR_operator","title":"NEWEXECUTOR operator","description":"The NEWEXECUTOR operator is the creation of an action that allows the execution of other actions in a new thread pool.","sidebar":"learn"},"NEWSESSION_operator":{"id":"NEWSESSION_operator","title":"NEWSESSION operator","description":"The NEWSESSION operator creates an action that executes the other action in a new session.","sidebar":"learn"},"NEWTHREAD_operator":{"id":"NEWTHREAD_operator","title":"NEWTHREAD operator","description":"The NEWTHREAD operator creates an action that executes another action in a new thread.","sidebar":"learn"},"Object_blocks":{"id":"Object_blocks","title":"Object blocks","description":"Object blocks of the FORM statement - adding object groups to the form structure, and object trees to the interactive form view.","sidebar":"learn"},"Object_group_operator":{"id":"Object_group_operator","title":"Object group operator","description":"Object group operators are used for creating properties working with the current state of the object group on the form.","sidebar":"learn"},"Object_group_operators":{"id":"Object_group_operators","title":"Object group operators","description":"Object group operators include the following operators:","sidebar":"learn"},"Object_tree_visibility_EXPAND_COLLAPSE":{"id":"Object_tree_visibility_EXPAND_COLLAPSE","title":"Object tree visibility (EXPAND, COLLAPSE)","description":"Object tree *expansion* and *collapse* operators provide control over the visibility of elements within a tree displayed on a form. As input to these operators, the object group to which the operation is applied is passed. It is also specified over which tree elements (each corresponding to a specific object collection in the mentioned group) the operation needs to be performed:","sidebar":"learn"},"ON_statement":{"id":"ON_statement","title":"ON statement","description":"The ON statement adds an event handler.","sidebar":"learn"},"Online_demo":{"id":"Online_demo","title":"Online demo","description":"All demos support the following browsers: Chrome (recommended), Safari, Firefox, Opera, and Internet Explorer.","sidebar":"learn"},"Open_form":{"id":"Open_form","title":"Open form","description":"The open form operator creates an action that opens the specified form.","sidebar":"learn"},"Operations_with_primitives":{"id":"Operations_with_primitives","title":"Operations with primitives","description":"\u041eperations with primitives include operators for working with properties which values belong to the built-in classes. The platform supports the following operators:","sidebar":"learn"},"Operator_priority":{"id":"Operator_priority","title":"Operator priority","description":"When evaluating an expression, operators are evaluated in a specific order depending on operator priority. The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.","sidebar":"learn"},"Order_ORDER":{"id":"Order_ORDER","title":"Order (ORDER)","description":"The order operator creates a property that returns the sequence number of an object collection in the specified group of objects, in accordance with the current order of this group.","sidebar":"learn"},"OVERRIDE_operator":{"id":"OVERRIDE_operator","title":"OVERRIDE operator","description":"The OVERRIDE operator creates a property that implements the selection of one of the values (polymorphic form).","sidebar":"learn"},"Paradigm":{"id":"Paradigm","title":"Paradigm","description":"The paradigm can be divided into two parts:","sidebar":"learn"},"PARTITION_operator":{"id":"PARTITION_operator","title":"PARTITION operator","description":"The PARTITION operator creates a property that implements partition/order or simple distribution.","sidebar":"learn"},"Partitioning_sorting_PARTITION_..._ORDER":{"id":"Partitioning_sorting_PARTITION_..._ORDER","title":"Partitioning / sorting (PARTITION ... ORDER)","description":"The partition/order operator creates a property that partitions all objects collections in the system into groups, and using the specified order calculates an aggregate function for each objects collection. Accordingly, the set on which this aggregating function is calculated is determined as following: all object collections of the group of this object collection, and the order of which is less than or equal to the order of this object collection.","sidebar":"learn"},"Physical_model":{"id":"Physical_model","title":"Physical model","description":"The physical model consists of three parts:","sidebar":"learn"},"Pivot_block":{"id":"Pivot_block","title":"Pivot table settings block","description":"Pivot table settings block of the FORM statement manages the initial settings of the *pivot table* view type in the interactive view of the form.","sidebar":"learn"},"PREV_operator":{"id":"PREV_operator","title":"PREV operator","description":"The PREV operator creates a property using a previous value operator.","sidebar":"learn"},"Previous_value_PREV":{"id":"Previous_value_PREV","title":"Previous value (PREV)","description":"The previous value operator creates a property that returns the value of the specified property at the beginning of the session (that is, the current value in the database ignoring the session changes).","sidebar":"learn"},"Primitive_input_INPUT":{"id":"Primitive_input_INPUT","title":"Primitive input (INPUT)","description":"The  primitive input operator creates an action that requests the client to input a value of a builtin class. The user can cancel the input, for example by pressing the Esc key on the keyboard.","sidebar":"learn"},"PRINT_operator":{"id":"PRINT_operator","title":"PRINT operator","description":"The PRINT operator creates an action that opens a form in print view.","sidebar":"learn"},"Print_view":{"id":"Print_view","title":"Print view","description":"Print view of the form consists of a set of templates (reports). When data is substituted in these templates, a document is formed in graphic (with pixel positioning) or pseudographic (with cell positioning) format. This document is displayed to the user using a special graphic component, inside which the user can navigate through pages, zoom in/out within pages and print the contents of the component or export it to various formats (for example, PDF or Excel). If necessary, it is possible to skip the display of the component to the user and send the document for printing or save it into a selected file in the specified format.","sidebar":"learn"},"Process_monitor":{"id":"Process_monitor","title":"Process monitor","description":"(Under development)","sidebar":"learn"},"Profiler":{"id":"Profiler","title":"Profiler","description":"(Under development)","sidebar":"learn"},"Projects":{"id":"Projects","title":"Projects","description":"Project is a collection of modules and additional information (pictures, report design files, etc.) that fully describe the functionality of the information system being created.","sidebar":"learn"},"Properties":{"id":"Properties","title":"Properties","description":"A property is an element of the system that takes a set of objects (parameters) and returns exactly one object (the return value).","sidebar":"learn"},"Properties_and_actions_block":{"id":"Properties_and_actions_block","title":"Properties and actions block","description":"The property and action block of the FORM statement adds properties and actions to the form structure.","sidebar":"learn"},"Property_change_CHANGE":{"id":"Property_change_CHANGE","title":"Property change (CHANGE)","description":"The property change operator allows you to change the values of one property (write) to the value of another property (read) for all object collections for which the value of a third property (condition) is not NULL. The condition can be omitted (in which case it is considered to be equal to TRUE).","sidebar":"learn"},"Property_extension":{"id":"Property_extension","title":"Property extension","description":"The properties extension technique allows the developer to declare an abstract action in one module and define its implementation in other modules. This technique is essentially a \\"postponed definition\\" of a selection operator, where the operator\u2019s title is defined when the property is declared, and as new functionality (of classes or static objects) is added, selection options are added to the system. Furthermore, variants of selection (if it is not mutually exclusive) can be added both to the beginning and to the end of the abstract property created.","sidebar":"learn"},"Property_operators":{"id":"Property_operators","title":"Property operators","description":"Property operator is a syntax construct that describes an operator creating a property.","sidebar":"learn"},"Property_operators_paradigm":{"id":"Property_operators_paradigm","title":"Operators","description":"The platform currently supports the following property creation operators:","sidebar":"learn"},"Property_options":{"id":"Property_options","title":"Property options","description":"When a property is declared in the = statement a set of property options can be specified at the end of the declaration","sidebar":"learn"},"Property_signature_CLASS":{"id":"Property_signature_CLASS","title":"Signature matching (ISCLASS)","description":"The signature matching operator creates a property that determines, from a class perspective, whether the property specified in the operator can have a non-NULL value for the given arguments. In fact, this operator infers the possible classes of a given property from its semantics, and then, using logical operators and the classification operator, creates the required property.","sidebar":"learn"},"Read_file_READ":{"id":"Read_file_READ","title":"Read file (READ)","description":"The read file operator creates an action that reads a file from a defined source and writes this file to the specified local data property without parameters.","sidebar":"learn"},"READ_operator":{"id":"READ_operator","title":"READ operator","description":"The READ operator creates an action that reads a file to a property from an external resource.","sidebar":"learn"},"RECURSION_operator":{"id":"RECURSION_operator","title":"RECURSION operator","description":"The RECURSION operator creates a property that implements recursion.","sidebar":"learn"},"Recursion_RECURSION":{"id":"Recursion_RECURSION","title":"Recursion (RECURSION)","description":"The recursion operator is an operator that creates a property which sequentially performs two operations:","sidebar":"learn"},"Recursive_loop_WHILE":{"id":"Recursive_loop_WHILE","title":"Recursive loop (WHILE)","description":"The recursive loop operator is similar to a regular loop operator, with the only difference being that iteration is performed recursively until at a certain point the set of objects collections satisfying the condition becomes empty. As a result, there is no sense in defining alternative actions with this operator.","sidebar":"learn"},"Report_design":{"id":"Report_design","title":"Report design","description":"For each report you need to specify a special file (template) which will be used to build the result document. The name of the template for a specific report is `. An empty object group is considered to have no name, so if the first object group is empty, the name of the template is simply equal to the name of the form (without the _` postfix).","sidebar":"learn"},"REQUEST_operator":{"id":"REQUEST_operator","title":"REQUEST operator","description":"The REQUEST operator creates an action that requests a value.","sidebar":"learn"},"RETURN_operator":{"id":"RETURN_operator","title":"RETURN operator","description":"The RETURN operator creates an action that implements exit from an action created by the EXEC operator.","sidebar":"learn"},"ROUND_operator":{"id":"ROUND_operator","title":"ROUND operator","description":"ROUND operator creates a property that implements the rounding operation.","sidebar":"learn"},"Rounding_operator_ROUND":{"id":"Rounding_operator_ROUND","title":"Rounding operator (ROUND)","description":"The rounding operator creates a property whose value is the result of rounding a number to the specified number of digits. The arguments of this operator must be properties that determine the number and the rounding precision. Negative precision values indicate the number of least significant digits to be rounded in the integer part of the number, allowing you to round the number to tens, hundreds, etc.","sidebar":"learn"},"Scheduler":{"id":"Scheduler","title":"Scheduler","description":"The scheduler is designed to automatically execute certain tasks with specified frequency.","sidebar":"learn"},"Score_table":{"id":"Score_table","title":"Score table","description":"\\"Score table\\" task description","sidebar":"learn"},"Search_":{"id":"Search_","title":"Search","description":"Each element in the system contains certain information that allows it to be uniquely identified among other elements of the system. However, providing all the information about the element in each place it is used is rather cumbersome; so the platform has a special search algorithm, which allows you to find the desired element with only part of the information about it (for example, only a short name and the module which uses the item you are searching for).","sidebar":"learn"},"Search_SEEK":{"id":"Search_SEEK","title":"Search (SEEK)","description":"Search operator tries to make the specified object collection current for the specified form object group. The objects from the specified object collection shall be called seek objects.","sidebar":"learn"},"Security_policy":{"id":"Security_policy","title":"Security policy","description":"Customizing user roles","sidebar":"learn"},"SEEK_operator":{"id":"SEEK_operator","title":"SEEK operator","description":"The SEEK operator creates an action that seeks specified objects on a form.","sidebar":"learn"},"Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE":{"id":"Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE","title":"Selection (CASE, IF, MULTI, OVERRIDE, EXCLUSIVE)","description":"The selection operator creates a property that determines for a set of conditions which condition is met, and returns the value of the result corresponding to that condition. If none of the conditions is met, then the value of the created property will be NULL.","sidebar":"learn"},"Send_mail_EMAIL":{"id":"Send_mail_EMAIL","title":"Send mail (EMAIL)","description":"The send mail operator creates an action that sends an email to the specified email addresses. As with any email, you can define the sender, recipient, body text,  attachment files with specified names and other parameters.","sidebar":"learn"},"Sequence":{"id":"Sequence","title":"Sequence ({...})","description":"To create an action that performs a sequence of other actions, the {...} operator is used - a block enclosed by curly brackets. The body of this block must contain a sequence of action operators and local property declarations.","sidebar":"learn"},"Session_management":{"id":"Session_management","title":"Session management","description":"The system has the following operators for working with sessions:","sidebar":"learn"},"Set_operations":{"id":"Set_operations","title":"Set operations","description":"One of the key features of the platform is the ability to execute certain operations for all object collections for which the values of one or more properties are not NULL. In the property logic such an operation is the calculation of various aggregate functions.","sidebar":"learn"},"Show_message_MESSAGE_ASK":{"id":"Show_message_MESSAGE_ASK","title":"Show message (MESSAGE, ASK)","description":"The show message operators create actions that show a text message to the user. The message is defined as a property whose value will be used as the message content. This message can be displayed either using a dialog box or in the System.log system window.","sidebar":"learn"},"SHOW_operator":{"id":"SHOW_operator","title":"SHOW operator","description":"The SHOW operator creates an action that opens a form in interactive view.","sidebar":"learn"},"Simple_constraints":{"id":"Simple_constraints","title":"Simple constraints","description":"The platform currently supports four types of simple constraints: consequence, exception, equality, and definiteness. For all simple constraints, an automatic resolution mechanism is supported. When this is enabled, instead of throwing an error the platform itself restores system integrity.","sidebar":"learn"},"Simple_event":{"id":"Simple_event","title":"Simple event","description":"Simple event - an event that occurs when the value of the specified property (which shall be called an event condition) changes to non-NULL. This event is a kind of extension of a basic event (adding an additional condition), which means that all the same parameters must be set as for an basic event, in particular:","sidebar":"learn"},"State_change":{"id":"State_change","title":"State change","description":"System state change operators include the following.","sidebar":"learn"},"Statements":{"id":"Statements","title":"Statements","description":"The code of any module in lsFusion consists of a sequence of statements.","sidebar":"learn"},"Static_objects":{"id":"Static_objects","title":"Static objects","description":"Static (or built-in) objects are objects that are defined by the developer and are automatically created on system startup (if they are not present in the system at launch time). Also, such objects are prohibited from being deleted.","sidebar":"learn"},"Static_view":{"id":"Static_view","title":"Static view","description":"In static view, all form data is read at the time the form is opened, after which the obtained data is converted:","sidebar":"learn"},"String_operators_+_CONCAT_SUBSTRING":{"id":"String_operators_+_CONCAT_SUBSTRING","title":"String operators (+, CONCAT, SUBSTRING)","description":"String operators are operators which parameters and result are the properties which values are instances of the string classes. The platform currently supports the following string operators:","sidebar":"learn"},"STRUCT_operator":{"id":"STRUCT_operator","title":"STRUCT operator","description":"The STRUCT operator creates a property that creates a structure.","sidebar":"learn"},"Structure_operators_STRUCT":{"id":"Structure_operators_STRUCT","title":"Structure operators (STRUCT, [])","description":"The term structure is used in the platform to refer to the classes which objects consist of a collection of other objects in a fixed order. The platform supports two operators for working with structures:","sidebar":"learn"},"Structured_view":{"id":"Structured_view","title":"Structured view","description":"All structured views (formats) can be divided into two types:","sidebar":"learn"},"System_parameters":{"id":"System_parameters","title":"System parameters","description":"Launch parameters","sidebar":"learn"},"TABLE_statement":{"id":"TABLE_statement","title":"TABLE statement","description":"The TABLE statement creates an new table.","sidebar":"learn"},"Tables":{"id":"Tables","title":"Tables","description":"For storing and calculating values of the properties the lsFusion platform uses a relational database. All data properties, as well as all calculated properties marked as materialized, are stored in the fields of the tables in the database. For each table, there is a set of key fields with the names key0, key1, ..., keyN, where the object IDs are stored. All other fields store property values in such a way that in the corresponding field of each row there is a property value for the objects with IDs from the key fields. Objects of built-in classes can also be used as table keys.","sidebar":"learn"},"Tokens":{"id":"Tokens","title":"Tokens","description":"A token in a programming language is the smallest significant sequence of characters. In the lsFusion language tokens are keywords, simple IDs, literals and special character sequences.","sidebar":"learn"},"TRY_operator":{"id":"TRY_operator","title":"TRY operator","description":"The TRY operator creates an action that executes another action with exception handling.","sidebar":"learn"},"Type_conversion":{"id":"Type_conversion","title":"Type conversion","description":"The type conversion operator creates a property that converts an object of one built-in class to an object of another built-in class. If type conversion is not possible, the property value will be NULL.","sidebar":"learn"},"Type_conversion_operator":{"id":"Type_conversion_operator","title":"Type conversion operator","description":"The type conversion operator creates a property that performs type conversion.","sidebar":"learn"},"UNGROUP_operator":{"id":"UNGROUP_operator","title":"UNGROUP operator","description":"At the moment, the UNGROUP operator is not implemented.","sidebar":"learn"},"User_classes":{"id":"User_classes","title":"User classes","description":"Classes that a developer can create and the instances of which a user can create are called custom classes.","sidebar":"learn"},"User_interface":{"id":"User_interface","title":"User interface","description":"(Under development)","sidebar":"learn"},"User_IS_interaction":{"id":"User_IS_interaction","title":"User/IS interaction","description":"This category includes operators for interacting with the user and with other information systems:","sidebar":"learn"},"Value_input":{"id":"Value_input","title":"Value input","description":"This category includes operators responsible for inputting a value:","sidebar":"learn"},"Value_request_REQUEST":{"id":"Value_request_REQUEST","title":"Value request (REQUEST)","description":"The value request operator creates an action in which requesting value(s) is separated from directly processing the value(s). Accordingly, this operator allows not to perform a value request if its result is known in advance in the context of the call (the value of the System.requestPushed property is equal to TRUE). This, in turn, automatically gives you the following capabilities in various use cases:","sidebar":"learn"},"View_logic":{"id":"View_logic","title":"View logic","description":"The key element of the view logic is the form. Forms are used in the platform to organize the input and output of information into the system (from the system).","sidebar":"learn"},"View_VIEW":{"id":"View_VIEW","title":"View (VIEW)","description":"The view operator creates a property that returns TRUE if the object collection is visible to the user in the specified object group, and NULL otherwise.","sidebar":"learn"},"WHEN_statement":{"id":"WHEN_statement","title":"WHEN statement","description":"The WHEN statement adds a simple event handler.","sidebar":"learn"},"WHILE_operator":{"id":"WHILE_operator","title":"WHILE operator","description":"The WHILE operator creates an action that implements a recursive loop.","sidebar":"learn"},"WINDOW_statement":{"id":"WINDOW_statement","title":"WINDOW statement","description":"The WINDOW statement - creating a new window.","sidebar":"learn"},"Working_parameters":{"id":"Working_parameters","title":"Working parameters","description":"The platform working parameters can be set in one of the following ways (in the order of their priorities, lower priority at the bottom):","sidebar":"learn"},"Write_file_WRITE":{"id":"Write_file_WRITE","title":"Write file (WRITE)","description":"The write file operator creates an action which reads a file from the value of some property and saves it to the defined source.","sidebar":"learn"},"WRITE_operator":{"id":"WRITE_operator","title":"WRITE operator","description":"The WRITE operator creates an action that writes a file from a property to an external resource.","sidebar":"learn"}}}')}}]);