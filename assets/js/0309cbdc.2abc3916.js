"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[88592],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(f,i(i({ref:t},s),{},{components:n})):o.createElement(f,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},45274:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return p}});var o=n(83117),r=(n(67294),n(3905));const a={title:"How-to: Action extension"},i=void 0,l={unversionedId:"How-to_Action_extension",id:"How-to_Action_extension",title:"How-to: Action extension",description:"We can use the following scheme to implement polymorphism:",source:"@site/docs/How-to_Action_extension.md",sourceDirName:".",slug:"/How-to_Action_extension",permalink:"/next/How-to_Action_extension",draft:!1,editUrl:"https://github.com/lsfusion/platform/edit/master/docs/en/How-to_Action_extension.md",tags:[],version:"current",lastUpdatedAt:1625651520,formattedLastUpdatedAt:"Jul 7, 2021",frontMatter:{title:"How-to: Action extension"},sidebar:"learn",previous:{title:"How-to: Property extension",permalink:"/next/How-to_Property_extension"},next:{title:"How-to: Form extension",permalink:"/next/How-to_Form_extension"}},c={},p=[{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3}],s={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"We can use the following scheme to implement polymorphism:"),(0,r.kt)("h3",{id:"example-1"},"Example 1"),(0,r.kt)("p",null,"Create an abstract class ",(0,r.kt)("inlineCode",{parentName:"p"},"Shape")," with an abstract action ",(0,r.kt)("inlineCode",{parentName:"p"},"whoAmI"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lsf"},"CLASS ABSTRACT Shape;\nwhoAmI  ABSTRACT ( Shape);\n")),(0,r.kt)("p",null,"Then, create ",(0,r.kt)("inlineCode",{parentName:"p"},"Square")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Circle")," classes inherited from ",(0,r.kt)("inlineCode",{parentName:"p"},"Shape"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lsf"},"CLASS Rectangle : Shape;\nCLASS Circle : Shape;\n")),(0,r.kt)("p",null,"Define the implementation of ",(0,r.kt)("inlineCode",{parentName:"p"},"whoAmI")," for the created classes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lsf"},"whoAmI (Rectangle r) + {\n    IF r IS Rectangle THEN {\n        MESSAGE 'I am a rectangle';\n    }\n}\nwhoAmI (Circle c) + {\n    IF c IS Circle THEN {\n        MESSAGE 'I am a circle';\n    }\n}\n")),(0,r.kt)("p",null,"When executing the ",(0,r.kt)("inlineCode",{parentName:"p"},"whoAmI")," action, all the actions added as an implementation will be called. In this case, a corresponding message will appear depending on the argument."),(0,r.kt)("h3",{id:"example-2"},"Example 2"),(0,r.kt)("p",null,"Suppose that we need to implement an action that copies an object (e.g. the ",(0,r.kt)("inlineCode",{parentName:"p"},"Book")," class) with its semantics defined in multiple modules. This can be implemented as follows:"),(0,r.kt)("p",null,"Declare the ",(0,r.kt)("inlineCode",{parentName:"p"},"Book")," class and the actions to copy it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lsf"},'MODULE Book;\n\nCLASS Book; // declaring class "book"\n// abstract action that takes an input two books and is "entry point", to which other modules can add realization\noverCopy ABSTRACT (Book, Book); \ncopy (Book book)  { // creating action on book copy\n    NEW b = Book { // adding new book\n        overCopy(b, book);\n    }\n}\n')),(0,r.kt)("p",null,"In the dependent module ",(0,r.kt)("inlineCode",{parentName:"p"},"MyBook"),", we want to extend the ",(0,r.kt)("inlineCode",{parentName:"p"},"Book")," class with new properties and also define the action to copy them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lsf"},"MODULE MyBook;\n\nREQUIRE Book;\n\nname = DATA STRING[100] (Book); // adding some name property to the product\noverCopy (Book s, Book d) + {\n    name(d) <- name(s); // connecting the copying of the created property to the product copy action\n}\n")))}m.isMDXComponent=!0}}]);