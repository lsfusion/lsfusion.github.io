"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["78793"],{26629:function(e,r,t){t.r(r),t.d(r,{default:()=>d,frontMatter:()=>c,metadata:()=>o,assets:()=>a,toc:()=>l,contentTitle:()=>i});var o=JSON.parse('{"id":"Object_group_operator","title":"Object group operator","description":"Object group operators are used for creating properties working with the current state of the object group on the form.","source":"@site/versioned_docs/version-v4/Object_group_operator.md","sourceDirName":".","slug":"/Object_group_operator","permalink":"/v4/Object_group_operator","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/v4/docs/en/Object_group_operator.md","tags":[],"version":"v4","lastUpdatedAt":1708525070000,"frontMatter":{"title":"Object group operator"},"sidebar":"learn","previous":{"title":"UNGROUP operator","permalink":"/v4/UNGROUP_operator"},"next":{"title":"Type conversion operator","permalink":"/v4/Type_conversion_operator"}}'),s=t("85893"),n=t("50065");let c={title:"Object group operator"},i=void 0,a={},l=[{value:"Syntax",id:"syntax",level:3},{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function p(e){let r={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/v4/Form_structure",children:"Object group"})," operators are used for creating ",(0,s.jsx)(r.a,{href:"/v4/Properties",children:"properties"})," working with the ",(0,s.jsx)(r.a,{href:"/v4/Object_group_operators",children:"current state"})," of the object group on the ",(0,s.jsx)(r.a,{href:"/v4/Forms",children:"form"}),"."]}),"\n",(0,s.jsx)(r.h3,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"FILTER groupObjectId\nVIEW groupObjectId\nORDER groupObjectId\n"})}),"\n",(0,s.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(r.p,{children:["Object group operators create properties that accept the same number of parameters as the number of objects in the object group. These operators cannot be used inside ",(0,s.jsx)(r.a,{href:"/v4/Expression",children:"expressions"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"FILTER"})," operator creates a property which value is ",(0,s.jsx)(r.code,{children:"TRUE"})," when the object collection passed as parameters meets all the ",(0,s.jsx)(r.a,{href:"/v4/Form_structure#filters",children:"filtering"})," conditions on the form, otherwise the property value will be ",(0,s.jsx)(r.code,{children:"NULL"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"VIEW"})," operator creates a property which value is ",(0,s.jsx)(r.code,{children:"TRUE"})," if the object collection passed as parameters is currently displayed on the form, otherwise, the property value will be ",(0,s.jsx)(r.code,{children:"NULL"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"ORDER"})," operator creates a property which value determines the relative order of the object collection on the form passed as a parameter. The value of this property is usually used in ",(0,s.jsx)(r.code,{children:"ORDER"})," blocks of the other properties, for example, ",(0,s.jsx)(r.a,{href:"/v4/PARTITION_operator",children:(0,s.jsx)(r.code,{children:"PARTITION"})}),", ",(0,s.jsx)(r.a,{href:"/v4/FOR_operator",children:(0,s.jsx)(r.code,{children:"FOR"})}),", etc."]}),"\n",(0,s.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"groupObjectId"})}),"\n",(0,s.jsxs)(r.p,{children:["Global ",(0,s.jsx)(r.a,{href:"/v4/IDs#groupobjectid",children:"object group ID"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lsf",children:"CLASS Store;\nname = DATA STRING[100] (Store);\n\nFORM stores\n    OBJECTS s = Store\n;\ncountF 'Number of filtered warehouses' = GROUP SUM 1 IF [ VIEW stores.s](Store s);\norderF 'Order in an object group' (Store s) = PARTITION SUM 1 IF [ FILTER stores.s](s) ORDER [ ORDER stores.s](s), s;\nsetNameX 'Add X to name'()  {\n    LOCAL k = INTEGER ();\n    k() <- 0;\n    FOR [ FILTER stores.s](Store s) ORDER [ ORDER stores.s](s) DO {\n        k() <- k() + 1;\n        name(s) <- 'X' + k() + name(s);\n    }\n}\n"})})]})}function d(e={}){let{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},50065:function(e,r,t){t.d(r,{Z:function(){return i},a:function(){return c}});var o=t(67294);let s={},n=o.createContext(s);function c(e){let r=o.useContext(n);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(n.Provider,{value:r},e.children)}}}]);