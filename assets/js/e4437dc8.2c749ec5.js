"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[10683],{3905:function(e,t,o){o.d(t,{Zo:function(){return u},kt:function(){return m}});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(o),m=r,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return o?n.createElement(f,l(l({ref:t},u),{},{components:o})):n.createElement(f,l({ref:t},u))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=o[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},60750:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var n=o(83117),r=o(80102),a=(o(67294),o(3905)),l=["components"],i={title:"How-to: GROUP CONCAT"},s=void 0,c={unversionedId:"How-to_GROUP_CONCAT",id:"version-v4/How-to_GROUP_CONCAT",title:"How-to: GROUP CONCAT",description:"Example 1",source:"@site/versioned_docs/version-v4/How-to_GROUP_CONCAT.md",sourceDirName:".",slug:"/How-to_GROUP_CONCAT",permalink:"/How-to_GROUP_CONCAT",editUrl:"https://github.com/lsfusion/platform/edit/v4/docs/en/How-to_GROUP_CONCAT.md",tags:[],version:"v4",lastUpdatedAt:1619709222,formattedLastUpdatedAt:"4/29/2021",frontMatter:{title:"How-to: GROUP CONCAT"},sidebar:"version-v4/learn",previous:{title:"How-to: GROUP LAST",permalink:"/How-to_GROUP_LAST"},next:{title:"How-to: PARTITION",permalink:"/How-to_PARTITION"}},u=[{value:"Example 1",id:"example-1",children:[{value:"Task",id:"task",children:[],level:3},{value:"Solution",id:"solution",children:[],level:3}],level:2},{value:"Example 2",id:"example-2",children:[{value:"Task",id:"task-1",children:[],level:3},{value:"Solution",id:"solution-1",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,o=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"example-1"},"Example 1"),(0,a.kt)("h3",{id:"task"},"Task"),(0,a.kt)("p",null,"We have a set of books associated with certain priority tags."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lsf"},"CLASS Book 'Book';\nCLASS Tag 'Tag';\nname 'Name' = DATA ISTRING[10] (Tag);\n\nin 'On' = DATA BOOLEAN (Tag, Book);\n")),(0,a.kt)("p",null,"We need to retrieve a list of book tags separated by commas in alphabetical order."),(0,a.kt)("h3",{id:"solution"},"Solution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lsf"},"tags 'Tags' (Book b) = GROUP CONCAT name(Tag t) IF in(t, b), ',' ORDER name(t), t CHARWIDTH 10;\n")),(0,a.kt)("p",null,"It is recommended that you specify the sizes of all the properties created using ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP CONCAT"),' that will be visible on a form. By default, the system implements the "pessimistic" scenario and reserves a lot of space for such properties.'),(0,a.kt)("h2",{id:"example-2"},"Example 2"),(0,a.kt)("h3",{id:"task-1"},"Task"),(0,a.kt)("p",null,"We have a set of books associated with certain categories and authors."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lsf"},"CLASS Category 'Category';\n\nCLASS Author 'Author';\nname 'Author' = DATA ISTRING[20] (Author);\n\ncategory 'Category' = DATA Category (Book);\nauthor 'Author' = DATA Author (Book);\n")),(0,a.kt)("p",null,"We need to retrieve a list of all authors by category separated by commas in descending order of the number of books."),(0,a.kt)("h3",{id:"solution-1"},"Solution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lsf"},"countBooks 'Number of books' (Author a, Category c) = GROUP SUM 1 BY author(Book b), category(b);\n\nauthors 'Authors' (Category c) = GROUP CONCAT name(Author a) IF countBooks(a, c) ORDER DESC countBooks(a, c), a;\n")))}d.isMDXComponent=!0}}]);