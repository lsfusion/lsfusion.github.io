"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[2272],{54240:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var n=o(74848),t=o(28453);const s={title:"Property operators"},i=void 0,d={id:"Property_operators",title:"Property operators",description:"Property operator is a syntax construct that describes an operator creating a property.",source:"@site/versioned_docs/version-v5/Property_operators.md",sourceDirName:".",slug:"/Property_operators",permalink:"/v5/Property_operators",draft:!1,unlisted:!1,editUrl:"https://github.com/lsfusion/platform/edit/v5/docs/en/Property_operators.md",tags:[],version:"v5",lastUpdatedAt:171321898e4,frontMatter:{title:"Property operators"},sidebar:"learn",previous:{title:"Operator priority",permalink:"/v5/Operator_priority"},next:{title:"Arithmetic operators",permalink:"/v5/Arithmetic_operators"}},c={},a=[{value:"Context dependent operators",id:"context-dependent-operators",level:3},{value:"Context independent operators",id:"contextindependent",level:3}];function l(e){const r={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.em,{children:"Property operator"})," is a syntax construct that describes an ",(0,n.jsx)(r.a,{href:"/v5/Property_operators_paradigm",children:"operator"})," creating a ",(0,n.jsx)(r.a,{href:"/v5/Properties",children:"property"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["Property operators can be divided into ",(0,n.jsx)(r.em,{children:"context dependent"})," and ",(0,n.jsx)(r.em,{children:"context independent"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"context-dependent-operators",children:"Context dependent operators"}),"\n",(0,n.jsxs)(r.p,{children:["Context dependent property operators can be part of ",(0,n.jsx)(r.a,{href:"/v5/Expression",children:"expressions"})," and use common parameters (context). These operators are:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/v5/Arithmetic_operators",children:"Arithmetic operators"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/Brackets_operator",children:[(0,n.jsx)(r.code,{children:"[]"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/ACTIVE_TAB_operator",children:[(0,n.jsx)(r.code,{children:"ACTIVE TAB"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/AGGR_operator",children:[(0,n.jsx)(r.code,{children:"AGGR"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/CASE_operator",children:[(0,n.jsx)(r.code,{children:"CASE"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/CONCAT_operator",children:[(0,n.jsx)(r.code,{children:"CONCAT"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/EXCLUSIVE_operator",children:[(0,n.jsx)(r.code,{children:"EXCLUSIVE"})," operator"]})}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsxs)(r.a,{href:"/v5/GROUP_operator",children:[(0,n.jsx)(r.code,{children:"GROUP"})," operator"]})," (without ",(0,n.jsx)(r.code,{children:"BY"})," block)"]}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/IF_operator",children:[(0,n.jsx)(r.code,{children:"IF"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/IF_..._THEN_operator",children:[(0,n.jsx)(r.code,{children:"IF ... THEN"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/CLASS_operator",children:[(0,n.jsx)(r.code,{children:"ISCLASS"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/JOIN_operator",children:[(0,n.jsx)(r.code,{children:"JOIN"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/LIKE_operator",children:[(0,n.jsx)(r.code,{children:"LIKE"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/MAX_operator",children:[(0,n.jsx)(r.code,{children:"MAX"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/MIN_operator",children:[(0,n.jsx)(r.code,{children:"MIN"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/MULTI_operator",children:[(0,n.jsx)(r.code,{children:"MULTI"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/OVERRIDE_operator",children:[(0,n.jsx)(r.code,{children:"OVERRIDE"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/PARTITION_operator",children:[(0,n.jsx)(r.code,{children:"PARTITION"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/PREV_operator",children:[(0,n.jsx)(r.code,{children:"PREV"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/RECURSION_operator",children:[(0,n.jsx)(r.code,{children:"RECURSION"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/ROUND_operator",children:[(0,n.jsx)(r.code,{children:"ROUND"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/STRUCT_operator",children:[(0,n.jsx)(r.code,{children:"STRUCT"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/UNGROUP_operator",children:[(0,n.jsx)(r.code,{children:"UNGROUP"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/v5/Type_conversion_operator",children:"Type conversion operator"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/AND_OR_NOT_XOR_operators",children:[(0,n.jsx)(r.code,{children:"AND"}),", ",(0,n.jsx)(r.code,{children:"OR"}),", ",(0,n.jsx)(r.code,{children:"NOT"}),", ",(0,n.jsx)(r.code,{children:"XOR"})," operators"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/IS_AS_operators",children:[(0,n.jsx)(r.code,{children:"IS"}),", ",(0,n.jsx)(r.code,{children:"AS"})," operators"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/v5/Change_operators",children:"Change operators"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/v5/Comparison_operators",children:"Comparison operators"})}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"contextindependent",children:"Context independent operators"}),"\n",(0,n.jsxs)(r.p,{children:["Context independent property operators differ from the context dependent ones in that they do not just use the upper parameters but define the parameters themselves. As a result, they cannot be part of expressions and can only be used in the ",(0,n.jsxs)(r.a,{href:"/v5/=_statement",children:[(0,n.jsx)(r.code,{children:"="})," statement"]})," and the ",(0,n.jsxs)(r.a,{href:"/v5/JOIN_operator",children:[(0,n.jsx)(r.code,{children:"JOIN"})," operator"]}),":"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/DATA_operator",children:[(0,n.jsx)(r.code,{children:"DATA"})," operator"]})}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsxs)(r.a,{href:"/v5/GROUP_operator",children:[(0,n.jsx)(r.code,{children:"GROUP"})," operator"]})," (with ",(0,n.jsx)(r.code,{children:"BY"})," block)"]}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/FORMULA_operator",children:[(0,n.jsx)(r.code,{children:"FORMULA"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsxs)(r.a,{href:"/v5/ABSTRACT_operator",children:[(0,n.jsx)(r.code,{children:"ABSTRACT"})," operator"]})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/v5/Object_group_operator",children:"Object group operators"})}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>i,x:()=>d});var n=o(96540);const t={},s=n.createContext(t);function i(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);