"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["69780"],{11318:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>r,metadata:()=>s,assets:()=>c,toc:()=>l,contentTitle:()=>a});var s=JSON.parse('{"id":"MESSAGE_operator","title":"MESSAGE operator","description":"The MESSAGE operator creates an action that shows the user a message.","source":"@site/versioned_docs/version-v4/MESSAGE_operator.md","sourceDirName":".","slug":"/MESSAGE_operator","permalink":"/v4/MESSAGE_operator","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/v4/docs/en/MESSAGE_operator.md","tags":[],"version":"v4","lastUpdatedAt":1708525070000,"frontMatter":{"title":"MESSAGE operator"},"sidebar":"learn","previous":{"title":"INPUT operator","permalink":"/v4/INPUT_operator"},"next":{"title":"MULTI operator","permalink":"/v4/MULTI_action_operator"}}'),i=t("85893"),o=t("50065");let r={title:"MESSAGE operator"},a=void 0,c={},l=[{value:"Syntax",id:"syntax",level:3},{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Examples",id:"examples",level:3}];function d(e){let n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"MESSAGE"})," operator creates an ",(0,i.jsx)(n.a,{href:"/v4/Actions",children:"action"})," that shows the user a ",(0,i.jsx)(n.a,{href:"/v4/Show_message_MESSAGE_ASK",children:"message"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"MESSAGE expression [syncType]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"MESSAGE"})," operator creates an action which shows a window with a text message to the user. The text message can be a string constant or a more complex ",(0,i.jsx)(n.a,{href:"/v4/Expression",children:"expression"})," which value is or can be converted to a string."]}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"expression"})}),"\n",(0,i.jsx)(n.p,{children:"An expression which value is the message text."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"syncType"})}),"\n",(0,i.jsx)(n.p,{children:"Specifies when the created action should be completed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"WAIT"})," - after the client completes the action (closes the message). This value is used by default."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"NOWAIT"})," - right after the information is ready for sending to the client (the message text is read). If several ",(0,i.jsx)(n.code,{children:"MESSAGE"})," ",(0,i.jsx)(n.code,{children:"NOWAIT"})," actions are called during the execution of some continuous action, they do not create separate messages but are concatenated with the previous messages of the same type. A single concatenated message will be shown to the user at the end of the continuous action as a result."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lsf",children:"message { MESSAGE 'Hello World!'; } // plain text message\n\nisGood = DATA BOOLEAN (Item);\nstringData(Item i)   {\n    // depending on which item will be passed to the action, a window will be shown either \n    // with the text 'Good' or with the text 'Bad'\n    MESSAGE IF isGood(i) THEN 'Good' ELSE 'Bad';   \n}\n\n// In this case, five text messages will be shown to the user\ntestMessage()  {   \n    LOCAL i = INTEGER();\n    i() <- 0;\n    WHILE i() < 5 DO {\n        i() <- i() + 1;\n        MESSAGE i();\n    }\n}\n\n// In the case of NOWAIT, one text message combining messages from five MESSAGE calls will be shown to the user\ntestMessageNowait()  {              \n    LOCAL i = INTEGER();\n    i() <- 0;\n    WHILE i() < 5 DO {\n        i() <- i() + 1;\n        MESSAGE i() NOWAIT;\n    }\n}\n"})})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return r}});var s=t(67294);let i={},o=s.createContext(i);function r(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);