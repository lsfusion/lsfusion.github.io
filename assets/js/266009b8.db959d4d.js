"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[78618],{95472:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var o=r(74848),t=r(28453);const a={title:"How-to: Data entry"},s=void 0,i={id:"How-to_Data_entry",title:"How-to: Data entry",description:"Example 1",source:"@site/docs/How-to_Data_entry.md",sourceDirName:".",slug:"/How-to_Data_entry",permalink:"/next/How-to_Data_entry",draft:!1,unlisted:!1,editUrl:"https://github.com/lsfusion/platform/edit/master/docs/en/How-to_Data_entry.md",tags:[],version:"current",lastUpdatedAt:1625651520,formattedLastUpdatedAt:"Jul 7, 2021",frontMatter:{title:"How-to: Data entry"},sidebar:"learn",previous:{title:"How-to: Trees",permalink:"/next/How-to_Trees"},next:{title:"How-to: Navigator",permalink:"/next/How-to_Navigator"}},l={},d=[{value:"Example 1",id:"example-1",level:2},{value:"Task",id:"task",level:3},{value:"Solution",id:"solution",level:3},{value:"Example 2",id:"example-2",level:2},{value:"Task",id:"task-1",level:3},{value:"Solution",id:"solution-1",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"example-1",children:"Example 1"}),"\n",(0,o.jsx)(n.h3,{id:"task",children:"Task"}),"\n",(0,o.jsx)(n.p,{children:"We have a form that displays a list of books. We need to implement an option for entering a name only in upper case. Group change, copy&paste, and similar features must also be supported."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lsf",children:"CLASS Book 'Book';\r\nname 'Name' = DATA ISTRING[100] (Book);\r\n\r\nFORM books\r\n     OBJECTS b = Book\r\n;\r\n\r\nNAVIGATOR {\r\n    NEW books;\r\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"solution",children:"Solution"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lsf",children:'changeName(Book b)  {\r\n    // inputting ISTRING[100] "to parameter" s \r\n    // (automatically wrapped in REQUEST, that is, group adjustments, PASTE, etc. are available)\r\n    INPUT s = ISTRING[100] \r\n        DO // checking for requestCanceled\r\n             name(b) <- s;\r\n}\r\n\r\nEXTEND FORM books\r\n    PROPERTIES (b) name ON CHANGE changeName(b)\r\n;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"example-2",children:"Example 2"}),"\n",(0,o.jsx)(n.h3,{id:"task-1",children:"Task"}),"\n",(0,o.jsx)(n.p,{children:"We have a form that displays a list of books. In this form, the user can specify a genre, so that only books of this genre will be displayed. We also have a form containing the list of orders where you can also apply a filter by genre. Each book has a restricted/allowed flag, and the order may contain only allowed books."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lsf",children:"CLASS Genre 'Genre';\r\nname 'Name' = DATA ISTRING[100] (Genre);\r\n\r\ngenre 'Genre' = DATA Genre (Book);\r\nisForbidden 'Prohibition' = DATA BOOLEAN (Book);\r\n\r\nCLASS Order 'Order';\r\nbook 'Book' = DATA Book (Order);\r\nnameBook 'Book name' (Order o) = name(book(o));\r\n\r\ndate 'Date' = DATA DATE (Order);\r\nnumber 'Number' = DATA STRING[100] (Order);\r\n\r\nCONSTRAINT isForbidden(book(Order o))\r\n    CHECKED BY book MESSAGE 'It is forbidden to choose this book';\r\n\r\nFORM booksByGenre\r\n     OBJECTS g = Genre PANEL\r\n     PROPERTIES (g) name\r\n     OBJECTS b = Book\r\n     PROPERTIES (b) name\r\n;\r\n\r\n\r\nFORM orders 'Orders'\r\n    OBJECTS g = Genre PANEL\r\n    PROPERTIES (g) name\r\n\r\n    OBJECTS o = Order\r\n    PROPERTIES(o) READONLY date, number\r\n    FILTERS g == genre(book(o))\r\n;\r\n\r\nNAVIGATOR {\r\n    NEW orders;\r\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"We need to replace the book selection mechanism on the order form so that the genre selection form is called. Additional requirements:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The genre specified in the order form must be set as default value for the filter by genre"}),"\n",(0,o.jsx)(n.li,{children:"The current book from the order must be set as default value (if it has been selected)"}),"\n",(0,o.jsx)(n.li,{children:'The book in the order must be resettable (i. e. it must be possible to set the "Undefined" value)'}),"\n",(0,o.jsx)(n.li,{children:"Only allowed books can be selected"}),"\n",(0,o.jsx)(n.li,{children:"Group change, copy&paste, and similar features must also be supported for the field."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"solution-1",children:"Solution"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lsf",children:'changeNameBook(Genre g, Order o)  {\r\n    // (automatically wrapped in REQUEST, that is, group adjustments, PASTE, etc. are available)\r\n    DIALOG booksByGenre OBJECTS \r\n          g = g NULL, // NULL input allowed\r\n          b = book(o) NULL INPUT bk NULL CONSTRAINTFILTER\r\n          // book(o) NULL - substituting book(o) to the input (if necessary, the input can be omitted, that is, \r\n          //   the user can simply write b INPUT ..., which in turn is equivalent to b=NULL NULL INPUT ...)\r\n          // INPUT bk NULL - returning the value of this object "to parameter" bk (return NULL is allowed, that is, \r\n          //   there will be a reset button). Since the TO option is not specified, the result will be written \r\n          //   to the requestedObject\r\n          // CONSTRAINTFILTER - taking into account the constraints for object b on the assumption that the result \r\n          //   will be written to the property passed to the input (in this case book(o)),\r\n          //   if necessary, another expression can be specified in the form CONSTRAINTFILTER = dataBook(o)\r\n    DO // checking for requestCanceled\r\n        book(o) <- bk;\r\n}\r\n\r\nEXTEND FORM orders\r\n    PROPERTIES (o) nameBook ON CHANGE changeNameBook(g, o)\r\n;\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var o=r(96540);const t={},a=o.createContext(t);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);