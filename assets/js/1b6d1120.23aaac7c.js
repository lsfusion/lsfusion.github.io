"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["77078"],{82911:function(e,n,t){t.r(n),t.d(n,{default:()=>d,frontMatter:()=>a,metadata:()=>s,assets:()=>r,toc:()=>c,contentTitle:()=>l});var s=JSON.parse('{"id":"Comments","title":"Comments","description":"Comments in a programming language allow you to add textual explanations and notes directly into the code without affecting its execution. In the lsFusion language, there are two types of comments: line comments and block comments.","source":"@site/docs/Comments.md","sourceDirName":".","slug":"/Comments","permalink":"/Comments","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/master/docs/en/Comments.md","tags":[],"version":"current","lastUpdatedAt":1723550642000,"frontMatter":{"title":"Comments"},"sidebar":"learn","previous":{"title":"Empty statement","permalink":"/Empty_statement"},"next":{"title":"Coding conventions","permalink":"/Coding_conventions"}}'),o=t("85893"),i=t("50065");let a={title:"Comments"},l=void 0,r={},c=[{value:"Line Comments",id:"line-comments",level:3},{value:"Examples",id:"examples",level:4},{value:"Block Comments",id:"block-comments",level:3},{value:"Examples",id:"examples-1",level:4}];function m(e){let n={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Comments in a programming language allow you to add textual explanations and notes directly into the code without affecting its execution. In the ",(0,o.jsx)(n.strong,{children:"lsFusion"})," language, there are two types of comments: line comments and block comments."]}),"\n",(0,o.jsx)(n.h3,{id:"line-comments",children:"Line Comments"}),"\n",(0,o.jsxs)(n.p,{children:["Line comments are marked by two slashes ",(0,o.jsx)(n.code,{children:"//"}),". Everything that follows these symbols until the end of the line is treated as a comment and is ignored by the interpreter."]}),"\n",(0,o.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lsf",children:"// The version number should be increased when the API changes\napiVersion() = 23;\n\napiVersion() = 23; // The version number should be increased when the API changes\n"})}),"\n",(0,o.jsx)(n.h3,{id:"block-comments",children:"Block Comments"}),"\n",(0,o.jsxs)(n.p,{children:["Block comments allow for more detailed explanations and can also be used to comment out portions of code within a single line. Block comments are enclosed between the sequences ",(0,o.jsx)(n.code,{children:"/*"})," and ",(0,o.jsx)(n.code,{children:"*/"}),". Everything between these markers is treated as a comment."]}),"\n",(0,o.jsx)(n.h4,{id:"examples-1",children:"Examples"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lsf",children:"REQUIRE System, Scheduler, Service, Backup, /*Eval, Chat,*/ SystemEvents;\n\n/*\nThe version number should be increased when the API changes.\nThis is necessary for correct operation.\n*/\napiVersion() = 23;\n"})})]})}function d(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return a}});var s=t(67294);let o={},i=s.createContext(o);function a(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);