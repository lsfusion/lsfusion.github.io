"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([["3947"],{98171:function(e,r,o){o.r(r),o.d(r,{default:()=>h,frontMatter:()=>i,metadata:()=>n,assets:()=>c,toc:()=>a,contentTitle:()=>d});var n=JSON.parse('{"id":"Property_operators","title":"Property operators","description":"Property operator is a syntax construct that describes an operator creating a property.","source":"@site/versioned_docs/version-v4/Property_operators.md","sourceDirName":".","slug":"/Property_operators","permalink":"/v4/Property_operators","draft":false,"unlisted":false,"editUrl":"https://github.com/lsfusion/platform/edit/v4/docs/en/Property_operators.md","tags":[],"version":"v4","lastUpdatedAt":1640850738000,"frontMatter":{"title":"Property operators"},"sidebar":"learn","previous":{"title":"Operator priority","permalink":"/v4/Operator_priority"},"next":{"title":"Arithmetic operators","permalink":"/v4/Arithmetic_operators"}}'),t=o("85893"),s=o("50065");let i={title:"Property operators"},d=void 0,c={},a=[{value:"Context dependent operators",id:"context-dependent-operators",level:3},{value:"Context independent operators",id:"contextindependent",level:3}];function l(e){let r={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.em,{children:"Property operator"})," is a syntax construct that describes an ",(0,t.jsx)(r.a,{href:"/v4/Property_operators_paradigm",children:"operator"})," creating a ",(0,t.jsx)(r.a,{href:"/v4/Properties",children:"property"}),"."]}),"\n",(0,t.jsxs)(r.p,{children:["Property operators can be divided into ",(0,t.jsx)(r.em,{children:"context dependent"})," and ",(0,t.jsx)(r.em,{children:"context independent"}),"."]}),"\n",(0,t.jsx)(r.h3,{id:"context-dependent-operators",children:"Context dependent operators"}),"\n",(0,t.jsxs)(r.p,{children:["Context dependent property operators can be part of ",(0,t.jsx)(r.a,{href:"/v4/Expression",children:"expressions"})," and use common parameters (context). These operators are:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"/v4/Arithmetic_operators",children:"Arithmetic operators"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/Brackets_operator",children:[(0,t.jsx)(r.code,{children:"[]"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/ACTIVE_TAB_operator",children:[(0,t.jsx)(r.code,{children:"ACTIVE TAB"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/AGGR_operator",children:[(0,t.jsx)(r.code,{children:"AGGR"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/CASE_operator",children:[(0,t.jsx)(r.code,{children:"CASE"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/CLASS_operator",children:[(0,t.jsx)(r.code,{children:"CLASS"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/CONCAT_operator",children:[(0,t.jsx)(r.code,{children:"CONCAT"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/EXCLUSIVE_operator",children:[(0,t.jsx)(r.code,{children:"EXCLUSIVE"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/IF_operator",children:[(0,t.jsx)(r.code,{children:"IF"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/IF_..._THEN_operator",children:[(0,t.jsx)(r.code,{children:"IF ... THEN"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/JOIN_operator",children:[(0,t.jsx)(r.code,{children:"JOIN"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/MAX_operator",children:[(0,t.jsx)(r.code,{children:"MAX"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/MIN_operator",children:[(0,t.jsx)(r.code,{children:"MIN"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/MULTI_operator",children:[(0,t.jsx)(r.code,{children:"MULTI"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/OVERRIDE_operator",children:[(0,t.jsx)(r.code,{children:"OVERRIDE"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/PARTITION_operator",children:[(0,t.jsx)(r.code,{children:"PARTITION"})," operator"]})}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsxs)(r.a,{href:"/v4/GROUP_operator",children:[(0,t.jsx)(r.code,{children:"GROUP"})," operator"]})," (without ",(0,t.jsx)(r.code,{children:"BY"})," block)"]}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/PREV_operator",children:[(0,t.jsx)(r.code,{children:"PREV"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/RECURSION_operator",children:[(0,t.jsx)(r.code,{children:"RECURSION"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/STRUCT_operator",children:[(0,t.jsx)(r.code,{children:"STRUCT"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/UNGROUP_operator",children:[(0,t.jsx)(r.code,{children:"UNGROUP"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"/v4/Type_conversion_operator",children:"Type conversion operator"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/AND_OR_NOT_XOR_operators",children:[(0,t.jsx)(r.code,{children:"AND"}),", ",(0,t.jsx)(r.code,{children:"OR"}),", ",(0,t.jsx)(r.code,{children:"NOT"}),", ",(0,t.jsx)(r.code,{children:"XOR"})," operators"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/IS_AS_operators",children:[(0,t.jsx)(r.code,{children:"IS"}),", ",(0,t.jsx)(r.code,{children:"AS"})," operators"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"/v4/Change_operators",children:"Change operators"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"/v4/Comparison_operators",children:"Comparison operators"})}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"contextindependent",children:"Context independent operators"}),"\n",(0,t.jsxs)(r.p,{children:["Context independent property operators differ from the context dependent ones in that they do not just use the upper parameters but define the parameters themselves. As a result, they cannot be part of expressions and can only be used in the ",(0,t.jsxs)(r.a,{href:"/v4/=_statement",children:[(0,t.jsx)(r.code,{children:"="})," statement"]})," and the ",(0,t.jsxs)(r.a,{href:"/v4/JOIN_operator",children:[(0,t.jsx)(r.code,{children:"JOIN"})," operator"]}),":"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/DATA_operator",children:[(0,t.jsx)(r.code,{children:"DATA"})," operator"]})}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsxs)(r.a,{href:"/v4/GROUP_operator",children:[(0,t.jsx)(r.code,{children:"GROUP"})," operator"]})," (with ",(0,t.jsx)(r.code,{children:"BY"})," block)"]}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/FORMULA_operator",children:[(0,t.jsx)(r.code,{children:"FORMULA"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsxs)(r.a,{href:"/v4/ABSTRACT_operator",children:[(0,t.jsx)(r.code,{children:"ABSTRACT"})," operator"]})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"/v4/Object_group_operator",children:"Object group operators"})}),"\n"]})]})}function h(e={}){let{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},50065:function(e,r,o){o.d(r,{Z:function(){return d},a:function(){return i}});var n=o(67294);let t={},s=n.createContext(t);function i(e){let r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);