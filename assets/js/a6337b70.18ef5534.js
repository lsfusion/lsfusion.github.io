(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[94643],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||l[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},64431:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=n(22122),a=n(19756),o=(n(67294),n(3905)),i={title:"META instruction"},c={unversionedId:"META_instruction",id:"META_instruction",isDocsHomePage:!1,title:"META instruction",description:"The META instruction creates a new\xa0metacode.",source:"@site/docs/META_instruction.md",sourceDirName:".",slug:"/META_instruction",permalink:"/next/META_instruction",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/META_instruction.md",version:"current",lastUpdatedAt:1617631212,formattedLastUpdatedAt:"4/5/2021",frontMatter:{title:"META instruction"},sidebar:"learn",previous:{title:"ACTION+ instruction",permalink:"/next/ACTION+_instruction"},next:{title:"Instruction@",permalink:"/next/Instruction_"}},p=[{value:"Syntax",id:"syntax",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]}],s={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"META")," instruction creates a new\xa0",(0,o.kt)("a",{parentName:"p",href:"/next/Metaprogramming#metacode"},"metacode"),"."),(0,o.kt)("h3",{id:"syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"META name(param1, ..., paramN)\n    statement1\n    ...\n    statementM\nEND\n")),(0,o.kt)("h3",{id:"description"},"Description"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"META")," instruction declares a new metacode and adds it to the current ",(0,o.kt)("a",{parentName:"p",href:"/next/Modules"},"module"),".\xa0"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"META")," instruction is an exception - it is not supposed to end with a colon. \xa0"),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"name")),(0,o.kt)("p",null,"Metacode name. ",(0,o.kt)("a",{parentName:"p",href:"/next/IDs"},"Simple ID"),". Must be unique within the current namespace among metacodes with the same number of parameters."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"param1, ..., paramN")),(0,o.kt)("p",null,"List of metacode parameters. Each parameter is defined by a simple ID. The list cannot be empty."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"statement1 ... statementM")),(0,o.kt)("p",null,"A sequence of \xa0",(0,o.kt)("a",{parentName:"p",href:"/next/Instructions"},"instructions")," represented by a block of code. Instructions may contain ",(0,o.kt)("a",{parentName:"p",href:"/next/Metaprogramming#concat"},"special operations ","#","#"," and ","#","#","#")," used for concatenating ",(0,o.kt)("a",{parentName:"p",href:"/next/Tokens"},"lexemes"),". Instructions cannot include another ",(0,o.kt)("strong",{parentName:"p"},"META")," instruction."),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lsf"},"META objectProperties(object, type, caption)\n    object##Name 'Name'##caption = DATA BPSTRING[100](###object-broken); // capitalizing the first letter\n    object##Type 'Type'##caption = DATA type (###object-broken);\n    object##Value 'Cost'##caption = DATA INTEGER (###object-broken);\nEND\n\nMETA objectProperties(object, type)\n    @objectProperties(object, type, '');\nEND\n")))}u.isMDXComponent=!0}}]);